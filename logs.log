2022-11-15 22:58:52,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-15 22:58:52,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-15 22:58:52,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-15 22:58:52,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-11-15 22:58:54,894:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-11-15 23:00:11,576:INFO:PyCaret ClassificationExperiment
2022-11-15 23:00:11,576:INFO:Logging name: clf-default-name
2022-11-15 23:00:11,576:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:00:11,576:INFO:version 3.0.0.rc4
2022-11-15 23:00:11,576:INFO:Initializing setup()
2022-11-15 23:00:11,576:INFO:self.USI: 02b9
2022-11-15 23:00:11,576:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:00:11,576:INFO:Checking environment
2022-11-15 23:00:11,576:INFO:python_version: 3.9.0
2022-11-15 23:00:11,576:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:00:11,577:INFO:machine: AMD64
2022-11-15 23:00:11,577:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:00:11,577:INFO:Memory: svmem(total=7968530432, available=429871104, percent=94.6, used=7538659328, free=429871104)
2022-11-15 23:00:11,577:INFO:Physical Core: 6
2022-11-15 23:00:11,577:INFO:Logical Core: 12
2022-11-15 23:00:11,577:INFO:Checking libraries
2022-11-15 23:00:11,577:INFO:System:
2022-11-15 23:00:11,578:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:00:11,578:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:00:11,578:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:00:11,578:INFO:PyCaret required dependencies:
2022-11-15 23:00:11,578:INFO:                 pip: 22.1.2
2022-11-15 23:00:11,578:INFO:          setuptools: 60.10.0
2022-11-15 23:00:11,578:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:00:11,578:INFO:             IPython: 8.5.0
2022-11-15 23:00:11,578:INFO:          ipywidgets: 8.0.2
2022-11-15 23:00:11,578:INFO:                tqdm: 4.64.1
2022-11-15 23:00:11,578:INFO:               numpy: 1.22.4
2022-11-15 23:00:11,578:INFO:              pandas: 1.4.4
2022-11-15 23:00:11,578:INFO:              jinja2: 3.1.2
2022-11-15 23:00:11,578:INFO:               scipy: 1.8.1
2022-11-15 23:00:11,578:INFO:              joblib: 1.2.0
2022-11-15 23:00:11,578:INFO:             sklearn: 1.1.2
2022-11-15 23:00:11,578:INFO:                pyod: 1.0.6
2022-11-15 23:00:11,578:INFO:            imblearn: 0.9.1
2022-11-15 23:00:11,578:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:00:11,578:INFO:            lightgbm: 3.3.3
2022-11-15 23:00:11,578:INFO:               numba: 0.55.2
2022-11-15 23:00:11,578:INFO:            requests: 2.28.1
2022-11-15 23:00:11,578:INFO:          matplotlib: 3.6.0
2022-11-15 23:00:11,578:INFO:          scikitplot: 0.3.7
2022-11-15 23:00:11,578:INFO:         yellowbrick: 1.5
2022-11-15 23:00:11,578:INFO:              plotly: 5.11.0
2022-11-15 23:00:11,578:INFO:             kaleido: 0.2.1
2022-11-15 23:00:11,579:INFO:         statsmodels: 0.13.5
2022-11-15 23:00:11,579:INFO:              sktime: 0.13.4
2022-11-15 23:00:11,579:INFO:               tbats: 1.1.1
2022-11-15 23:00:11,579:INFO:            pmdarima: 1.8.5
2022-11-15 23:00:11,579:INFO:              psutil: 5.9.2
2022-11-15 23:00:11,579:INFO:PyCaret optional dependencies:
2022-11-15 23:00:11,588:INFO:                shap: 0.41.0
2022-11-15 23:00:11,588:INFO:           interpret: 0.2.7
2022-11-15 23:00:11,588:INFO:                umap: Not installed
2022-11-15 23:00:11,588:INFO:    pandas_profiling: Not installed
2022-11-15 23:00:11,588:INFO:  explainerdashboard: Not installed
2022-11-15 23:00:11,588:INFO:             autoviz: Not installed
2022-11-15 23:00:11,588:INFO:           fairlearn: Not installed
2022-11-15 23:00:11,588:INFO:             xgboost: 1.7.1
2022-11-15 23:00:11,588:INFO:            catboost: Not installed
2022-11-15 23:00:11,588:INFO:              kmodes: Not installed
2022-11-15 23:00:11,588:INFO:             mlxtend: Not installed
2022-11-15 23:00:11,588:INFO:       statsforecast: Not installed
2022-11-15 23:00:11,588:INFO:        tune_sklearn: Not installed
2022-11-15 23:00:11,588:INFO:                 ray: Not installed
2022-11-15 23:00:11,588:INFO:            hyperopt: Not installed
2022-11-15 23:00:11,588:INFO:              optuna: Not installed
2022-11-15 23:00:11,588:INFO:               skopt: Not installed
2022-11-15 23:00:11,588:INFO:              mlflow: Not installed
2022-11-15 23:00:11,588:INFO:              gradio: Not installed
2022-11-15 23:00:11,588:INFO:             fastapi: Not installed
2022-11-15 23:00:11,588:INFO:             uvicorn: Not installed
2022-11-15 23:00:11,588:INFO:              m2cgen: Not installed
2022-11-15 23:00:11,589:INFO:           evidently: Not installed
2022-11-15 23:00:11,589:INFO:                nltk: 3.7
2022-11-15 23:00:11,589:INFO:            pyLDAvis: Not installed
2022-11-15 23:00:11,589:INFO:              gensim: Not installed
2022-11-15 23:00:11,589:INFO:               spacy: Not installed
2022-11-15 23:00:11,589:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:00:11,589:INFO:            textblob: Not installed
2022-11-15 23:00:11,589:INFO:               fugue: Not installed
2022-11-15 23:00:11,589:INFO:           streamlit: Not installed
2022-11-15 23:00:11,589:INFO:             prophet: Not installed
2022-11-15 23:00:11,589:INFO:None
2022-11-15 23:00:11,589:INFO:Set up data.
2022-11-15 23:00:11,601:INFO:Set up train/test split.
2022-11-15 23:00:11,619:INFO:Set up index.
2022-11-15 23:00:11,620:INFO:Assigning column types.
2022-11-15 23:00:11,624:INFO:Set up folding strategy.
2022-11-15 23:00:11,624:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:00:11,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:00:11,678:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:00:11,717:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:11,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:11,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:00:11,911:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:00:11,941:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:11,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:11,944:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:00:11,993:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:00:12,024:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:12,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:12,076:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:00:12,107:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:12,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:12,110:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:00:12,190:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:12,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:12,274:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:12,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:12,280:INFO:Preparing preprocessing pipeline...
2022-11-15 23:00:12,282:INFO:Set up label encoding.
2022-11-15 23:00:12,282:INFO:Set up simple imputation.
2022-11-15 23:00:12,282:INFO:Set up variance threshold.
2022-11-15 23:00:12,347:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:00:12,352:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['N', 'P', 'K', 'temperature',
                                             'humidity', 'ph', 'rainfall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:00:12,352:INFO:Creating final display dataframe.
2022-11-15 23:00:12,647:INFO:Setup display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13       Low variance threshold   
14               Fold Generator   
15                  Fold Number   
16                     CPU Jobs   
17                      Use GPU   
18               Log Experiment   
19              Experiment Name   
20                          USI   

                                                Value  
0                                                4702  
1                                               label  
2                                          Multiclass  
3   apple: 0, banana: 1, blackgram: 2, chickpea: 3...  
4                                           (2200, 8)  
5                                           (2200, 8)  
6                                           (1539, 8)  
7                                            (661, 8)  
8                                                   7  
9                                                True  
10                                             simple  
11                                               mean  
12                                           constant  
13                                                  0  
14                                    StratifiedKFold  
15                                                 10  
16                                                 -1  
17                                              False  
18                                              False  
19                                   clf-default-name  
20                                               02b9  
2022-11-15 23:00:12,740:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:12,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:12,823:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:12,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:12,836:INFO:setup() successfully completed in 1.26s...............
2022-11-15 23:00:53,991:INFO:PyCaret ClassificationExperiment
2022-11-15 23:00:53,991:INFO:Logging name: clf-default-name
2022-11-15 23:00:53,991:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:00:53,991:INFO:version 3.0.0.rc4
2022-11-15 23:00:53,991:INFO:Initializing setup()
2022-11-15 23:00:53,991:INFO:self.USI: 3d0d
2022-11-15 23:00:53,991:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:00:53,991:INFO:Checking environment
2022-11-15 23:00:53,991:INFO:python_version: 3.9.0
2022-11-15 23:00:53,991:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:00:53,991:INFO:machine: AMD64
2022-11-15 23:00:53,991:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:00:53,991:INFO:Memory: svmem(total=7968530432, available=408682496, percent=94.9, used=7559847936, free=408682496)
2022-11-15 23:00:53,991:INFO:Physical Core: 6
2022-11-15 23:00:53,991:INFO:Logical Core: 12
2022-11-15 23:00:53,991:INFO:Checking libraries
2022-11-15 23:00:53,992:INFO:System:
2022-11-15 23:00:53,992:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:00:53,992:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:00:53,992:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:00:53,992:INFO:PyCaret required dependencies:
2022-11-15 23:00:53,992:INFO:                 pip: 22.1.2
2022-11-15 23:00:53,992:INFO:          setuptools: 60.10.0
2022-11-15 23:00:53,992:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:00:53,992:INFO:             IPython: 8.5.0
2022-11-15 23:00:53,992:INFO:          ipywidgets: 8.0.2
2022-11-15 23:00:53,993:INFO:                tqdm: 4.64.1
2022-11-15 23:00:53,993:INFO:               numpy: 1.22.4
2022-11-15 23:00:53,993:INFO:              pandas: 1.4.4
2022-11-15 23:00:53,993:INFO:              jinja2: 3.1.2
2022-11-15 23:00:53,993:INFO:               scipy: 1.8.1
2022-11-15 23:00:53,993:INFO:              joblib: 1.2.0
2022-11-15 23:00:53,993:INFO:             sklearn: 1.1.2
2022-11-15 23:00:53,993:INFO:                pyod: 1.0.6
2022-11-15 23:00:53,993:INFO:            imblearn: 0.9.1
2022-11-15 23:00:53,993:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:00:53,993:INFO:            lightgbm: 3.3.3
2022-11-15 23:00:53,993:INFO:               numba: 0.55.2
2022-11-15 23:00:53,993:INFO:            requests: 2.28.1
2022-11-15 23:00:53,994:INFO:          matplotlib: 3.6.0
2022-11-15 23:00:53,994:INFO:          scikitplot: 0.3.7
2022-11-15 23:00:53,994:INFO:         yellowbrick: 1.5
2022-11-15 23:00:53,994:INFO:              plotly: 5.11.0
2022-11-15 23:00:53,994:INFO:             kaleido: 0.2.1
2022-11-15 23:00:53,994:INFO:         statsmodels: 0.13.5
2022-11-15 23:00:53,994:INFO:              sktime: 0.13.4
2022-11-15 23:00:53,994:INFO:               tbats: 1.1.1
2022-11-15 23:00:53,994:INFO:            pmdarima: 1.8.5
2022-11-15 23:00:53,994:INFO:              psutil: 5.9.2
2022-11-15 23:00:53,994:INFO:PyCaret optional dependencies:
2022-11-15 23:00:53,994:INFO:                shap: 0.41.0
2022-11-15 23:00:53,994:INFO:           interpret: 0.2.7
2022-11-15 23:00:53,994:INFO:                umap: Not installed
2022-11-15 23:00:53,994:INFO:    pandas_profiling: Not installed
2022-11-15 23:00:53,994:INFO:  explainerdashboard: Not installed
2022-11-15 23:00:53,994:INFO:             autoviz: Not installed
2022-11-15 23:00:53,994:INFO:           fairlearn: Not installed
2022-11-15 23:00:53,994:INFO:             xgboost: 1.7.1
2022-11-15 23:00:53,995:INFO:            catboost: Not installed
2022-11-15 23:00:53,995:INFO:              kmodes: Not installed
2022-11-15 23:00:53,995:INFO:             mlxtend: Not installed
2022-11-15 23:00:53,995:INFO:       statsforecast: Not installed
2022-11-15 23:00:53,995:INFO:        tune_sklearn: Not installed
2022-11-15 23:00:53,995:INFO:                 ray: Not installed
2022-11-15 23:00:53,995:INFO:            hyperopt: Not installed
2022-11-15 23:00:53,995:INFO:              optuna: Not installed
2022-11-15 23:00:53,995:INFO:               skopt: Not installed
2022-11-15 23:00:53,995:INFO:              mlflow: Not installed
2022-11-15 23:00:53,995:INFO:              gradio: Not installed
2022-11-15 23:00:53,995:INFO:             fastapi: Not installed
2022-11-15 23:00:53,995:INFO:             uvicorn: Not installed
2022-11-15 23:00:53,995:INFO:              m2cgen: Not installed
2022-11-15 23:00:53,995:INFO:           evidently: Not installed
2022-11-15 23:00:53,995:INFO:                nltk: 3.7
2022-11-15 23:00:53,995:INFO:            pyLDAvis: Not installed
2022-11-15 23:00:53,995:INFO:              gensim: Not installed
2022-11-15 23:00:53,995:INFO:               spacy: Not installed
2022-11-15 23:00:53,995:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:00:53,995:INFO:            textblob: Not installed
2022-11-15 23:00:53,995:INFO:               fugue: Not installed
2022-11-15 23:00:53,996:INFO:           streamlit: Not installed
2022-11-15 23:00:53,996:INFO:             prophet: Not installed
2022-11-15 23:00:53,996:INFO:None
2022-11-15 23:00:53,996:INFO:Set up data.
2022-11-15 23:00:54,001:INFO:Set up train/test split.
2022-11-15 23:00:54,005:INFO:Set up index.
2022-11-15 23:00:54,005:INFO:Assigning column types.
2022-11-15 23:00:54,009:INFO:Set up folding strategy.
2022-11-15 23:00:54,010:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:00:54,058:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:00:54,059:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:00:54,088:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:54,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:54,140:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:00:54,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:00:54,175:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:54,178:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:54,179:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:00:54,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:00:54,260:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:54,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:54,314:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:00:54,345:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:54,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:54,348:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:00:54,430:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:54,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:54,512:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:54,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:54,516:INFO:Preparing preprocessing pipeline...
2022-11-15 23:00:54,517:INFO:Set up label encoding.
2022-11-15 23:00:54,517:INFO:Set up simple imputation.
2022-11-15 23:00:54,517:INFO:Set up variance threshold.
2022-11-15 23:00:54,579:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:00:54,584:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['fixed acidity',
                                             'volatile acidity', 'citric acid',
                                             'residual sugar', 'chlorides',
                                             'free sulfur dioxide',
                                             'total su...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:00:54,584:INFO:Creating final display dataframe.
2022-11-15 23:00:54,879:INFO:Setup display_container:                     Description                               Value
0                    Session id                                2585
1                        Target                             quality
2                   Target type                          Multiclass
3                Target mapping  3: 0, 4: 1, 5: 2, 6: 3, 7: 4, 8: 5
4           Original data shape                          (1596, 12)
5        Transformed data shape                          (1596, 12)
6   Transformed train set shape                          (1117, 12)
7    Transformed test set shape                           (479, 12)
8              Numeric features                                  11
9                    Preprocess                                True
10              Imputation type                              simple
11           Numeric imputation                                mean
12       Categorical imputation                            constant
13       Low variance threshold                                   0
14               Fold Generator                     StratifiedKFold
15                  Fold Number                                  10
16                     CPU Jobs                                  -1
17                      Use GPU                               False
18               Log Experiment                               False
19              Experiment Name                    clf-default-name
20                          USI                                3d0d
2022-11-15 23:00:54,965:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:54,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:55,050:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:00:55,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:00:55,062:INFO:setup() successfully completed in 1.07s...............
2022-11-15 23:01:26,529:INFO:PyCaret ClassificationExperiment
2022-11-15 23:01:26,529:INFO:Logging name: clf-default-name
2022-11-15 23:01:26,529:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:01:26,529:INFO:version 3.0.0.rc4
2022-11-15 23:01:26,529:INFO:Initializing setup()
2022-11-15 23:01:26,529:INFO:self.USI: 4fb1
2022-11-15 23:01:26,529:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:01:26,529:INFO:Checking environment
2022-11-15 23:01:26,530:INFO:python_version: 3.9.0
2022-11-15 23:01:26,530:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:01:26,530:INFO:machine: AMD64
2022-11-15 23:01:26,530:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:01:26,530:INFO:Memory: svmem(total=7968530432, available=375197696, percent=95.3, used=7593332736, free=375197696)
2022-11-15 23:01:26,530:INFO:Physical Core: 6
2022-11-15 23:01:26,530:INFO:Logical Core: 12
2022-11-15 23:01:26,530:INFO:Checking libraries
2022-11-15 23:01:26,530:INFO:System:
2022-11-15 23:01:26,530:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:01:26,530:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:01:26,530:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:01:26,530:INFO:PyCaret required dependencies:
2022-11-15 23:01:26,530:INFO:                 pip: 22.1.2
2022-11-15 23:01:26,530:INFO:          setuptools: 60.10.0
2022-11-15 23:01:26,530:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:01:26,530:INFO:             IPython: 8.5.0
2022-11-15 23:01:26,530:INFO:          ipywidgets: 8.0.2
2022-11-15 23:01:26,530:INFO:                tqdm: 4.64.1
2022-11-15 23:01:26,530:INFO:               numpy: 1.22.4
2022-11-15 23:01:26,530:INFO:              pandas: 1.4.4
2022-11-15 23:01:26,530:INFO:              jinja2: 3.1.2
2022-11-15 23:01:26,530:INFO:               scipy: 1.8.1
2022-11-15 23:01:26,530:INFO:              joblib: 1.2.0
2022-11-15 23:01:26,530:INFO:             sklearn: 1.1.2
2022-11-15 23:01:26,530:INFO:                pyod: 1.0.6
2022-11-15 23:01:26,530:INFO:            imblearn: 0.9.1
2022-11-15 23:01:26,530:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:01:26,530:INFO:            lightgbm: 3.3.3
2022-11-15 23:01:26,532:INFO:               numba: 0.55.2
2022-11-15 23:01:26,532:INFO:            requests: 2.28.1
2022-11-15 23:01:26,532:INFO:          matplotlib: 3.6.0
2022-11-15 23:01:26,532:INFO:          scikitplot: 0.3.7
2022-11-15 23:01:26,532:INFO:         yellowbrick: 1.5
2022-11-15 23:01:26,532:INFO:              plotly: 5.11.0
2022-11-15 23:01:26,532:INFO:             kaleido: 0.2.1
2022-11-15 23:01:26,532:INFO:         statsmodels: 0.13.5
2022-11-15 23:01:26,532:INFO:              sktime: 0.13.4
2022-11-15 23:01:26,532:INFO:               tbats: 1.1.1
2022-11-15 23:01:26,532:INFO:            pmdarima: 1.8.5
2022-11-15 23:01:26,532:INFO:              psutil: 5.9.2
2022-11-15 23:01:26,532:INFO:PyCaret optional dependencies:
2022-11-15 23:01:26,533:INFO:                shap: 0.41.0
2022-11-15 23:01:26,533:INFO:           interpret: 0.2.7
2022-11-15 23:01:26,533:INFO:                umap: Not installed
2022-11-15 23:01:26,533:INFO:    pandas_profiling: Not installed
2022-11-15 23:01:26,533:INFO:  explainerdashboard: Not installed
2022-11-15 23:01:26,533:INFO:             autoviz: Not installed
2022-11-15 23:01:26,533:INFO:           fairlearn: Not installed
2022-11-15 23:01:26,533:INFO:             xgboost: 1.7.1
2022-11-15 23:01:26,533:INFO:            catboost: Not installed
2022-11-15 23:01:26,533:INFO:              kmodes: Not installed
2022-11-15 23:01:26,533:INFO:             mlxtend: Not installed
2022-11-15 23:01:26,533:INFO:       statsforecast: Not installed
2022-11-15 23:01:26,533:INFO:        tune_sklearn: Not installed
2022-11-15 23:01:26,533:INFO:                 ray: Not installed
2022-11-15 23:01:26,533:INFO:            hyperopt: Not installed
2022-11-15 23:01:26,533:INFO:              optuna: Not installed
2022-11-15 23:01:26,533:INFO:               skopt: Not installed
2022-11-15 23:01:26,533:INFO:              mlflow: Not installed
2022-11-15 23:01:26,533:INFO:              gradio: Not installed
2022-11-15 23:01:26,533:INFO:             fastapi: Not installed
2022-11-15 23:01:26,533:INFO:             uvicorn: Not installed
2022-11-15 23:01:26,533:INFO:              m2cgen: Not installed
2022-11-15 23:01:26,533:INFO:           evidently: Not installed
2022-11-15 23:01:26,533:INFO:                nltk: 3.7
2022-11-15 23:01:26,533:INFO:            pyLDAvis: Not installed
2022-11-15 23:01:26,533:INFO:              gensim: Not installed
2022-11-15 23:01:26,534:INFO:               spacy: Not installed
2022-11-15 23:01:26,534:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:01:26,534:INFO:            textblob: Not installed
2022-11-15 23:01:26,534:INFO:               fugue: Not installed
2022-11-15 23:01:26,534:INFO:           streamlit: Not installed
2022-11-15 23:01:26,534:INFO:             prophet: Not installed
2022-11-15 23:01:26,534:INFO:None
2022-11-15 23:01:26,534:INFO:Set up data.
2022-11-15 23:01:26,540:INFO:Set up train/test split.
2022-11-15 23:01:26,545:INFO:Set up index.
2022-11-15 23:01:26,545:INFO:Assigning column types.
2022-11-15 23:01:26,548:INFO:Set up folding strategy.
2022-11-15 23:01:26,548:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:01:26,601:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:01:26,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:01:26,632:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:01:26,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:01:26,684:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:01:26,685:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:01:26,715:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:01:26,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:01:26,719:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:01:26,769:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:01:26,798:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:01:26,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:01:26,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:01:26,883:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:01:26,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:01:26,886:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:01:26,964:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:01:26,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:01:27,046:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:01:27,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:01:27,050:INFO:Preparing preprocessing pipeline...
2022-11-15 23:01:27,051:INFO:Set up simple imputation.
2022-11-15 23:01:27,051:INFO:Set up variance threshold.
2022-11-15 23:01:27,089:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:01:27,093:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:01:27,093:INFO:Creating final display dataframe.
2022-11-15 23:01:27,308:INFO:Setup display_container:                     Description             Value
0                    Session id              1596
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation          constant
12       Low variance threshold                 0
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              4fb1
2022-11-15 23:01:27,395:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:01:27,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:01:27,478:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:01:27,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:01:27,488:INFO:setup() successfully completed in 0.96s...............
2022-11-15 23:05:36,117:INFO:Initializing compare_models()
2022-11-15 23:05:36,118:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:05:36,118:INFO:Checking exceptions
2022-11-15 23:05:36,124:INFO:Preparing display monitor
2022-11-15 23:05:36,188:INFO:Initializing Logistic Regression
2022-11-15 23:05:36,188:INFO:Total runtime is 0.0 minutes
2022-11-15 23:05:36,197:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:36,197:INFO:Initializing create_model()
2022-11-15 23:05:36,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:36,198:INFO:Checking exceptions
2022-11-15 23:05:36,199:INFO:Importing libraries
2022-11-15 23:05:36,200:INFO:Copying training dataset
2022-11-15 23:05:36,204:INFO:Defining folds
2022-11-15 23:05:36,204:INFO:Declaring metric variables
2022-11-15 23:05:36,208:INFO:Importing untrained model
2022-11-15 23:05:36,214:INFO:Logistic Regression Imported successfully
2022-11-15 23:05:36,226:INFO:Starting cross validation
2022-11-15 23:05:36,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:46,385:INFO:Calculating mean and std
2022-11-15 23:05:46,392:INFO:Creating metrics dataframe
2022-11-15 23:05:46,406:INFO:Uploading results into container
2022-11-15 23:05:46,409:INFO:Uploading model into container now
2022-11-15 23:05:46,411:INFO:master_model_container: 1
2022-11-15 23:05:46,412:INFO:display_container: 2
2022-11-15 23:05:46,413:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:05:46,413:INFO:create_model() successfully completed......................................
2022-11-15 23:05:46,700:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:46,700:INFO:Creating metrics dataframe
2022-11-15 23:05:46,708:INFO:Initializing K Neighbors Classifier
2022-11-15 23:05:46,708:INFO:Total runtime is 0.17533675829569498 minutes
2022-11-15 23:05:46,712:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:46,713:INFO:Initializing create_model()
2022-11-15 23:05:46,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:46,713:INFO:Checking exceptions
2022-11-15 23:05:46,715:INFO:Importing libraries
2022-11-15 23:05:46,715:INFO:Copying training dataset
2022-11-15 23:05:46,718:INFO:Defining folds
2022-11-15 23:05:46,719:INFO:Declaring metric variables
2022-11-15 23:05:46,725:INFO:Importing untrained model
2022-11-15 23:05:46,733:INFO:K Neighbors Classifier Imported successfully
2022-11-15 23:05:46,746:INFO:Starting cross validation
2022-11-15 23:05:46,747:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:49,760:INFO:Calculating mean and std
2022-11-15 23:05:49,763:INFO:Creating metrics dataframe
2022-11-15 23:05:49,766:INFO:Uploading results into container
2022-11-15 23:05:49,767:INFO:Uploading model into container now
2022-11-15 23:05:49,767:INFO:master_model_container: 2
2022-11-15 23:05:49,768:INFO:display_container: 2
2022-11-15 23:05:49,768:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-15 23:05:49,769:INFO:create_model() successfully completed......................................
2022-11-15 23:05:49,982:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:49,982:INFO:Creating metrics dataframe
2022-11-15 23:05:49,993:INFO:Initializing Naive Bayes
2022-11-15 23:05:49,993:INFO:Total runtime is 0.2300776998202006 minutes
2022-11-15 23:05:49,997:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:49,997:INFO:Initializing create_model()
2022-11-15 23:05:49,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:49,998:INFO:Checking exceptions
2022-11-15 23:05:50,002:INFO:Importing libraries
2022-11-15 23:05:50,003:INFO:Copying training dataset
2022-11-15 23:05:50,011:INFO:Defining folds
2022-11-15 23:05:50,011:INFO:Declaring metric variables
2022-11-15 23:05:50,020:INFO:Importing untrained model
2022-11-15 23:05:50,027:INFO:Naive Bayes Imported successfully
2022-11-15 23:05:50,037:INFO:Starting cross validation
2022-11-15 23:05:50,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:50,167:INFO:Calculating mean and std
2022-11-15 23:05:50,168:INFO:Creating metrics dataframe
2022-11-15 23:05:50,172:INFO:Uploading results into container
2022-11-15 23:05:50,173:INFO:Uploading model into container now
2022-11-15 23:05:50,174:INFO:master_model_container: 3
2022-11-15 23:05:50,174:INFO:display_container: 2
2022-11-15 23:05:50,175:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:05:50,175:INFO:create_model() successfully completed......................................
2022-11-15 23:05:50,341:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:50,341:INFO:Creating metrics dataframe
2022-11-15 23:05:50,353:INFO:Initializing Decision Tree Classifier
2022-11-15 23:05:50,353:INFO:Total runtime is 0.2360734502474467 minutes
2022-11-15 23:05:50,357:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:50,358:INFO:Initializing create_model()
2022-11-15 23:05:50,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:50,358:INFO:Checking exceptions
2022-11-15 23:05:50,361:INFO:Importing libraries
2022-11-15 23:05:50,361:INFO:Copying training dataset
2022-11-15 23:05:50,365:INFO:Defining folds
2022-11-15 23:05:50,366:INFO:Declaring metric variables
2022-11-15 23:05:50,372:INFO:Importing untrained model
2022-11-15 23:05:50,378:INFO:Decision Tree Classifier Imported successfully
2022-11-15 23:05:50,387:INFO:Starting cross validation
2022-11-15 23:05:50,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:50,513:INFO:Calculating mean and std
2022-11-15 23:05:50,515:INFO:Creating metrics dataframe
2022-11-15 23:05:50,517:INFO:Uploading results into container
2022-11-15 23:05:50,518:INFO:Uploading model into container now
2022-11-15 23:05:50,518:INFO:master_model_container: 4
2022-11-15 23:05:50,518:INFO:display_container: 2
2022-11-15 23:05:50,519:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1596, splitter='best')
2022-11-15 23:05:50,519:INFO:create_model() successfully completed......................................
2022-11-15 23:05:50,701:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:50,701:INFO:Creating metrics dataframe
2022-11-15 23:05:50,710:INFO:Initializing SVM - Linear Kernel
2022-11-15 23:05:50,711:INFO:Total runtime is 0.24204930464426677 minutes
2022-11-15 23:05:50,715:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:50,716:INFO:Initializing create_model()
2022-11-15 23:05:50,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:50,716:INFO:Checking exceptions
2022-11-15 23:05:50,718:INFO:Importing libraries
2022-11-15 23:05:50,718:INFO:Copying training dataset
2022-11-15 23:05:50,724:INFO:Defining folds
2022-11-15 23:05:50,724:INFO:Declaring metric variables
2022-11-15 23:05:50,729:INFO:Importing untrained model
2022-11-15 23:05:50,736:INFO:SVM - Linear Kernel Imported successfully
2022-11-15 23:05:50,746:INFO:Starting cross validation
2022-11-15 23:05:50,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:50,830:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:50,851:INFO:Calculating mean and std
2022-11-15 23:05:50,853:INFO:Creating metrics dataframe
2022-11-15 23:05:50,857:INFO:Uploading results into container
2022-11-15 23:05:50,858:INFO:Uploading model into container now
2022-11-15 23:05:50,858:INFO:master_model_container: 5
2022-11-15 23:05:50,858:INFO:display_container: 2
2022-11-15 23:05:50,859:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1596, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-15 23:05:50,859:INFO:create_model() successfully completed......................................
2022-11-15 23:05:51,032:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:51,032:INFO:Creating metrics dataframe
2022-11-15 23:05:51,042:INFO:Initializing Ridge Classifier
2022-11-15 23:05:51,042:INFO:Total runtime is 0.24756752252578737 minutes
2022-11-15 23:05:51,046:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:51,047:INFO:Initializing create_model()
2022-11-15 23:05:51,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:51,047:INFO:Checking exceptions
2022-11-15 23:05:51,049:INFO:Importing libraries
2022-11-15 23:05:51,050:INFO:Copying training dataset
2022-11-15 23:05:51,055:INFO:Defining folds
2022-11-15 23:05:51,055:INFO:Declaring metric variables
2022-11-15 23:05:51,060:INFO:Importing untrained model
2022-11-15 23:05:51,065:INFO:Ridge Classifier Imported successfully
2022-11-15 23:05:51,076:INFO:Starting cross validation
2022-11-15 23:05:51,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:51,191:INFO:Calculating mean and std
2022-11-15 23:05:51,193:INFO:Creating metrics dataframe
2022-11-15 23:05:51,196:INFO:Uploading results into container
2022-11-15 23:05:51,197:INFO:Uploading model into container now
2022-11-15 23:05:51,197:INFO:master_model_container: 6
2022-11-15 23:05:51,197:INFO:display_container: 2
2022-11-15 23:05:51,198:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=1596, solver='auto', tol=0.001)
2022-11-15 23:05:51,198:INFO:create_model() successfully completed......................................
2022-11-15 23:05:51,366:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:51,367:INFO:Creating metrics dataframe
2022-11-15 23:05:51,379:INFO:Initializing Random Forest Classifier
2022-11-15 23:05:51,379:INFO:Total runtime is 0.2531826456387838 minutes
2022-11-15 23:05:51,384:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:51,384:INFO:Initializing create_model()
2022-11-15 23:05:51,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:51,385:INFO:Checking exceptions
2022-11-15 23:05:51,387:INFO:Importing libraries
2022-11-15 23:05:51,388:INFO:Copying training dataset
2022-11-15 23:05:51,392:INFO:Defining folds
2022-11-15 23:05:51,393:INFO:Declaring metric variables
2022-11-15 23:05:51,398:INFO:Importing untrained model
2022-11-15 23:05:51,404:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:05:51,413:INFO:Starting cross validation
2022-11-15 23:05:51,414:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:52,089:INFO:Calculating mean and std
2022-11-15 23:05:52,091:INFO:Creating metrics dataframe
2022-11-15 23:05:52,095:INFO:Uploading results into container
2022-11-15 23:05:52,097:INFO:Uploading model into container now
2022-11-15 23:05:52,097:INFO:master_model_container: 7
2022-11-15 23:05:52,097:INFO:display_container: 2
2022-11-15 23:05:52,098:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1596, verbose=0, warm_start=False)
2022-11-15 23:05:52,098:INFO:create_model() successfully completed......................................
2022-11-15 23:05:52,268:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:52,268:INFO:Creating metrics dataframe
2022-11-15 23:05:52,278:INFO:Initializing Quadratic Discriminant Analysis
2022-11-15 23:05:52,278:INFO:Total runtime is 0.2681652903556824 minutes
2022-11-15 23:05:52,282:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:52,283:INFO:Initializing create_model()
2022-11-15 23:05:52,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:52,284:INFO:Checking exceptions
2022-11-15 23:05:52,285:INFO:Importing libraries
2022-11-15 23:05:52,286:INFO:Copying training dataset
2022-11-15 23:05:52,291:INFO:Defining folds
2022-11-15 23:05:52,291:INFO:Declaring metric variables
2022-11-15 23:05:52,297:INFO:Importing untrained model
2022-11-15 23:05:52,302:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-15 23:05:52,315:INFO:Starting cross validation
2022-11-15 23:05:52,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:52,439:INFO:Calculating mean and std
2022-11-15 23:05:52,441:INFO:Creating metrics dataframe
2022-11-15 23:05:52,446:INFO:Uploading results into container
2022-11-15 23:05:52,447:INFO:Uploading model into container now
2022-11-15 23:05:52,447:INFO:master_model_container: 8
2022-11-15 23:05:52,448:INFO:display_container: 2
2022-11-15 23:05:52,448:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-15 23:05:52,448:INFO:create_model() successfully completed......................................
2022-11-15 23:05:52,620:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:52,620:INFO:Creating metrics dataframe
2022-11-15 23:05:52,632:INFO:Initializing Ada Boost Classifier
2022-11-15 23:05:52,632:INFO:Total runtime is 0.27406830390294395 minutes
2022-11-15 23:05:52,635:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:52,635:INFO:Initializing create_model()
2022-11-15 23:05:52,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:52,635:INFO:Checking exceptions
2022-11-15 23:05:52,638:INFO:Importing libraries
2022-11-15 23:05:52,639:INFO:Copying training dataset
2022-11-15 23:05:52,642:INFO:Defining folds
2022-11-15 23:05:52,643:INFO:Declaring metric variables
2022-11-15 23:05:52,649:INFO:Importing untrained model
2022-11-15 23:05:52,656:INFO:Ada Boost Classifier Imported successfully
2022-11-15 23:05:52,665:INFO:Starting cross validation
2022-11-15 23:05:52,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:52,941:INFO:Calculating mean and std
2022-11-15 23:05:52,943:INFO:Creating metrics dataframe
2022-11-15 23:05:52,946:INFO:Uploading results into container
2022-11-15 23:05:52,947:INFO:Uploading model into container now
2022-11-15 23:05:52,947:INFO:master_model_container: 9
2022-11-15 23:05:52,948:INFO:display_container: 2
2022-11-15 23:05:52,948:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1596)
2022-11-15 23:05:52,948:INFO:create_model() successfully completed......................................
2022-11-15 23:05:53,124:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:53,124:INFO:Creating metrics dataframe
2022-11-15 23:05:53,135:INFO:Initializing Gradient Boosting Classifier
2022-11-15 23:05:53,136:INFO:Total runtime is 0.2824683904647827 minutes
2022-11-15 23:05:53,140:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:53,142:INFO:Initializing create_model()
2022-11-15 23:05:53,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:53,142:INFO:Checking exceptions
2022-11-15 23:05:53,145:INFO:Importing libraries
2022-11-15 23:05:53,145:INFO:Copying training dataset
2022-11-15 23:05:53,149:INFO:Defining folds
2022-11-15 23:05:53,149:INFO:Declaring metric variables
2022-11-15 23:05:53,155:INFO:Importing untrained model
2022-11-15 23:05:53,161:INFO:Gradient Boosting Classifier Imported successfully
2022-11-15 23:05:53,169:INFO:Starting cross validation
2022-11-15 23:05:53,171:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:53,440:INFO:Calculating mean and std
2022-11-15 23:05:53,443:INFO:Creating metrics dataframe
2022-11-15 23:05:53,446:INFO:Uploading results into container
2022-11-15 23:05:53,447:INFO:Uploading model into container now
2022-11-15 23:05:53,447:INFO:master_model_container: 10
2022-11-15 23:05:53,448:INFO:display_container: 2
2022-11-15 23:05:53,448:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1596, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-15 23:05:53,448:INFO:create_model() successfully completed......................................
2022-11-15 23:05:53,641:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:53,641:INFO:Creating metrics dataframe
2022-11-15 23:05:53,653:INFO:Initializing Linear Discriminant Analysis
2022-11-15 23:05:53,655:INFO:Total runtime is 0.2911036173502604 minutes
2022-11-15 23:05:53,659:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:53,660:INFO:Initializing create_model()
2022-11-15 23:05:53,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:53,660:INFO:Checking exceptions
2022-11-15 23:05:53,662:INFO:Importing libraries
2022-11-15 23:05:53,662:INFO:Copying training dataset
2022-11-15 23:05:53,666:INFO:Defining folds
2022-11-15 23:05:53,666:INFO:Declaring metric variables
2022-11-15 23:05:53,671:INFO:Importing untrained model
2022-11-15 23:05:53,675:INFO:Linear Discriminant Analysis Imported successfully
2022-11-15 23:05:53,687:INFO:Starting cross validation
2022-11-15 23:05:53,688:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:53,806:INFO:Calculating mean and std
2022-11-15 23:05:53,808:INFO:Creating metrics dataframe
2022-11-15 23:05:53,811:INFO:Uploading results into container
2022-11-15 23:05:53,812:INFO:Uploading model into container now
2022-11-15 23:05:53,813:INFO:master_model_container: 11
2022-11-15 23:05:53,813:INFO:display_container: 2
2022-11-15 23:05:53,813:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-15 23:05:53,813:INFO:create_model() successfully completed......................................
2022-11-15 23:05:54,014:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:54,014:INFO:Creating metrics dataframe
2022-11-15 23:05:54,027:INFO:Initializing Extra Trees Classifier
2022-11-15 23:05:54,027:INFO:Total runtime is 0.2973092397054036 minutes
2022-11-15 23:05:54,032:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:54,032:INFO:Initializing create_model()
2022-11-15 23:05:54,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:54,033:INFO:Checking exceptions
2022-11-15 23:05:54,036:INFO:Importing libraries
2022-11-15 23:05:54,036:INFO:Copying training dataset
2022-11-15 23:05:54,042:INFO:Defining folds
2022-11-15 23:05:54,042:INFO:Declaring metric variables
2022-11-15 23:05:54,049:INFO:Importing untrained model
2022-11-15 23:05:54,057:INFO:Extra Trees Classifier Imported successfully
2022-11-15 23:05:54,068:INFO:Starting cross validation
2022-11-15 23:05:54,070:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:54,688:INFO:Calculating mean and std
2022-11-15 23:05:54,690:INFO:Creating metrics dataframe
2022-11-15 23:05:54,695:INFO:Uploading results into container
2022-11-15 23:05:54,696:INFO:Uploading model into container now
2022-11-15 23:05:54,697:INFO:master_model_container: 12
2022-11-15 23:05:54,697:INFO:display_container: 2
2022-11-15 23:05:54,697:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1596, verbose=0, warm_start=False)
2022-11-15 23:05:54,698:INFO:create_model() successfully completed......................................
2022-11-15 23:05:54,870:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:54,870:INFO:Creating metrics dataframe
2022-11-15 23:05:54,883:INFO:Initializing Extreme Gradient Boosting
2022-11-15 23:05:54,883:INFO:Total runtime is 0.31157302061716713 minutes
2022-11-15 23:05:54,886:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:54,887:INFO:Initializing create_model()
2022-11-15 23:05:54,887:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:54,887:INFO:Checking exceptions
2022-11-15 23:05:54,889:INFO:Importing libraries
2022-11-15 23:05:54,889:INFO:Copying training dataset
2022-11-15 23:05:54,896:INFO:Defining folds
2022-11-15 23:05:54,896:INFO:Declaring metric variables
2022-11-15 23:05:54,900:INFO:Importing untrained model
2022-11-15 23:05:54,905:INFO:Extreme Gradient Boosting Imported successfully
2022-11-15 23:05:54,914:INFO:Starting cross validation
2022-11-15 23:05:54,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:55,348:INFO:Calculating mean and std
2022-11-15 23:05:55,349:INFO:Creating metrics dataframe
2022-11-15 23:05:55,353:INFO:Uploading results into container
2022-11-15 23:05:55,354:INFO:Uploading model into container now
2022-11-15 23:05:55,355:INFO:master_model_container: 13
2022-11-15 23:05:55,355:INFO:display_container: 2
2022-11-15 23:05:55,356:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2022-11-15 23:05:55,356:INFO:create_model() successfully completed......................................
2022-11-15 23:05:55,537:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:55,538:INFO:Creating metrics dataframe
2022-11-15 23:05:55,549:INFO:Initializing Light Gradient Boosting Machine
2022-11-15 23:05:55,549:INFO:Total runtime is 0.32267392873764034 minutes
2022-11-15 23:05:55,552:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:55,553:INFO:Initializing create_model()
2022-11-15 23:05:55,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:55,553:INFO:Checking exceptions
2022-11-15 23:05:55,555:INFO:Importing libraries
2022-11-15 23:05:55,556:INFO:Copying training dataset
2022-11-15 23:05:55,562:INFO:Defining folds
2022-11-15 23:05:55,562:INFO:Declaring metric variables
2022-11-15 23:05:55,569:INFO:Importing untrained model
2022-11-15 23:05:55,575:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-15 23:05:55,583:INFO:Starting cross validation
2022-11-15 23:05:55,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:55,864:INFO:Calculating mean and std
2022-11-15 23:05:55,865:INFO:Creating metrics dataframe
2022-11-15 23:05:55,869:INFO:Uploading results into container
2022-11-15 23:05:55,869:INFO:Uploading model into container now
2022-11-15 23:05:55,870:INFO:master_model_container: 14
2022-11-15 23:05:55,870:INFO:display_container: 2
2022-11-15 23:05:55,870:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1596, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-15 23:05:55,870:INFO:create_model() successfully completed......................................
2022-11-15 23:05:56,042:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:56,043:INFO:Creating metrics dataframe
2022-11-15 23:05:56,055:INFO:Initializing Dummy Classifier
2022-11-15 23:05:56,055:INFO:Total runtime is 0.33111790021260573 minutes
2022-11-15 23:05:56,059:INFO:SubProcess create_model() called ==================================
2022-11-15 23:05:56,059:INFO:Initializing create_model()
2022-11-15 23:05:56,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473064C10>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:56,059:INFO:Checking exceptions
2022-11-15 23:05:56,063:INFO:Importing libraries
2022-11-15 23:05:56,063:INFO:Copying training dataset
2022-11-15 23:05:56,066:INFO:Defining folds
2022-11-15 23:05:56,066:INFO:Declaring metric variables
2022-11-15 23:05:56,073:INFO:Importing untrained model
2022-11-15 23:05:56,078:INFO:Dummy Classifier Imported successfully
2022-11-15 23:05:56,087:INFO:Starting cross validation
2022-11-15 23:05:56,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:05:56,155:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,164:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,173:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,176:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,182:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,189:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,195:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,196:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,199:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,204:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:05:56,207:INFO:Calculating mean and std
2022-11-15 23:05:56,209:INFO:Creating metrics dataframe
2022-11-15 23:05:56,214:INFO:Uploading results into container
2022-11-15 23:05:56,215:INFO:Uploading model into container now
2022-11-15 23:05:56,215:INFO:master_model_container: 15
2022-11-15 23:05:56,215:INFO:display_container: 2
2022-11-15 23:05:56,216:INFO:DummyClassifier(constant=None, random_state=1596, strategy='prior')
2022-11-15 23:05:56,216:INFO:create_model() successfully completed......................................
2022-11-15 23:05:56,384:INFO:SubProcess create_model() end ==================================
2022-11-15 23:05:56,384:INFO:Creating metrics dataframe
2022-11-15 23:05:56,409:INFO:Initializing create_model()
2022-11-15 23:05:56,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:05:56,409:INFO:Checking exceptions
2022-11-15 23:05:56,413:INFO:Importing libraries
2022-11-15 23:05:56,413:INFO:Copying training dataset
2022-11-15 23:05:56,417:INFO:Defining folds
2022-11-15 23:05:56,417:INFO:Declaring metric variables
2022-11-15 23:05:56,417:INFO:Importing untrained model
2022-11-15 23:05:56,417:INFO:Declaring custom model
2022-11-15 23:05:56,418:INFO:Logistic Regression Imported successfully
2022-11-15 23:05:56,419:INFO:Cross validation set to False
2022-11-15 23:05:56,419:INFO:Fitting Model
2022-11-15 23:05:56,477:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:05:56,477:INFO:create_model() successfully completed......................................
2022-11-15 23:05:56,697:INFO:master_model_container: 15
2022-11-15 23:05:56,697:INFO:display_container: 2
2022-11-15 23:05:56,697:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:05:56,697:INFO:compare_models() successfully completed......................................
2022-11-15 23:07:29,119:INFO:Initializing compare_models()
2022-11-15 23:07:29,120:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:07:29,120:INFO:Checking exceptions
2022-11-15 23:07:29,124:INFO:Preparing display monitor
2022-11-15 23:07:29,171:INFO:Initializing Logistic Regression
2022-11-15 23:07:29,172:INFO:Total runtime is 1.6697247823079427e-05 minutes
2022-11-15 23:07:29,180:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:29,181:INFO:Initializing create_model()
2022-11-15 23:07:29,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:29,181:INFO:Checking exceptions
2022-11-15 23:07:29,186:INFO:Importing libraries
2022-11-15 23:07:29,186:INFO:Copying training dataset
2022-11-15 23:07:29,190:INFO:Defining folds
2022-11-15 23:07:29,191:INFO:Declaring metric variables
2022-11-15 23:07:29,196:INFO:Importing untrained model
2022-11-15 23:07:29,202:INFO:Logistic Regression Imported successfully
2022-11-15 23:07:29,216:INFO:Starting cross validation
2022-11-15 23:07:29,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:29,393:INFO:Calculating mean and std
2022-11-15 23:07:29,394:INFO:Creating metrics dataframe
2022-11-15 23:07:29,397:INFO:Uploading results into container
2022-11-15 23:07:29,397:INFO:Uploading model into container now
2022-11-15 23:07:29,398:INFO:master_model_container: 16
2022-11-15 23:07:29,398:INFO:display_container: 3
2022-11-15 23:07:29,398:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:07:29,398:INFO:create_model() successfully completed......................................
2022-11-15 23:07:29,587:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:29,587:INFO:Creating metrics dataframe
2022-11-15 23:07:29,596:INFO:Initializing K Neighbors Classifier
2022-11-15 23:07:29,596:INFO:Total runtime is 0.007082200050354003 minutes
2022-11-15 23:07:29,600:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:29,600:INFO:Initializing create_model()
2022-11-15 23:07:29,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:29,601:INFO:Checking exceptions
2022-11-15 23:07:29,604:INFO:Importing libraries
2022-11-15 23:07:29,604:INFO:Copying training dataset
2022-11-15 23:07:29,607:INFO:Defining folds
2022-11-15 23:07:29,607:INFO:Declaring metric variables
2022-11-15 23:07:29,613:INFO:Importing untrained model
2022-11-15 23:07:29,619:INFO:K Neighbors Classifier Imported successfully
2022-11-15 23:07:29,630:INFO:Starting cross validation
2022-11-15 23:07:29,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:29,817:INFO:Calculating mean and std
2022-11-15 23:07:29,817:INFO:Creating metrics dataframe
2022-11-15 23:07:29,820:INFO:Uploading results into container
2022-11-15 23:07:29,820:INFO:Uploading model into container now
2022-11-15 23:07:29,821:INFO:master_model_container: 17
2022-11-15 23:07:29,821:INFO:display_container: 3
2022-11-15 23:07:29,821:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-15 23:07:29,821:INFO:create_model() successfully completed......................................
2022-11-15 23:07:30,080:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:30,080:INFO:Creating metrics dataframe
2022-11-15 23:07:30,112:INFO:Initializing Naive Bayes
2022-11-15 23:07:30,113:INFO:Total runtime is 0.015705498059590657 minutes
2022-11-15 23:07:30,127:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:30,128:INFO:Initializing create_model()
2022-11-15 23:07:30,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:30,128:INFO:Checking exceptions
2022-11-15 23:07:30,132:INFO:Importing libraries
2022-11-15 23:07:30,132:INFO:Copying training dataset
2022-11-15 23:07:30,141:INFO:Defining folds
2022-11-15 23:07:30,141:INFO:Declaring metric variables
2022-11-15 23:07:30,148:INFO:Importing untrained model
2022-11-15 23:07:30,157:INFO:Naive Bayes Imported successfully
2022-11-15 23:07:30,171:INFO:Starting cross validation
2022-11-15 23:07:30,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:30,360:INFO:Calculating mean and std
2022-11-15 23:07:30,362:INFO:Creating metrics dataframe
2022-11-15 23:07:30,366:INFO:Uploading results into container
2022-11-15 23:07:30,367:INFO:Uploading model into container now
2022-11-15 23:07:30,367:INFO:master_model_container: 18
2022-11-15 23:07:30,367:INFO:display_container: 3
2022-11-15 23:07:30,368:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:07:30,368:INFO:create_model() successfully completed......................................
2022-11-15 23:07:30,578:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:30,578:INFO:Creating metrics dataframe
2022-11-15 23:07:30,589:INFO:Initializing Decision Tree Classifier
2022-11-15 23:07:30,590:INFO:Total runtime is 0.023658585548400876 minutes
2022-11-15 23:07:30,593:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:30,594:INFO:Initializing create_model()
2022-11-15 23:07:30,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:30,594:INFO:Checking exceptions
2022-11-15 23:07:30,599:INFO:Importing libraries
2022-11-15 23:07:30,599:INFO:Copying training dataset
2022-11-15 23:07:30,603:INFO:Defining folds
2022-11-15 23:07:30,604:INFO:Declaring metric variables
2022-11-15 23:07:30,610:INFO:Importing untrained model
2022-11-15 23:07:30,615:INFO:Decision Tree Classifier Imported successfully
2022-11-15 23:07:30,629:INFO:Starting cross validation
2022-11-15 23:07:30,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:30,811:INFO:Calculating mean and std
2022-11-15 23:07:30,815:INFO:Creating metrics dataframe
2022-11-15 23:07:30,821:INFO:Uploading results into container
2022-11-15 23:07:30,821:INFO:Uploading model into container now
2022-11-15 23:07:30,822:INFO:master_model_container: 19
2022-11-15 23:07:30,822:INFO:display_container: 3
2022-11-15 23:07:30,823:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1596, splitter='best')
2022-11-15 23:07:30,823:INFO:create_model() successfully completed......................................
2022-11-15 23:07:31,177:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:31,177:INFO:Creating metrics dataframe
2022-11-15 23:07:31,191:INFO:Initializing SVM - Linear Kernel
2022-11-15 23:07:31,192:INFO:Total runtime is 0.03368102312088012 minutes
2022-11-15 23:07:31,201:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:31,202:INFO:Initializing create_model()
2022-11-15 23:07:31,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:31,202:INFO:Checking exceptions
2022-11-15 23:07:31,205:INFO:Importing libraries
2022-11-15 23:07:31,205:INFO:Copying training dataset
2022-11-15 23:07:31,210:INFO:Defining folds
2022-11-15 23:07:31,210:INFO:Declaring metric variables
2022-11-15 23:07:31,216:INFO:Importing untrained model
2022-11-15 23:07:31,223:INFO:SVM - Linear Kernel Imported successfully
2022-11-15 23:07:31,236:INFO:Starting cross validation
2022-11-15 23:07:31,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:31,356:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:31,400:INFO:Calculating mean and std
2022-11-15 23:07:31,404:INFO:Creating metrics dataframe
2022-11-15 23:07:31,412:INFO:Uploading results into container
2022-11-15 23:07:31,413:INFO:Uploading model into container now
2022-11-15 23:07:31,413:INFO:master_model_container: 20
2022-11-15 23:07:31,414:INFO:display_container: 3
2022-11-15 23:07:31,414:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1596, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-15 23:07:31,414:INFO:create_model() successfully completed......................................
2022-11-15 23:07:31,740:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:31,741:INFO:Creating metrics dataframe
2022-11-15 23:07:31,754:INFO:Initializing Ridge Classifier
2022-11-15 23:07:31,755:INFO:Total runtime is 0.04306576251983642 minutes
2022-11-15 23:07:31,760:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:31,760:INFO:Initializing create_model()
2022-11-15 23:07:31,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:31,761:INFO:Checking exceptions
2022-11-15 23:07:31,764:INFO:Importing libraries
2022-11-15 23:07:31,764:INFO:Copying training dataset
2022-11-15 23:07:31,770:INFO:Defining folds
2022-11-15 23:07:31,770:INFO:Declaring metric variables
2022-11-15 23:07:31,779:INFO:Importing untrained model
2022-11-15 23:07:31,785:INFO:Ridge Classifier Imported successfully
2022-11-15 23:07:31,796:INFO:Starting cross validation
2022-11-15 23:07:31,798:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:31,910:INFO:Calculating mean and std
2022-11-15 23:07:31,911:INFO:Creating metrics dataframe
2022-11-15 23:07:31,914:INFO:Uploading results into container
2022-11-15 23:07:31,916:INFO:Uploading model into container now
2022-11-15 23:07:31,916:INFO:master_model_container: 21
2022-11-15 23:07:31,916:INFO:display_container: 3
2022-11-15 23:07:31,917:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=1596, solver='auto', tol=0.001)
2022-11-15 23:07:31,917:INFO:create_model() successfully completed......................................
2022-11-15 23:07:32,112:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:32,112:INFO:Creating metrics dataframe
2022-11-15 23:07:32,123:INFO:Initializing Random Forest Classifier
2022-11-15 23:07:32,123:INFO:Total runtime is 0.04921084245045979 minutes
2022-11-15 23:07:32,126:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:32,128:INFO:Initializing create_model()
2022-11-15 23:07:32,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:32,128:INFO:Checking exceptions
2022-11-15 23:07:32,132:INFO:Importing libraries
2022-11-15 23:07:32,132:INFO:Copying training dataset
2022-11-15 23:07:32,136:INFO:Defining folds
2022-11-15 23:07:32,136:INFO:Declaring metric variables
2022-11-15 23:07:32,142:INFO:Importing untrained model
2022-11-15 23:07:32,148:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:07:32,159:INFO:Starting cross validation
2022-11-15 23:07:32,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:32,784:INFO:Calculating mean and std
2022-11-15 23:07:32,786:INFO:Creating metrics dataframe
2022-11-15 23:07:32,789:INFO:Uploading results into container
2022-11-15 23:07:32,790:INFO:Uploading model into container now
2022-11-15 23:07:32,790:INFO:master_model_container: 22
2022-11-15 23:07:32,791:INFO:display_container: 3
2022-11-15 23:07:32,791:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1596, verbose=0, warm_start=False)
2022-11-15 23:07:32,791:INFO:create_model() successfully completed......................................
2022-11-15 23:07:32,981:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:32,981:INFO:Creating metrics dataframe
2022-11-15 23:07:32,993:INFO:Initializing Quadratic Discriminant Analysis
2022-11-15 23:07:32,994:INFO:Total runtime is 0.06371673345565795 minutes
2022-11-15 23:07:32,998:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:32,999:INFO:Initializing create_model()
2022-11-15 23:07:32,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:32,999:INFO:Checking exceptions
2022-11-15 23:07:33,001:INFO:Importing libraries
2022-11-15 23:07:33,002:INFO:Copying training dataset
2022-11-15 23:07:33,004:INFO:Defining folds
2022-11-15 23:07:33,005:INFO:Declaring metric variables
2022-11-15 23:07:33,011:INFO:Importing untrained model
2022-11-15 23:07:33,017:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-15 23:07:33,029:INFO:Starting cross validation
2022-11-15 23:07:33,030:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:33,151:INFO:Calculating mean and std
2022-11-15 23:07:33,153:INFO:Creating metrics dataframe
2022-11-15 23:07:33,159:INFO:Uploading results into container
2022-11-15 23:07:33,161:INFO:Uploading model into container now
2022-11-15 23:07:33,161:INFO:master_model_container: 23
2022-11-15 23:07:33,162:INFO:display_container: 3
2022-11-15 23:07:33,162:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-15 23:07:33,162:INFO:create_model() successfully completed......................................
2022-11-15 23:07:33,392:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:33,392:INFO:Creating metrics dataframe
2022-11-15 23:07:33,405:INFO:Initializing Ada Boost Classifier
2022-11-15 23:07:33,405:INFO:Total runtime is 0.07056645949681599 minutes
2022-11-15 23:07:33,412:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:33,412:INFO:Initializing create_model()
2022-11-15 23:07:33,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:33,413:INFO:Checking exceptions
2022-11-15 23:07:33,415:INFO:Importing libraries
2022-11-15 23:07:33,416:INFO:Copying training dataset
2022-11-15 23:07:33,419:INFO:Defining folds
2022-11-15 23:07:33,419:INFO:Declaring metric variables
2022-11-15 23:07:33,426:INFO:Importing untrained model
2022-11-15 23:07:33,433:INFO:Ada Boost Classifier Imported successfully
2022-11-15 23:07:33,447:INFO:Starting cross validation
2022-11-15 23:07:33,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:33,999:INFO:Calculating mean and std
2022-11-15 23:07:34,003:INFO:Creating metrics dataframe
2022-11-15 23:07:34,008:INFO:Uploading results into container
2022-11-15 23:07:34,009:INFO:Uploading model into container now
2022-11-15 23:07:34,010:INFO:master_model_container: 24
2022-11-15 23:07:34,010:INFO:display_container: 3
2022-11-15 23:07:34,010:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1596)
2022-11-15 23:07:34,010:INFO:create_model() successfully completed......................................
2022-11-15 23:07:34,324:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:34,324:INFO:Creating metrics dataframe
2022-11-15 23:07:34,338:INFO:Initializing Gradient Boosting Classifier
2022-11-15 23:07:34,338:INFO:Total runtime is 0.08612020413080851 minutes
2022-11-15 23:07:34,346:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:34,347:INFO:Initializing create_model()
2022-11-15 23:07:34,348:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:34,348:INFO:Checking exceptions
2022-11-15 23:07:34,349:INFO:Importing libraries
2022-11-15 23:07:34,349:INFO:Copying training dataset
2022-11-15 23:07:34,353:INFO:Defining folds
2022-11-15 23:07:34,354:INFO:Declaring metric variables
2022-11-15 23:07:34,362:INFO:Importing untrained model
2022-11-15 23:07:34,369:INFO:Gradient Boosting Classifier Imported successfully
2022-11-15 23:07:34,387:INFO:Starting cross validation
2022-11-15 23:07:34,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:34,747:INFO:Calculating mean and std
2022-11-15 23:07:34,749:INFO:Creating metrics dataframe
2022-11-15 23:07:34,752:INFO:Uploading results into container
2022-11-15 23:07:34,752:INFO:Uploading model into container now
2022-11-15 23:07:34,753:INFO:master_model_container: 25
2022-11-15 23:07:34,753:INFO:display_container: 3
2022-11-15 23:07:34,754:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1596, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-15 23:07:34,754:INFO:create_model() successfully completed......................................
2022-11-15 23:07:34,979:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:34,980:INFO:Creating metrics dataframe
2022-11-15 23:07:34,993:INFO:Initializing Linear Discriminant Analysis
2022-11-15 23:07:34,993:INFO:Total runtime is 0.0970286210378011 minutes
2022-11-15 23:07:34,997:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:34,997:INFO:Initializing create_model()
2022-11-15 23:07:34,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:34,997:INFO:Checking exceptions
2022-11-15 23:07:35,000:INFO:Importing libraries
2022-11-15 23:07:35,000:INFO:Copying training dataset
2022-11-15 23:07:35,003:INFO:Defining folds
2022-11-15 23:07:35,004:INFO:Declaring metric variables
2022-11-15 23:07:35,012:INFO:Importing untrained model
2022-11-15 23:07:35,016:INFO:Linear Discriminant Analysis Imported successfully
2022-11-15 23:07:35,028:INFO:Starting cross validation
2022-11-15 23:07:35,029:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:35,154:INFO:Calculating mean and std
2022-11-15 23:07:35,157:INFO:Creating metrics dataframe
2022-11-15 23:07:35,162:INFO:Uploading results into container
2022-11-15 23:07:35,163:INFO:Uploading model into container now
2022-11-15 23:07:35,164:INFO:master_model_container: 26
2022-11-15 23:07:35,164:INFO:display_container: 3
2022-11-15 23:07:35,164:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-15 23:07:35,165:INFO:create_model() successfully completed......................................
2022-11-15 23:07:35,355:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:35,355:INFO:Creating metrics dataframe
2022-11-15 23:07:35,367:INFO:Initializing Extra Trees Classifier
2022-11-15 23:07:35,367:INFO:Total runtime is 0.10327485799789428 minutes
2022-11-15 23:07:35,370:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:35,371:INFO:Initializing create_model()
2022-11-15 23:07:35,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:35,371:INFO:Checking exceptions
2022-11-15 23:07:35,374:INFO:Importing libraries
2022-11-15 23:07:35,374:INFO:Copying training dataset
2022-11-15 23:07:35,378:INFO:Defining folds
2022-11-15 23:07:35,379:INFO:Declaring metric variables
2022-11-15 23:07:35,385:INFO:Importing untrained model
2022-11-15 23:07:35,392:INFO:Extra Trees Classifier Imported successfully
2022-11-15 23:07:35,406:INFO:Starting cross validation
2022-11-15 23:07:35,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:35,971:INFO:Calculating mean and std
2022-11-15 23:07:35,973:INFO:Creating metrics dataframe
2022-11-15 23:07:35,976:INFO:Uploading results into container
2022-11-15 23:07:35,977:INFO:Uploading model into container now
2022-11-15 23:07:35,977:INFO:master_model_container: 27
2022-11-15 23:07:35,978:INFO:display_container: 3
2022-11-15 23:07:35,978:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1596, verbose=0, warm_start=False)
2022-11-15 23:07:35,978:INFO:create_model() successfully completed......................................
2022-11-15 23:07:36,162:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:36,162:INFO:Creating metrics dataframe
2022-11-15 23:07:36,174:INFO:Initializing Extreme Gradient Boosting
2022-11-15 23:07:36,174:INFO:Total runtime is 0.1167189081509908 minutes
2022-11-15 23:07:36,178:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:36,179:INFO:Initializing create_model()
2022-11-15 23:07:36,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:36,180:INFO:Checking exceptions
2022-11-15 23:07:36,182:INFO:Importing libraries
2022-11-15 23:07:36,182:INFO:Copying training dataset
2022-11-15 23:07:36,185:INFO:Defining folds
2022-11-15 23:07:36,186:INFO:Declaring metric variables
2022-11-15 23:07:36,191:INFO:Importing untrained model
2022-11-15 23:07:36,196:INFO:Extreme Gradient Boosting Imported successfully
2022-11-15 23:07:36,206:INFO:Starting cross validation
2022-11-15 23:07:36,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:36,441:INFO:Calculating mean and std
2022-11-15 23:07:36,443:INFO:Creating metrics dataframe
2022-11-15 23:07:36,446:INFO:Uploading results into container
2022-11-15 23:07:36,447:INFO:Uploading model into container now
2022-11-15 23:07:36,447:INFO:master_model_container: 28
2022-11-15 23:07:36,447:INFO:display_container: 3
2022-11-15 23:07:36,449:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2022-11-15 23:07:36,449:INFO:create_model() successfully completed......................................
2022-11-15 23:07:36,637:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:36,637:INFO:Creating metrics dataframe
2022-11-15 23:07:36,652:INFO:Initializing Light Gradient Boosting Machine
2022-11-15 23:07:36,652:INFO:Total runtime is 0.12468203703562418 minutes
2022-11-15 23:07:36,655:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:36,656:INFO:Initializing create_model()
2022-11-15 23:07:36,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:36,656:INFO:Checking exceptions
2022-11-15 23:07:36,659:INFO:Importing libraries
2022-11-15 23:07:36,659:INFO:Copying training dataset
2022-11-15 23:07:36,662:INFO:Defining folds
2022-11-15 23:07:36,662:INFO:Declaring metric variables
2022-11-15 23:07:36,669:INFO:Importing untrained model
2022-11-15 23:07:36,675:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-15 23:07:36,686:INFO:Starting cross validation
2022-11-15 23:07:36,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:36,898:INFO:Calculating mean and std
2022-11-15 23:07:36,900:INFO:Creating metrics dataframe
2022-11-15 23:07:36,903:INFO:Uploading results into container
2022-11-15 23:07:36,904:INFO:Uploading model into container now
2022-11-15 23:07:36,905:INFO:master_model_container: 29
2022-11-15 23:07:36,905:INFO:display_container: 3
2022-11-15 23:07:36,905:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1596, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-15 23:07:36,905:INFO:create_model() successfully completed......................................
2022-11-15 23:07:37,099:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:37,100:INFO:Creating metrics dataframe
2022-11-15 23:07:37,112:INFO:Initializing Dummy Classifier
2022-11-15 23:07:37,113:INFO:Total runtime is 0.1323707103729248 minutes
2022-11-15 23:07:37,117:INFO:SubProcess create_model() called ==================================
2022-11-15 23:07:37,118:INFO:Initializing create_model()
2022-11-15 23:07:37,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B050D0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:37,119:INFO:Checking exceptions
2022-11-15 23:07:37,120:INFO:Importing libraries
2022-11-15 23:07:37,120:INFO:Copying training dataset
2022-11-15 23:07:37,123:INFO:Defining folds
2022-11-15 23:07:37,124:INFO:Declaring metric variables
2022-11-15 23:07:37,127:INFO:Importing untrained model
2022-11-15 23:07:37,134:INFO:Dummy Classifier Imported successfully
2022-11-15 23:07:37,145:INFO:Starting cross validation
2022-11-15 23:07:37,146:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:07:37,210:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,215:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,223:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,225:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,233:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,237:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,243:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,250:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,251:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,258:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:07:37,261:INFO:Calculating mean and std
2022-11-15 23:07:37,263:INFO:Creating metrics dataframe
2022-11-15 23:07:37,265:INFO:Uploading results into container
2022-11-15 23:07:37,266:INFO:Uploading model into container now
2022-11-15 23:07:37,266:INFO:master_model_container: 30
2022-11-15 23:07:37,266:INFO:display_container: 3
2022-11-15 23:07:37,267:INFO:DummyClassifier(constant=None, random_state=1596, strategy='prior')
2022-11-15 23:07:37,267:INFO:create_model() successfully completed......................................
2022-11-15 23:07:37,453:INFO:SubProcess create_model() end ==================================
2022-11-15 23:07:37,454:INFO:Creating metrics dataframe
2022-11-15 23:07:37,478:INFO:Initializing create_model()
2022-11-15 23:07:37,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C473064220>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:07:37,478:INFO:Checking exceptions
2022-11-15 23:07:37,482:INFO:Importing libraries
2022-11-15 23:07:37,483:INFO:Copying training dataset
2022-11-15 23:07:37,486:INFO:Defining folds
2022-11-15 23:07:37,486:INFO:Declaring metric variables
2022-11-15 23:07:37,487:INFO:Importing untrained model
2022-11-15 23:07:37,487:INFO:Declaring custom model
2022-11-15 23:07:37,487:INFO:Logistic Regression Imported successfully
2022-11-15 23:07:37,487:INFO:Cross validation set to False
2022-11-15 23:07:37,487:INFO:Fitting Model
2022-11-15 23:07:37,523:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:07:37,523:INFO:create_model() successfully completed......................................
2022-11-15 23:07:37,760:INFO:master_model_container: 30
2022-11-15 23:07:37,760:INFO:display_container: 3
2022-11-15 23:07:37,760:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:07:37,761:INFO:compare_models() successfully completed......................................
2022-11-15 23:08:01,183:INFO:PyCaret ClassificationExperiment
2022-11-15 23:08:01,183:INFO:Logging name: clf-default-name
2022-11-15 23:08:01,183:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:08:01,183:INFO:version 3.0.0.rc4
2022-11-15 23:08:01,183:INFO:Initializing setup()
2022-11-15 23:08:01,183:INFO:self.USI: fac6
2022-11-15 23:08:01,183:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:08:01,183:INFO:Checking environment
2022-11-15 23:08:01,183:INFO:python_version: 3.9.0
2022-11-15 23:08:01,183:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:08:01,183:INFO:machine: AMD64
2022-11-15 23:08:01,183:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:08:01,183:INFO:Memory: svmem(total=7968530432, available=936648704, percent=88.2, used=7031881728, free=936648704)
2022-11-15 23:08:01,183:INFO:Physical Core: 6
2022-11-15 23:08:01,183:INFO:Logical Core: 12
2022-11-15 23:08:01,183:INFO:Checking libraries
2022-11-15 23:08:01,183:INFO:System:
2022-11-15 23:08:01,183:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:08:01,183:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:08:01,183:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:08:01,183:INFO:PyCaret required dependencies:
2022-11-15 23:08:01,183:INFO:                 pip: 22.1.2
2022-11-15 23:08:01,183:INFO:          setuptools: 60.10.0
2022-11-15 23:08:01,183:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:08:01,183:INFO:             IPython: 8.5.0
2022-11-15 23:08:01,184:INFO:          ipywidgets: 8.0.2
2022-11-15 23:08:01,184:INFO:                tqdm: 4.64.1
2022-11-15 23:08:01,184:INFO:               numpy: 1.22.4
2022-11-15 23:08:01,184:INFO:              pandas: 1.4.4
2022-11-15 23:08:01,184:INFO:              jinja2: 3.1.2
2022-11-15 23:08:01,184:INFO:               scipy: 1.8.1
2022-11-15 23:08:01,184:INFO:              joblib: 1.2.0
2022-11-15 23:08:01,184:INFO:             sklearn: 1.1.2
2022-11-15 23:08:01,184:INFO:                pyod: 1.0.6
2022-11-15 23:08:01,184:INFO:            imblearn: 0.9.1
2022-11-15 23:08:01,184:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:08:01,184:INFO:            lightgbm: 3.3.3
2022-11-15 23:08:01,184:INFO:               numba: 0.55.2
2022-11-15 23:08:01,184:INFO:            requests: 2.28.1
2022-11-15 23:08:01,184:INFO:          matplotlib: 3.6.0
2022-11-15 23:08:01,184:INFO:          scikitplot: 0.3.7
2022-11-15 23:08:01,184:INFO:         yellowbrick: 1.5
2022-11-15 23:08:01,184:INFO:              plotly: 5.11.0
2022-11-15 23:08:01,184:INFO:             kaleido: 0.2.1
2022-11-15 23:08:01,184:INFO:         statsmodels: 0.13.5
2022-11-15 23:08:01,184:INFO:              sktime: 0.13.4
2022-11-15 23:08:01,184:INFO:               tbats: 1.1.1
2022-11-15 23:08:01,184:INFO:            pmdarima: 1.8.5
2022-11-15 23:08:01,184:INFO:              psutil: 5.9.2
2022-11-15 23:08:01,184:INFO:PyCaret optional dependencies:
2022-11-15 23:08:01,186:INFO:                shap: 0.41.0
2022-11-15 23:08:01,186:INFO:           interpret: 0.2.7
2022-11-15 23:08:01,186:INFO:                umap: Not installed
2022-11-15 23:08:01,186:INFO:    pandas_profiling: Not installed
2022-11-15 23:08:01,186:INFO:  explainerdashboard: Not installed
2022-11-15 23:08:01,186:INFO:             autoviz: Not installed
2022-11-15 23:08:01,186:INFO:           fairlearn: Not installed
2022-11-15 23:08:01,186:INFO:             xgboost: 1.7.1
2022-11-15 23:08:01,186:INFO:            catboost: Not installed
2022-11-15 23:08:01,186:INFO:              kmodes: Not installed
2022-11-15 23:08:01,186:INFO:             mlxtend: Not installed
2022-11-15 23:08:01,186:INFO:       statsforecast: Not installed
2022-11-15 23:08:01,186:INFO:        tune_sklearn: Not installed
2022-11-15 23:08:01,186:INFO:                 ray: Not installed
2022-11-15 23:08:01,186:INFO:            hyperopt: Not installed
2022-11-15 23:08:01,186:INFO:              optuna: Not installed
2022-11-15 23:08:01,186:INFO:               skopt: Not installed
2022-11-15 23:08:01,186:INFO:              mlflow: Not installed
2022-11-15 23:08:01,186:INFO:              gradio: Not installed
2022-11-15 23:08:01,186:INFO:             fastapi: Not installed
2022-11-15 23:08:01,186:INFO:             uvicorn: Not installed
2022-11-15 23:08:01,186:INFO:              m2cgen: Not installed
2022-11-15 23:08:01,187:INFO:           evidently: Not installed
2022-11-15 23:08:01,187:INFO:                nltk: 3.7
2022-11-15 23:08:01,187:INFO:            pyLDAvis: Not installed
2022-11-15 23:08:01,187:INFO:              gensim: Not installed
2022-11-15 23:08:01,187:INFO:               spacy: Not installed
2022-11-15 23:08:01,187:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:08:01,187:INFO:            textblob: Not installed
2022-11-15 23:08:01,187:INFO:               fugue: Not installed
2022-11-15 23:08:01,187:INFO:           streamlit: Not installed
2022-11-15 23:08:01,187:INFO:             prophet: Not installed
2022-11-15 23:08:01,187:INFO:None
2022-11-15 23:08:01,187:INFO:Set up data.
2022-11-15 23:08:01,193:INFO:Set up train/test split.
2022-11-15 23:08:01,200:INFO:Set up index.
2022-11-15 23:08:01,200:INFO:Assigning column types.
2022-11-15 23:08:01,203:INFO:Set up folding strategy.
2022-11-15 23:08:01,203:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:08:01,252:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:08:01,253:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:08:01,283:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:01,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:01,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:08:01,335:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:08:01,365:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:01,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:01,368:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:08:01,418:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:08:01,450:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:01,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:01,502:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:08:01,533:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:01,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:01,536:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:08:01,616:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:01,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:01,697:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:01,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:01,701:INFO:Preparing preprocessing pipeline...
2022-11-15 23:08:01,702:INFO:Set up label encoding.
2022-11-15 23:08:01,702:INFO:Set up simple imputation.
2022-11-15 23:08:01,702:INFO:Set up variance threshold.
2022-11-15 23:08:01,756:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:08:01,760:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['N', 'P', 'K', 'temperature',
                                             'humidity', 'ph', 'rainfall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:08:01,760:INFO:Creating final display dataframe.
2022-11-15 23:08:02,057:INFO:Setup display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13       Low variance threshold   
14               Fold Generator   
15                  Fold Number   
16                     CPU Jobs   
17                      Use GPU   
18               Log Experiment   
19              Experiment Name   
20                          USI   

                                                Value  
0                                                8941  
1                                               label  
2                                          Multiclass  
3   apple: 0, banana: 1, blackgram: 2, chickpea: 3...  
4                                           (2200, 8)  
5                                           (2200, 8)  
6                                           (1539, 8)  
7                                            (661, 8)  
8                                                   7  
9                                                True  
10                                             simple  
11                                               mean  
12                                           constant  
13                                                  0  
14                                    StratifiedKFold  
15                                                 10  
16                                                 -1  
17                                              False  
18                                              False  
19                                   clf-default-name  
20                                               fac6  
2022-11-15 23:08:02,169:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:02,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:02,274:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:02,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:02,292:INFO:setup() successfully completed in 1.11s...............
2022-11-15 23:08:07,062:INFO:Initializing compare_models()
2022-11-15 23:08:07,062:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:08:07,062:INFO:Checking exceptions
2022-11-15 23:08:07,068:INFO:Preparing display monitor
2022-11-15 23:08:07,129:INFO:Initializing Logistic Regression
2022-11-15 23:08:07,129:INFO:Total runtime is 0.0 minutes
2022-11-15 23:08:07,134:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:07,134:INFO:Initializing create_model()
2022-11-15 23:08:07,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:07,134:INFO:Checking exceptions
2022-11-15 23:08:07,138:INFO:Importing libraries
2022-11-15 23:08:07,138:INFO:Copying training dataset
2022-11-15 23:08:07,142:INFO:Defining folds
2022-11-15 23:08:07,142:INFO:Declaring metric variables
2022-11-15 23:08:07,149:INFO:Importing untrained model
2022-11-15 23:08:07,157:INFO:Logistic Regression Imported successfully
2022-11-15 23:08:07,169:INFO:Starting cross validation
2022-11-15 23:08:07,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:10,505:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,564:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,649:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,703:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,707:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,746:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,754:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,774:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,823:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,895:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:08:10,906:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,910:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,914:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,920:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,923:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,926:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,981:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,985:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,987:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,994:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:10,996:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,000:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,002:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,005:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,009:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,011:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,014:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,016:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,017:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,019:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,022:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,035:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,037:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,039:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,046:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,047:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,049:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,072:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,074:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,077:INFO:Calculating mean and std
2022-11-15 23:08:11,079:INFO:Creating metrics dataframe
2022-11-15 23:08:11,082:INFO:Uploading results into container
2022-11-15 23:08:11,083:INFO:Uploading model into container now
2022-11-15 23:08:11,083:INFO:master_model_container: 1
2022-11-15 23:08:11,083:INFO:display_container: 2
2022-11-15 23:08:11,083:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8941, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:08:11,084:INFO:create_model() successfully completed......................................
2022-11-15 23:08:11,288:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:11,288:INFO:Creating metrics dataframe
2022-11-15 23:08:11,296:INFO:Initializing K Neighbors Classifier
2022-11-15 23:08:11,296:INFO:Total runtime is 0.06945849657058716 minutes
2022-11-15 23:08:11,300:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:11,300:INFO:Initializing create_model()
2022-11-15 23:08:11,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:11,301:INFO:Checking exceptions
2022-11-15 23:08:11,303:INFO:Importing libraries
2022-11-15 23:08:11,304:INFO:Copying training dataset
2022-11-15 23:08:11,307:INFO:Defining folds
2022-11-15 23:08:11,308:INFO:Declaring metric variables
2022-11-15 23:08:11,315:INFO:Importing untrained model
2022-11-15 23:08:11,324:INFO:K Neighbors Classifier Imported successfully
2022-11-15 23:08:11,334:INFO:Starting cross validation
2022-11-15 23:08:11,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:11,556:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,556:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,560:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,560:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,563:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,564:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,581:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,585:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,589:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,594:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,598:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,601:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,604:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,606:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,607:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,609:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,611:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,612:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,616:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,619:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,619:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,620:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,620:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,621:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,622:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,623:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,623:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,625:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,626:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,626:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,630:INFO:Calculating mean and std
2022-11-15 23:08:11,632:INFO:Creating metrics dataframe
2022-11-15 23:08:11,635:INFO:Uploading results into container
2022-11-15 23:08:11,636:INFO:Uploading model into container now
2022-11-15 23:08:11,637:INFO:master_model_container: 2
2022-11-15 23:08:11,637:INFO:display_container: 2
2022-11-15 23:08:11,638:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-15 23:08:11,639:INFO:create_model() successfully completed......................................
2022-11-15 23:08:11,828:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:11,829:INFO:Creating metrics dataframe
2022-11-15 23:08:11,838:INFO:Initializing Naive Bayes
2022-11-15 23:08:11,838:INFO:Total runtime is 0.07849361101786295 minutes
2022-11-15 23:08:11,842:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:11,843:INFO:Initializing create_model()
2022-11-15 23:08:11,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:11,843:INFO:Checking exceptions
2022-11-15 23:08:11,846:INFO:Importing libraries
2022-11-15 23:08:11,847:INFO:Copying training dataset
2022-11-15 23:08:11,852:INFO:Defining folds
2022-11-15 23:08:11,853:INFO:Declaring metric variables
2022-11-15 23:08:11,857:INFO:Importing untrained model
2022-11-15 23:08:11,864:INFO:Naive Bayes Imported successfully
2022-11-15 23:08:11,875:INFO:Starting cross validation
2022-11-15 23:08:11,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:11,985:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,989:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,993:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,994:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,996:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:11,999:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,000:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,002:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,003:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,006:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,009:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,012:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,020:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,020:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,022:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,022:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,023:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,024:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,024:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,026:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,026:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,030:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,032:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,034:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,035:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,035:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,036:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,037:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,038:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,038:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,041:INFO:Calculating mean and std
2022-11-15 23:08:12,043:INFO:Creating metrics dataframe
2022-11-15 23:08:12,046:INFO:Uploading results into container
2022-11-15 23:08:12,047:INFO:Uploading model into container now
2022-11-15 23:08:12,048:INFO:master_model_container: 3
2022-11-15 23:08:12,048:INFO:display_container: 2
2022-11-15 23:08:12,048:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:08:12,048:INFO:create_model() successfully completed......................................
2022-11-15 23:08:12,236:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:12,236:INFO:Creating metrics dataframe
2022-11-15 23:08:12,246:INFO:Initializing Decision Tree Classifier
2022-11-15 23:08:12,247:INFO:Total runtime is 0.08530169328053792 minutes
2022-11-15 23:08:12,252:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:12,252:INFO:Initializing create_model()
2022-11-15 23:08:12,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:12,253:INFO:Checking exceptions
2022-11-15 23:08:12,255:INFO:Importing libraries
2022-11-15 23:08:12,255:INFO:Copying training dataset
2022-11-15 23:08:12,259:INFO:Defining folds
2022-11-15 23:08:12,259:INFO:Declaring metric variables
2022-11-15 23:08:12,266:INFO:Importing untrained model
2022-11-15 23:08:12,273:INFO:Decision Tree Classifier Imported successfully
2022-11-15 23:08:12,284:INFO:Starting cross validation
2022-11-15 23:08:12,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:12,397:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,402:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,405:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,406:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,410:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,412:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,412:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,413:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,415:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,418:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,419:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,419:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,421:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,423:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,424:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,425:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,427:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,435:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,437:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,438:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,438:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,440:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,441:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,441:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,442:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,443:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,443:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,444:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,445:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,449:INFO:Calculating mean and std
2022-11-15 23:08:12,452:INFO:Creating metrics dataframe
2022-11-15 23:08:12,455:INFO:Uploading results into container
2022-11-15 23:08:12,456:INFO:Uploading model into container now
2022-11-15 23:08:12,457:INFO:master_model_container: 4
2022-11-15 23:08:12,457:INFO:display_container: 2
2022-11-15 23:08:12,458:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8941, splitter='best')
2022-11-15 23:08:12,458:INFO:create_model() successfully completed......................................
2022-11-15 23:08:12,646:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:12,646:INFO:Creating metrics dataframe
2022-11-15 23:08:12,656:INFO:Initializing SVM - Linear Kernel
2022-11-15 23:08:12,656:INFO:Total runtime is 0.09211746056874594 minutes
2022-11-15 23:08:12,660:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:12,661:INFO:Initializing create_model()
2022-11-15 23:08:12,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:12,661:INFO:Checking exceptions
2022-11-15 23:08:12,663:INFO:Importing libraries
2022-11-15 23:08:12,664:INFO:Copying training dataset
2022-11-15 23:08:12,668:INFO:Defining folds
2022-11-15 23:08:12,668:INFO:Declaring metric variables
2022-11-15 23:08:12,684:INFO:Importing untrained model
2022-11-15 23:08:12,690:INFO:SVM - Linear Kernel Imported successfully
2022-11-15 23:08:12,701:INFO:Starting cross validation
2022-11-15 23:08:12,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:12,826:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,828:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,830:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,832:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,832:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,835:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,836:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,837:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,865:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,867:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,869:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,869:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,870:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,872:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,872:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,874:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,875:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,876:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,876:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,879:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,884:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,887:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,890:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,891:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,898:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,902:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,903:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,904:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,904:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,905:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,906:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,907:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,919:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,921:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,921:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,922:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,923:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,923:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,924:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:12,925:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:12,929:INFO:Calculating mean and std
2022-11-15 23:08:12,930:INFO:Creating metrics dataframe
2022-11-15 23:08:12,933:INFO:Uploading results into container
2022-11-15 23:08:12,934:INFO:Uploading model into container now
2022-11-15 23:08:12,934:INFO:master_model_container: 5
2022-11-15 23:08:12,935:INFO:display_container: 2
2022-11-15 23:08:12,935:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8941, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-15 23:08:12,935:INFO:create_model() successfully completed......................................
2022-11-15 23:08:13,123:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:13,123:INFO:Creating metrics dataframe
2022-11-15 23:08:13,133:INFO:Initializing Ridge Classifier
2022-11-15 23:08:13,133:INFO:Total runtime is 0.10006745656331381 minutes
2022-11-15 23:08:13,136:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:13,137:INFO:Initializing create_model()
2022-11-15 23:08:13,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:13,137:INFO:Checking exceptions
2022-11-15 23:08:13,140:INFO:Importing libraries
2022-11-15 23:08:13,140:INFO:Copying training dataset
2022-11-15 23:08:13,145:INFO:Defining folds
2022-11-15 23:08:13,145:INFO:Declaring metric variables
2022-11-15 23:08:13,150:INFO:Importing untrained model
2022-11-15 23:08:13,156:INFO:Ridge Classifier Imported successfully
2022-11-15 23:08:13,166:INFO:Starting cross validation
2022-11-15 23:08:13,167:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:13,232:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,236:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,238:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,242:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,247:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,251:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,254:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,256:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,261:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,263:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,265:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,266:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,267:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,267:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,269:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,269:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,271:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,275:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,276:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,277:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,278:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,279:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,281:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,282:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,287:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,289:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,290:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,291:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,292:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,292:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,293:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,294:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,295:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,296:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,297:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,298:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,300:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,301:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,302:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:13,303:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:13,306:INFO:Calculating mean and std
2022-11-15 23:08:13,309:INFO:Creating metrics dataframe
2022-11-15 23:08:13,313:INFO:Uploading results into container
2022-11-15 23:08:13,314:INFO:Uploading model into container now
2022-11-15 23:08:13,314:INFO:master_model_container: 6
2022-11-15 23:08:13,314:INFO:display_container: 2
2022-11-15 23:08:13,315:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8941, solver='auto', tol=0.001)
2022-11-15 23:08:13,315:INFO:create_model() successfully completed......................................
2022-11-15 23:08:13,500:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:13,500:INFO:Creating metrics dataframe
2022-11-15 23:08:13,511:INFO:Initializing Random Forest Classifier
2022-11-15 23:08:13,511:INFO:Total runtime is 0.10636525948842368 minutes
2022-11-15 23:08:13,515:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:13,516:INFO:Initializing create_model()
2022-11-15 23:08:13,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:13,516:INFO:Checking exceptions
2022-11-15 23:08:13,518:INFO:Importing libraries
2022-11-15 23:08:13,519:INFO:Copying training dataset
2022-11-15 23:08:13,523:INFO:Defining folds
2022-11-15 23:08:13,524:INFO:Declaring metric variables
2022-11-15 23:08:13,530:INFO:Importing untrained model
2022-11-15 23:08:13,536:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:08:13,545:INFO:Starting cross validation
2022-11-15 23:08:13,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:14,270:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,271:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,271:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,276:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,279:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,281:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,285:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,286:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,289:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,295:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,299:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,303:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,316:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,321:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,325:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,329:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,334:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,334:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,337:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,340:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,365:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,367:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,370:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,404:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,405:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,407:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,464:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,465:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,467:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,470:INFO:Calculating mean and std
2022-11-15 23:08:14,472:INFO:Creating metrics dataframe
2022-11-15 23:08:14,475:INFO:Uploading results into container
2022-11-15 23:08:14,476:INFO:Uploading model into container now
2022-11-15 23:08:14,476:INFO:master_model_container: 7
2022-11-15 23:08:14,476:INFO:display_container: 2
2022-11-15 23:08:14,477:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8941, verbose=0, warm_start=False)
2022-11-15 23:08:14,477:INFO:create_model() successfully completed......................................
2022-11-15 23:08:14,659:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:14,659:INFO:Creating metrics dataframe
2022-11-15 23:08:14,671:INFO:Initializing Quadratic Discriminant Analysis
2022-11-15 23:08:14,672:INFO:Total runtime is 0.1257153590520223 minutes
2022-11-15 23:08:14,676:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:14,677:INFO:Initializing create_model()
2022-11-15 23:08:14,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:14,677:INFO:Checking exceptions
2022-11-15 23:08:14,680:INFO:Importing libraries
2022-11-15 23:08:14,680:INFO:Copying training dataset
2022-11-15 23:08:14,684:INFO:Defining folds
2022-11-15 23:08:14,684:INFO:Declaring metric variables
2022-11-15 23:08:14,691:INFO:Importing untrained model
2022-11-15 23:08:14,697:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-15 23:08:14,708:INFO:Starting cross validation
2022-11-15 23:08:14,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:14,822:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,826:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,829:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,829:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,834:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,839:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,838:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,843:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,847:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,850:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,851:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,853:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,855:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,856:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,856:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,857:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,858:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,861:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,861:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,863:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,866:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,866:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,868:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,870:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,871:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,877:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,880:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,882:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:14,885:INFO:Calculating mean and std
2022-11-15 23:08:14,888:INFO:Creating metrics dataframe
2022-11-15 23:08:14,891:INFO:Uploading results into container
2022-11-15 23:08:14,892:INFO:Uploading model into container now
2022-11-15 23:08:14,893:INFO:master_model_container: 8
2022-11-15 23:08:14,893:INFO:display_container: 2
2022-11-15 23:08:14,894:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-15 23:08:14,894:INFO:create_model() successfully completed......................................
2022-11-15 23:08:15,083:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:15,083:INFO:Creating metrics dataframe
2022-11-15 23:08:15,093:INFO:Initializing Ada Boost Classifier
2022-11-15 23:08:15,093:INFO:Total runtime is 0.13273478746414186 minutes
2022-11-15 23:08:15,098:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:15,099:INFO:Initializing create_model()
2022-11-15 23:08:15,099:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:15,099:INFO:Checking exceptions
2022-11-15 23:08:15,102:INFO:Importing libraries
2022-11-15 23:08:15,102:INFO:Copying training dataset
2022-11-15 23:08:15,106:INFO:Defining folds
2022-11-15 23:08:15,106:INFO:Declaring metric variables
2022-11-15 23:08:15,114:INFO:Importing untrained model
2022-11-15 23:08:15,120:INFO:Ada Boost Classifier Imported successfully
2022-11-15 23:08:15,132:INFO:Starting cross validation
2022-11-15 23:08:15,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:15,668:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,672:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,674:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,675:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,676:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,677:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,680:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,682:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,683:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,683:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,684:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,685:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,685:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,687:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,687:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,689:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,693:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,695:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,697:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,697:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,697:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,698:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,698:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,699:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,700:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,701:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

g_start, len(result))

2022-11-15 23:08:15,701:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,702:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,702:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,703:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,704:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,711:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,714:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,716:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,717:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,723:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,724:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,727:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:15,727:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:15,732:INFO:Calculating mean and std
2022-11-15 23:08:15,734:INFO:Creating metrics dataframe
2022-11-15 23:08:15,737:INFO:Uploading results into container
2022-11-15 23:08:15,738:INFO:Uploading model into container now
2022-11-15 23:08:15,739:INFO:master_model_container: 9
2022-11-15 23:08:15,740:INFO:display_container: 2
2022-11-15 23:08:15,741:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8941)
2022-11-15 23:08:15,741:INFO:create_model() successfully completed......................................
2022-11-15 23:08:15,924:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:15,924:INFO:Creating metrics dataframe
2022-11-15 23:08:15,936:INFO:Initializing Gradient Boosting Classifier
2022-11-15 23:08:15,937:INFO:Total runtime is 0.14680097897847494 minutes
2022-11-15 23:08:15,940:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:15,941:INFO:Initializing create_model()
2022-11-15 23:08:15,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:15,941:INFO:Checking exceptions
2022-11-15 23:08:15,945:INFO:Importing libraries
2022-11-15 23:08:15,945:INFO:Copying training dataset
2022-11-15 23:08:15,950:INFO:Defining folds
2022-11-15 23:08:15,950:INFO:Declaring metric variables
2022-11-15 23:08:15,955:INFO:Importing untrained model
2022-11-15 23:08:15,962:INFO:Gradient Boosting Classifier Imported successfully
2022-11-15 23:08:15,974:INFO:Starting cross validation
2022-11-15 23:08:15,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:29,752:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,757:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,760:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,851:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,856:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,865:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,912:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,920:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,925:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,953:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,956:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,961:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,982:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,986:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:29,989:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,014:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,017:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,022:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,143:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,146:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,149:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,185:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,188:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,190:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,273:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,277:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,280:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,431:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,433:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,435:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,439:INFO:Calculating mean and std
2022-11-15 23:08:30,441:INFO:Creating metrics dataframe
2022-11-15 23:08:30,445:INFO:Uploading results into container
2022-11-15 23:08:30,445:INFO:Uploading model into container now
2022-11-15 23:08:30,446:INFO:master_model_container: 10
2022-11-15 23:08:30,446:INFO:display_container: 2
2022-11-15 23:08:30,447:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8941, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-15 23:08:30,448:INFO:create_model() successfully completed......................................
2022-11-15 23:08:30,665:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:30,665:INFO:Creating metrics dataframe
2022-11-15 23:08:30,677:INFO:Initializing Linear Discriminant Analysis
2022-11-15 23:08:30,677:INFO:Total runtime is 0.39247334400812783 minutes
2022-11-15 23:08:30,682:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:30,682:INFO:Initializing create_model()
2022-11-15 23:08:30,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:30,682:INFO:Checking exceptions
2022-11-15 23:08:30,685:INFO:Importing libraries
2022-11-15 23:08:30,685:INFO:Copying training dataset
2022-11-15 23:08:30,689:INFO:Defining folds
2022-11-15 23:08:30,690:INFO:Declaring metric variables
2022-11-15 23:08:30,703:INFO:Importing untrained model
2022-11-15 23:08:30,710:INFO:Linear Discriminant Analysis Imported successfully
2022-11-15 23:08:30,723:INFO:Starting cross validation
2022-11-15 23:08:30,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:30,848:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,853:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,857:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,857:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,858:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,859:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,861:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,862:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,862:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,863:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,864:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,865:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,867:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,870:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,871:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,873:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,875:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,881:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,883:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,885:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,887:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,889:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,889:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,890:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,890:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,890:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,891:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,891:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,892:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:30,896:INFO:Calculating mean and std
2022-11-15 23:08:30,898:INFO:Creating metrics dataframe
2022-11-15 23:08:30,901:INFO:Uploading results into container
2022-11-15 23:08:30,901:INFO:Uploading model into container now
2022-11-15 23:08:30,902:INFO:master_model_container: 11
2022-11-15 23:08:30,902:INFO:display_container: 2
2022-11-15 23:08:30,902:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-15 23:08:30,903:INFO:create_model() successfully completed......................................
2022-11-15 23:08:31,093:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:31,093:INFO:Creating metrics dataframe
2022-11-15 23:08:31,106:INFO:Initializing Extra Trees Classifier
2022-11-15 23:08:31,106:INFO:Total runtime is 0.39961420694986977 minutes
2022-11-15 23:08:31,110:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:31,110:INFO:Initializing create_model()
2022-11-15 23:08:31,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:31,111:INFO:Checking exceptions
2022-11-15 23:08:31,112:INFO:Importing libraries
2022-11-15 23:08:31,113:INFO:Copying training dataset
2022-11-15 23:08:31,117:INFO:Defining folds
2022-11-15 23:08:31,117:INFO:Declaring metric variables
2022-11-15 23:08:31,121:INFO:Importing untrained model
2022-11-15 23:08:31,128:INFO:Extra Trees Classifier Imported successfully
2022-11-15 23:08:31,138:INFO:Starting cross validation
2022-11-15 23:08:31,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:31,909:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,913:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,917:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,927:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,931:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,934:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,951:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,960:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,967:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,968:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,972:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:31,976:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,017:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,021:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,023:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,026:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,029:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,033:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,037:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,040:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,044:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,044:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,047:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,108:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,111:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,113:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,177:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,179:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,181:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:32,186:INFO:Calculating mean and std
2022-11-15 23:08:32,188:INFO:Creating metrics dataframe
2022-11-15 23:08:32,192:INFO:Uploading results into container
2022-11-15 23:08:32,193:INFO:Uploading model into container now
2022-11-15 23:08:32,194:INFO:master_model_container: 12
2022-11-15 23:08:32,194:INFO:display_container: 2
2022-11-15 23:08:32,195:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8941, verbose=0, warm_start=False)
2022-11-15 23:08:32,195:INFO:create_model() successfully completed......................................
2022-11-15 23:08:32,410:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:32,410:INFO:Creating metrics dataframe
2022-11-15 23:08:32,422:INFO:Initializing Extreme Gradient Boosting
2022-11-15 23:08:32,423:INFO:Total runtime is 0.42156931559244787 minutes
2022-11-15 23:08:32,426:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:32,427:INFO:Initializing create_model()
2022-11-15 23:08:32,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:32,427:INFO:Checking exceptions
2022-11-15 23:08:32,431:INFO:Importing libraries
2022-11-15 23:08:32,431:INFO:Copying training dataset
2022-11-15 23:08:32,436:INFO:Defining folds
2022-11-15 23:08:32,436:INFO:Declaring metric variables
2022-11-15 23:08:32,440:INFO:Importing untrained model
2022-11-15 23:08:32,446:INFO:Extreme Gradient Boosting Imported successfully
2022-11-15 23:08:32,457:INFO:Starting cross validation
2022-11-15 23:08:32,459:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:33,671:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,675:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,680:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,695:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,697:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,699:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,700:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,703:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,706:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,709:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,710:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,712:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,713:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,716:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,717:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,731:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,732:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,735:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,736:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,739:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,741:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,742:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,744:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,745:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,746:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,747:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,750:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,763:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,765:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,766:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:33,770:INFO:Calculating mean and std
2022-11-15 23:08:33,771:INFO:Creating metrics dataframe
2022-11-15 23:08:33,774:INFO:Uploading results into container
2022-11-15 23:08:33,775:INFO:Uploading model into container now
2022-11-15 23:08:33,775:INFO:master_model_container: 13
2022-11-15 23:08:33,776:INFO:display_container: 2
2022-11-15 23:08:33,777:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2022-11-15 23:08:33,777:INFO:create_model() successfully completed......................................
2022-11-15 23:08:33,964:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:33,964:INFO:Creating metrics dataframe
2022-11-15 23:08:33,978:INFO:Initializing Light Gradient Boosting Machine
2022-11-15 23:08:33,978:INFO:Total runtime is 0.4474848588307698 minutes
2022-11-15 23:08:33,982:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:33,983:INFO:Initializing create_model()
2022-11-15 23:08:33,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:33,983:INFO:Checking exceptions
2022-11-15 23:08:33,986:INFO:Importing libraries
2022-11-15 23:08:33,986:INFO:Copying training dataset
2022-11-15 23:08:33,989:INFO:Defining folds
2022-11-15 23:08:33,989:INFO:Declaring metric variables
2022-11-15 23:08:33,996:INFO:Importing untrained model
2022-11-15 23:08:34,006:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-15 23:08:34,021:INFO:Starting cross validation
2022-11-15 23:08:34,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:36,548:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,552:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,560:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,658:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,668:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,672:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,676:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,676:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,681:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,686:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,689:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,691:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,693:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,697:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,704:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,709:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,712:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,756:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,759:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,763:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,780:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,781:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,785:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,786:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,787:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,787:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,788:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,790:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,793:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:36,798:INFO:Calculating mean and std
2022-11-15 23:08:36,801:INFO:Creating metrics dataframe
2022-11-15 23:08:36,806:INFO:Uploading results into container
2022-11-15 23:08:36,807:INFO:Uploading model into container now
2022-11-15 23:08:36,807:INFO:master_model_container: 14
2022-11-15 23:08:36,807:INFO:display_container: 2
2022-11-15 23:08:36,808:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8941, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-15 23:08:36,808:INFO:create_model() successfully completed......................................
2022-11-15 23:08:37,062:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:37,063:INFO:Creating metrics dataframe
2022-11-15 23:08:37,076:INFO:Initializing Dummy Classifier
2022-11-15 23:08:37,076:INFO:Total runtime is 0.4991171598434448 minutes
2022-11-15 23:08:37,080:INFO:SubProcess create_model() called ==================================
2022-11-15 23:08:37,081:INFO:Initializing create_model()
2022-11-15 23:08:37,081:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473016760>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:37,081:INFO:Checking exceptions
2022-11-15 23:08:37,084:INFO:Importing libraries
2022-11-15 23:08:37,084:INFO:Copying training dataset
2022-11-15 23:08:37,089:INFO:Defining folds
2022-11-15 23:08:37,089:INFO:Declaring metric variables
2022-11-15 23:08:37,093:INFO:Importing untrained model
2022-11-15 23:08:37,100:INFO:Dummy Classifier Imported successfully
2022-11-15 23:08:37,110:INFO:Starting cross validation
2022-11-15 23:08:37,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:08:37,216:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,219:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,223:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,226:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,226:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,227:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,229:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,230:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,232:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,235:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,236:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,239:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,243:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,245:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,246:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,249:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,250:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,251:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,251:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,252:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,252:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,252:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,252:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,253:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,254:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,255:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,256:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,258:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,259:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,260:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,262:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,262:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,264:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,265:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

g_start, len(result))

2022-11-15 23:08:37,266:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,267:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,269:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:08:37,269:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:08:37,272:INFO:Calculating mean and std
2022-11-15 23:08:37,276:INFO:Creating metrics dataframe
2022-11-15 23:08:37,280:INFO:Uploading results into container
2022-11-15 23:08:37,281:INFO:Uploading model into container now
2022-11-15 23:08:37,281:INFO:master_model_container: 15
2022-11-15 23:08:37,281:INFO:display_container: 2
2022-11-15 23:08:37,282:INFO:DummyClassifier(constant=None, random_state=8941, strategy='prior')
2022-11-15 23:08:37,282:INFO:create_model() successfully completed......................................
2022-11-15 23:08:37,508:INFO:SubProcess create_model() end ==================================
2022-11-15 23:08:37,509:INFO:Creating metrics dataframe
2022-11-15 23:08:37,537:INFO:Initializing create_model()
2022-11-15 23:08:37,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47288E3A0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8941, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:08:37,537:INFO:Checking exceptions
2022-11-15 23:08:37,545:INFO:Importing libraries
2022-11-15 23:08:37,545:INFO:Copying training dataset
2022-11-15 23:08:37,550:INFO:Defining folds
2022-11-15 23:08:37,550:INFO:Declaring metric variables
2022-11-15 23:08:37,550:INFO:Importing untrained model
2022-11-15 23:08:37,550:INFO:Declaring custom model
2022-11-15 23:08:37,550:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:08:37,551:INFO:Cross validation set to False
2022-11-15 23:08:37,551:INFO:Fitting Model
2022-11-15 23:08:37,805:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8941, verbose=0, warm_start=False)
2022-11-15 23:08:37,805:INFO:create_model() successfully completed......................................
2022-11-15 23:08:38,040:INFO:master_model_container: 15
2022-11-15 23:08:38,040:INFO:display_container: 2
2022-11-15 23:08:38,041:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8941, verbose=0, warm_start=False)
2022-11-15 23:08:38,041:INFO:compare_models() successfully completed......................................
2022-11-15 23:08:56,855:INFO:PyCaret ClassificationExperiment
2022-11-15 23:08:56,855:INFO:Logging name: clf-default-name
2022-11-15 23:08:56,856:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:08:56,856:INFO:version 3.0.0.rc4
2022-11-15 23:08:56,856:INFO:Initializing setup()
2022-11-15 23:08:56,856:INFO:self.USI: 81bb
2022-11-15 23:08:56,856:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:08:56,856:INFO:Checking environment
2022-11-15 23:08:56,856:INFO:python_version: 3.9.0
2022-11-15 23:08:56,856:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:08:56,856:INFO:machine: AMD64
2022-11-15 23:08:56,856:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:08:56,856:INFO:Memory: svmem(total=7968530432, available=885731328, percent=88.9, used=7082799104, free=885731328)
2022-11-15 23:08:56,856:INFO:Physical Core: 6
2022-11-15 23:08:56,856:INFO:Logical Core: 12
2022-11-15 23:08:56,856:INFO:Checking libraries
2022-11-15 23:08:56,856:INFO:System:
2022-11-15 23:08:56,856:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:08:56,856:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:08:56,856:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:08:56,856:INFO:PyCaret required dependencies:
2022-11-15 23:08:56,856:INFO:                 pip: 22.1.2
2022-11-15 23:08:56,856:INFO:          setuptools: 60.10.0
2022-11-15 23:08:56,856:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:08:56,856:INFO:             IPython: 8.5.0
2022-11-15 23:08:56,856:INFO:          ipywidgets: 8.0.2
2022-11-15 23:08:56,857:INFO:                tqdm: 4.64.1
2022-11-15 23:08:56,857:INFO:               numpy: 1.22.4
2022-11-15 23:08:56,857:INFO:              pandas: 1.4.4
2022-11-15 23:08:56,857:INFO:              jinja2: 3.1.2
2022-11-15 23:08:56,857:INFO:               scipy: 1.8.1
2022-11-15 23:08:56,857:INFO:              joblib: 1.2.0
2022-11-15 23:08:56,857:INFO:             sklearn: 1.1.2
2022-11-15 23:08:56,857:INFO:                pyod: 1.0.6
2022-11-15 23:08:56,857:INFO:            imblearn: 0.9.1
2022-11-15 23:08:56,857:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:08:56,857:INFO:            lightgbm: 3.3.3
2022-11-15 23:08:56,857:INFO:               numba: 0.55.2
2022-11-15 23:08:56,857:INFO:            requests: 2.28.1
2022-11-15 23:08:56,857:INFO:          matplotlib: 3.6.0
2022-11-15 23:08:56,857:INFO:          scikitplot: 0.3.7
2022-11-15 23:08:56,857:INFO:         yellowbrick: 1.5
2022-11-15 23:08:56,857:INFO:              plotly: 5.11.0
2022-11-15 23:08:56,857:INFO:             kaleido: 0.2.1
2022-11-15 23:08:56,857:INFO:         statsmodels: 0.13.5
2022-11-15 23:08:56,857:INFO:              sktime: 0.13.4
2022-11-15 23:08:56,857:INFO:               tbats: 1.1.1
2022-11-15 23:08:56,857:INFO:            pmdarima: 1.8.5
2022-11-15 23:08:56,857:INFO:              psutil: 5.9.2
2022-11-15 23:08:56,857:INFO:PyCaret optional dependencies:
2022-11-15 23:08:56,857:INFO:                shap: 0.41.0
2022-11-15 23:08:56,857:INFO:           interpret: 0.2.7
2022-11-15 23:08:56,857:INFO:                umap: Not installed
2022-11-15 23:08:56,857:INFO:    pandas_profiling: Not installed
2022-11-15 23:08:56,857:INFO:  explainerdashboard: Not installed
2022-11-15 23:08:56,857:INFO:             autoviz: Not installed
2022-11-15 23:08:56,857:INFO:           fairlearn: Not installed
2022-11-15 23:08:56,857:INFO:             xgboost: 1.7.1
2022-11-15 23:08:56,857:INFO:            catboost: Not installed
2022-11-15 23:08:56,857:INFO:              kmodes: Not installed
2022-11-15 23:08:56,857:INFO:             mlxtend: Not installed
2022-11-15 23:08:56,857:INFO:       statsforecast: Not installed
2022-11-15 23:08:56,857:INFO:        tune_sklearn: Not installed
2022-11-15 23:08:56,857:INFO:                 ray: Not installed
2022-11-15 23:08:56,857:INFO:            hyperopt: Not installed
2022-11-15 23:08:56,857:INFO:              optuna: Not installed
2022-11-15 23:08:56,858:INFO:               skopt: Not installed
2022-11-15 23:08:56,858:INFO:              mlflow: Not installed
2022-11-15 23:08:56,858:INFO:              gradio: Not installed
2022-11-15 23:08:56,858:INFO:             fastapi: Not installed
2022-11-15 23:08:56,858:INFO:             uvicorn: Not installed
2022-11-15 23:08:56,858:INFO:              m2cgen: Not installed
2022-11-15 23:08:56,858:INFO:           evidently: Not installed
2022-11-15 23:08:56,858:INFO:                nltk: 3.7
2022-11-15 23:08:56,858:INFO:            pyLDAvis: Not installed
2022-11-15 23:08:56,858:INFO:              gensim: Not installed
2022-11-15 23:08:56,858:INFO:               spacy: Not installed
2022-11-15 23:08:56,859:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:08:56,859:INFO:            textblob: Not installed
2022-11-15 23:08:56,859:INFO:               fugue: Not installed
2022-11-15 23:08:56,859:INFO:           streamlit: Not installed
2022-11-15 23:08:56,859:INFO:             prophet: Not installed
2022-11-15 23:08:56,859:INFO:None
2022-11-15 23:08:56,859:INFO:Set up data.
2022-11-15 23:08:56,868:INFO:Set up train/test split.
2022-11-15 23:08:56,874:INFO:Set up index.
2022-11-15 23:08:56,874:INFO:Assigning column types.
2022-11-15 23:08:56,878:INFO:Set up folding strategy.
2022-11-15 23:08:56,878:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:08:56,929:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:08:56,930:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:08:56,960:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:56,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:57,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:08:57,013:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:08:57,043:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:57,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:57,046:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:08:57,096:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:08:57,126:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:57,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:57,179:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:08:57,209:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:57,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:57,212:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:08:57,292:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:57,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:57,377:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:57,381:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:57,382:INFO:Preparing preprocessing pipeline...
2022-11-15 23:08:57,383:INFO:Set up label encoding.
2022-11-15 23:08:57,383:INFO:Set up simple imputation.
2022-11-15 23:08:57,383:INFO:Set up variance threshold.
2022-11-15 23:08:57,438:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:08:57,442:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['N', 'P', 'K', 'temperature',
                                             'humidity', 'ph', 'rainfall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:08:57,442:INFO:Creating final display dataframe.
2022-11-15 23:08:57,748:INFO:Setup display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13       Low variance threshold   
14               Fold Generator   
15                  Fold Number   
16                     CPU Jobs   
17                      Use GPU   
18               Log Experiment   
19              Experiment Name   
20                          USI   

                                                Value  
0                                                4709  
1                                               label  
2                                          Multiclass  
3   apple: 0, banana: 1, blackgram: 2, chickpea: 3...  
4                                           (2200, 8)  
5                                           (2200, 8)  
6                                           (1539, 8)  
7                                            (661, 8)  
8                                                   7  
9                                                True  
10                                             simple  
11                                               mean  
12                                           constant  
13                                                  0  
14                                    StratifiedKFold  
15                                                 10  
16                                                 -1  
17                                              False  
18                                              False  
19                                   clf-default-name  
20                                               81bb  
2022-11-15 23:08:57,841:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:57,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:57,933:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:08:57,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:08:57,948:INFO:setup() successfully completed in 1.09s...............
2022-11-15 23:09:11,570:INFO:PyCaret ClassificationExperiment
2022-11-15 23:09:11,570:INFO:Logging name: clf-default-name
2022-11-15 23:09:11,570:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:09:11,570:INFO:version 3.0.0.rc4
2022-11-15 23:09:11,570:INFO:Initializing setup()
2022-11-15 23:09:11,570:INFO:self.USI: 5539
2022-11-15 23:09:11,570:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:09:11,570:INFO:Checking environment
2022-11-15 23:09:11,570:INFO:python_version: 3.9.0
2022-11-15 23:09:11,570:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:09:11,571:INFO:machine: AMD64
2022-11-15 23:09:11,571:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:09:11,571:INFO:Memory: svmem(total=7968530432, available=881897472, percent=88.9, used=7086632960, free=881897472)
2022-11-15 23:09:11,571:INFO:Physical Core: 6
2022-11-15 23:09:11,571:INFO:Logical Core: 12
2022-11-15 23:09:11,571:INFO:Checking libraries
2022-11-15 23:09:11,571:INFO:System:
2022-11-15 23:09:11,571:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:09:11,571:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:09:11,571:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:09:11,571:INFO:PyCaret required dependencies:
2022-11-15 23:09:11,571:INFO:                 pip: 22.1.2
2022-11-15 23:09:11,571:INFO:          setuptools: 60.10.0
2022-11-15 23:09:11,571:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:09:11,571:INFO:             IPython: 8.5.0
2022-11-15 23:09:11,571:INFO:          ipywidgets: 8.0.2
2022-11-15 23:09:11,571:INFO:                tqdm: 4.64.1
2022-11-15 23:09:11,571:INFO:               numpy: 1.22.4
2022-11-15 23:09:11,571:INFO:              pandas: 1.4.4
2022-11-15 23:09:11,571:INFO:              jinja2: 3.1.2
2022-11-15 23:09:11,571:INFO:               scipy: 1.8.1
2022-11-15 23:09:11,571:INFO:              joblib: 1.2.0
2022-11-15 23:09:11,571:INFO:             sklearn: 1.1.2
2022-11-15 23:09:11,571:INFO:                pyod: 1.0.6
2022-11-15 23:09:11,572:INFO:            imblearn: 0.9.1
2022-11-15 23:09:11,572:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:09:11,572:INFO:            lightgbm: 3.3.3
2022-11-15 23:09:11,572:INFO:               numba: 0.55.2
2022-11-15 23:09:11,572:INFO:            requests: 2.28.1
2022-11-15 23:09:11,572:INFO:          matplotlib: 3.6.0
2022-11-15 23:09:11,572:INFO:          scikitplot: 0.3.7
2022-11-15 23:09:11,572:INFO:         yellowbrick: 1.5
2022-11-15 23:09:11,572:INFO:              plotly: 5.11.0
2022-11-15 23:09:11,572:INFO:             kaleido: 0.2.1
2022-11-15 23:09:11,572:INFO:         statsmodels: 0.13.5
2022-11-15 23:09:11,572:INFO:              sktime: 0.13.4
2022-11-15 23:09:11,572:INFO:               tbats: 1.1.1
2022-11-15 23:09:11,572:INFO:            pmdarima: 1.8.5
2022-11-15 23:09:11,572:INFO:              psutil: 5.9.2
2022-11-15 23:09:11,572:INFO:PyCaret optional dependencies:
2022-11-15 23:09:11,572:INFO:                shap: 0.41.0
2022-11-15 23:09:11,572:INFO:           interpret: 0.2.7
2022-11-15 23:09:11,572:INFO:                umap: Not installed
2022-11-15 23:09:11,572:INFO:    pandas_profiling: Not installed
2022-11-15 23:09:11,572:INFO:  explainerdashboard: Not installed
2022-11-15 23:09:11,572:INFO:             autoviz: Not installed
2022-11-15 23:09:11,572:INFO:           fairlearn: Not installed
2022-11-15 23:09:11,572:INFO:             xgboost: 1.7.1
2022-11-15 23:09:11,572:INFO:            catboost: Not installed
2022-11-15 23:09:11,572:INFO:              kmodes: Not installed
2022-11-15 23:09:11,573:INFO:             mlxtend: Not installed
2022-11-15 23:09:11,573:INFO:       statsforecast: Not installed
2022-11-15 23:09:11,573:INFO:        tune_sklearn: Not installed
2022-11-15 23:09:11,573:INFO:                 ray: Not installed
2022-11-15 23:09:11,573:INFO:            hyperopt: Not installed
2022-11-15 23:09:11,573:INFO:              optuna: Not installed
2022-11-15 23:09:11,573:INFO:               skopt: Not installed
2022-11-15 23:09:11,573:INFO:              mlflow: Not installed
2022-11-15 23:09:11,573:INFO:              gradio: Not installed
2022-11-15 23:09:11,573:INFO:             fastapi: Not installed
2022-11-15 23:09:11,573:INFO:             uvicorn: Not installed
2022-11-15 23:09:11,574:INFO:              m2cgen: Not installed
2022-11-15 23:09:11,574:INFO:           evidently: Not installed
2022-11-15 23:09:11,574:INFO:                nltk: 3.7
2022-11-15 23:09:11,574:INFO:            pyLDAvis: Not installed
2022-11-15 23:09:11,574:INFO:              gensim: Not installed
2022-11-15 23:09:11,574:INFO:               spacy: Not installed
2022-11-15 23:09:11,574:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:09:11,574:INFO:            textblob: Not installed
2022-11-15 23:09:11,574:INFO:               fugue: Not installed
2022-11-15 23:09:11,574:INFO:           streamlit: Not installed
2022-11-15 23:09:11,574:INFO:             prophet: Not installed
2022-11-15 23:09:11,574:INFO:None
2022-11-15 23:09:11,574:INFO:Set up data.
2022-11-15 23:09:11,581:INFO:Set up train/test split.
2022-11-15 23:09:11,585:INFO:Set up index.
2022-11-15 23:09:11,586:INFO:Assigning column types.
2022-11-15 23:09:11,590:INFO:Set up folding strategy.
2022-11-15 23:09:11,591:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:09:11,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:09:11,639:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:09:11,669:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:11,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:11,720:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:09:11,722:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:09:11,754:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:11,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:11,758:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:09:11,808:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:09:11,841:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:11,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:11,893:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:09:11,923:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:11,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:11,927:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:09:12,006:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:12,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:12,128:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:12,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:12,132:INFO:Preparing preprocessing pipeline...
2022-11-15 23:09:12,133:INFO:Set up label encoding.
2022-11-15 23:09:12,133:INFO:Set up simple imputation.
2022-11-15 23:09:12,134:INFO:Set up variance threshold.
2022-11-15 23:09:12,209:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:09:12,213:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['fixed acidity',
                                             'volatile acidity', 'citric acid',
                                             'residual sugar', 'chlorides',
                                             'free sulfur dioxide',
                                             'total su...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:09:12,213:INFO:Creating final display dataframe.
2022-11-15 23:09:12,544:INFO:Setup display_container:                     Description                               Value
0                    Session id                                4618
1                        Target                             quality
2                   Target type                          Multiclass
3                Target mapping  3: 0, 4: 1, 5: 2, 6: 3, 7: 4, 8: 5
4           Original data shape                          (1596, 12)
5        Transformed data shape                          (1596, 12)
6   Transformed train set shape                          (1117, 12)
7    Transformed test set shape                           (479, 12)
8              Numeric features                                  11
9                    Preprocess                                True
10              Imputation type                              simple
11           Numeric imputation                                mean
12       Categorical imputation                            constant
13       Low variance threshold                                   0
14               Fold Generator                     StratifiedKFold
15                  Fold Number                                  10
16                     CPU Jobs                                  -1
17                      Use GPU                               False
18               Log Experiment                               False
19              Experiment Name                    clf-default-name
20                          USI                                5539
2022-11-15 23:09:12,633:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:12,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:12,716:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:12,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:12,731:INFO:setup() successfully completed in 1.16s...............
2022-11-15 23:09:34,191:INFO:PyCaret ClassificationExperiment
2022-11-15 23:09:34,191:INFO:Logging name: clf-default-name
2022-11-15 23:09:34,191:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:09:34,191:INFO:version 3.0.0.rc4
2022-11-15 23:09:34,191:INFO:Initializing setup()
2022-11-15 23:09:34,191:INFO:self.USI: b4e9
2022-11-15 23:09:34,191:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:09:34,191:INFO:Checking environment
2022-11-15 23:09:34,191:INFO:python_version: 3.9.0
2022-11-15 23:09:34,192:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:09:34,192:INFO:machine: AMD64
2022-11-15 23:09:34,192:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:09:34,192:INFO:Memory: svmem(total=7968530432, available=805457920, percent=89.9, used=7163072512, free=805457920)
2022-11-15 23:09:34,192:INFO:Physical Core: 6
2022-11-15 23:09:34,192:INFO:Logical Core: 12
2022-11-15 23:09:34,192:INFO:Checking libraries
2022-11-15 23:09:34,192:INFO:System:
2022-11-15 23:09:34,192:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:09:34,192:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:09:34,192:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:09:34,192:INFO:PyCaret required dependencies:
2022-11-15 23:09:34,192:INFO:                 pip: 22.1.2
2022-11-15 23:09:34,192:INFO:          setuptools: 60.10.0
2022-11-15 23:09:34,192:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:09:34,193:INFO:             IPython: 8.5.0
2022-11-15 23:09:34,193:INFO:          ipywidgets: 8.0.2
2022-11-15 23:09:34,193:INFO:                tqdm: 4.64.1
2022-11-15 23:09:34,193:INFO:               numpy: 1.22.4
2022-11-15 23:09:34,193:INFO:              pandas: 1.4.4
2022-11-15 23:09:34,193:INFO:              jinja2: 3.1.2
2022-11-15 23:09:34,193:INFO:               scipy: 1.8.1
2022-11-15 23:09:34,193:INFO:              joblib: 1.2.0
2022-11-15 23:09:34,193:INFO:             sklearn: 1.1.2
2022-11-15 23:09:34,193:INFO:                pyod: 1.0.6
2022-11-15 23:09:34,193:INFO:            imblearn: 0.9.1
2022-11-15 23:09:34,193:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:09:34,193:INFO:            lightgbm: 3.3.3
2022-11-15 23:09:34,193:INFO:               numba: 0.55.2
2022-11-15 23:09:34,193:INFO:            requests: 2.28.1
2022-11-15 23:09:34,193:INFO:          matplotlib: 3.6.0
2022-11-15 23:09:34,193:INFO:          scikitplot: 0.3.7
2022-11-15 23:09:34,193:INFO:         yellowbrick: 1.5
2022-11-15 23:09:34,193:INFO:              plotly: 5.11.0
2022-11-15 23:09:34,193:INFO:             kaleido: 0.2.1
2022-11-15 23:09:34,193:INFO:         statsmodels: 0.13.5
2022-11-15 23:09:34,193:INFO:              sktime: 0.13.4
2022-11-15 23:09:34,193:INFO:               tbats: 1.1.1
2022-11-15 23:09:34,193:INFO:            pmdarima: 1.8.5
2022-11-15 23:09:34,193:INFO:              psutil: 5.9.2
2022-11-15 23:09:34,193:INFO:PyCaret optional dependencies:
2022-11-15 23:09:34,193:INFO:                shap: 0.41.0
2022-11-15 23:09:34,193:INFO:           interpret: 0.2.7
2022-11-15 23:09:34,193:INFO:                umap: Not installed
2022-11-15 23:09:34,193:INFO:    pandas_profiling: Not installed
2022-11-15 23:09:34,193:INFO:  explainerdashboard: Not installed
2022-11-15 23:09:34,194:INFO:             autoviz: Not installed
2022-11-15 23:09:34,194:INFO:           fairlearn: Not installed
2022-11-15 23:09:34,194:INFO:             xgboost: 1.7.1
2022-11-15 23:09:34,194:INFO:            catboost: Not installed
2022-11-15 23:09:34,194:INFO:              kmodes: Not installed
2022-11-15 23:09:34,194:INFO:             mlxtend: Not installed
2022-11-15 23:09:34,194:INFO:       statsforecast: Not installed
2022-11-15 23:09:34,194:INFO:        tune_sklearn: Not installed
2022-11-15 23:09:34,194:INFO:                 ray: Not installed
2022-11-15 23:09:34,194:INFO:            hyperopt: Not installed
2022-11-15 23:09:34,194:INFO:              optuna: Not installed
2022-11-15 23:09:34,194:INFO:               skopt: Not installed
2022-11-15 23:09:34,194:INFO:              mlflow: Not installed
2022-11-15 23:09:34,194:INFO:              gradio: Not installed
2022-11-15 23:09:34,194:INFO:             fastapi: Not installed
2022-11-15 23:09:34,194:INFO:             uvicorn: Not installed
2022-11-15 23:09:34,194:INFO:              m2cgen: Not installed
2022-11-15 23:09:34,194:INFO:           evidently: Not installed
2022-11-15 23:09:34,194:INFO:                nltk: 3.7
2022-11-15 23:09:34,194:INFO:            pyLDAvis: Not installed
2022-11-15 23:09:34,194:INFO:              gensim: Not installed
2022-11-15 23:09:34,194:INFO:               spacy: Not installed
2022-11-15 23:09:34,194:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:09:34,194:INFO:            textblob: Not installed
2022-11-15 23:09:34,194:INFO:               fugue: Not installed
2022-11-15 23:09:34,194:INFO:           streamlit: Not installed
2022-11-15 23:09:34,194:INFO:             prophet: Not installed
2022-11-15 23:09:34,194:INFO:None
2022-11-15 23:09:34,195:INFO:Set up data.
2022-11-15 23:09:34,199:INFO:Set up train/test split.
2022-11-15 23:09:34,204:INFO:Set up index.
2022-11-15 23:09:34,206:INFO:Assigning column types.
2022-11-15 23:09:34,210:INFO:Set up folding strategy.
2022-11-15 23:09:34,210:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:09:34,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:09:34,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:09:34,287:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:34,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:34,336:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:09:34,338:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:09:34,367:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:34,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:34,370:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:09:34,419:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:09:34,450:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:34,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:34,501:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:09:34,530:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:34,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:34,534:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:09:34,610:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:34,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:34,691:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:34,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:34,695:INFO:Preparing preprocessing pipeline...
2022-11-15 23:09:34,696:INFO:Set up simple imputation.
2022-11-15 23:09:34,696:INFO:Set up variance threshold.
2022-11-15 23:09:34,734:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:09:34,737:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:09:34,737:INFO:Creating final display dataframe.
2022-11-15 23:09:34,997:INFO:Setup display_container:                     Description             Value
0                    Session id              7263
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation          constant
12       Low variance threshold                 0
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              b4e9
2022-11-15 23:09:35,086:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:35,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:35,174:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:09:35,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:09:35,188:INFO:setup() successfully completed in 1.0s...............
2022-11-15 23:09:55,841:INFO:Initializing compare_models()
2022-11-15 23:09:55,841:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, include=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4730167C0>, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, 'include': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C4730167C0>, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:09:55,842:INFO:Checking exceptions
2022-11-15 23:10:00,916:INFO:Initializing compare_models()
2022-11-15 23:10:00,916:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, include=crop_df, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, 'include': 'crop_df', 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:10:00,916:INFO:Checking exceptions
2022-11-15 23:11:09,652:INFO:Initializing compare_models()
2022-11-15 23:11:09,652:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:11:09,653:INFO:Checking exceptions
2022-11-15 23:11:09,657:INFO:Preparing display monitor
2022-11-15 23:11:09,707:INFO:Initializing Logistic Regression
2022-11-15 23:11:09,708:INFO:Total runtime is 2.5288263956705728e-05 minutes
2022-11-15 23:11:09,712:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:09,712:INFO:Initializing create_model()
2022-11-15 23:11:09,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:09,713:INFO:Checking exceptions
2022-11-15 23:11:09,715:INFO:Importing libraries
2022-11-15 23:11:09,715:INFO:Copying training dataset
2022-11-15 23:11:09,718:INFO:Defining folds
2022-11-15 23:11:09,718:INFO:Declaring metric variables
2022-11-15 23:11:09,724:INFO:Importing untrained model
2022-11-15 23:11:09,730:INFO:Logistic Regression Imported successfully
2022-11-15 23:11:09,743:INFO:Starting cross validation
2022-11-15 23:11:09,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:10,230:INFO:Calculating mean and std
2022-11-15 23:11:10,231:INFO:Creating metrics dataframe
2022-11-15 23:11:10,235:INFO:Uploading results into container
2022-11-15 23:11:10,235:INFO:Uploading model into container now
2022-11-15 23:11:10,235:INFO:master_model_container: 1
2022-11-15 23:11:10,236:INFO:display_container: 2
2022-11-15 23:11:10,236:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7263, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:11:10,236:INFO:create_model() successfully completed......................................
2022-11-15 23:11:10,463:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:10,463:INFO:Creating metrics dataframe
2022-11-15 23:11:10,473:INFO:Initializing K Neighbors Classifier
2022-11-15 23:11:10,473:INFO:Total runtime is 0.012775444984436035 minutes
2022-11-15 23:11:10,478:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:10,479:INFO:Initializing create_model()
2022-11-15 23:11:10,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:10,479:INFO:Checking exceptions
2022-11-15 23:11:10,482:INFO:Importing libraries
2022-11-15 23:11:10,482:INFO:Copying training dataset
2022-11-15 23:11:10,485:INFO:Defining folds
2022-11-15 23:11:10,486:INFO:Declaring metric variables
2022-11-15 23:11:10,490:INFO:Importing untrained model
2022-11-15 23:11:10,494:INFO:K Neighbors Classifier Imported successfully
2022-11-15 23:11:10,505:INFO:Starting cross validation
2022-11-15 23:11:10,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:10,740:INFO:Calculating mean and std
2022-11-15 23:11:10,742:INFO:Creating metrics dataframe
2022-11-15 23:11:10,747:INFO:Uploading results into container
2022-11-15 23:11:10,748:INFO:Uploading model into container now
2022-11-15 23:11:10,748:INFO:master_model_container: 2
2022-11-15 23:11:10,748:INFO:display_container: 2
2022-11-15 23:11:10,748:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-15 23:11:10,748:INFO:create_model() successfully completed......................................
2022-11-15 23:11:10,974:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:10,975:INFO:Creating metrics dataframe
2022-11-15 23:11:10,985:INFO:Initializing Naive Bayes
2022-11-15 23:11:10,985:INFO:Total runtime is 0.021308632691701253 minutes
2022-11-15 23:11:10,990:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:10,991:INFO:Initializing create_model()
2022-11-15 23:11:10,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:10,991:INFO:Checking exceptions
2022-11-15 23:11:10,993:INFO:Importing libraries
2022-11-15 23:11:10,993:INFO:Copying training dataset
2022-11-15 23:11:10,995:INFO:Defining folds
2022-11-15 23:11:10,996:INFO:Declaring metric variables
2022-11-15 23:11:11,000:INFO:Importing untrained model
2022-11-15 23:11:11,006:INFO:Naive Bayes Imported successfully
2022-11-15 23:11:11,016:INFO:Starting cross validation
2022-11-15 23:11:11,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:11,136:INFO:Calculating mean and std
2022-11-15 23:11:11,138:INFO:Creating metrics dataframe
2022-11-15 23:11:11,141:INFO:Uploading results into container
2022-11-15 23:11:11,143:INFO:Uploading model into container now
2022-11-15 23:11:11,144:INFO:master_model_container: 3
2022-11-15 23:11:11,144:INFO:display_container: 2
2022-11-15 23:11:11,144:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:11:11,144:INFO:create_model() successfully completed......................................
2022-11-15 23:11:11,385:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:11,385:INFO:Creating metrics dataframe
2022-11-15 23:11:11,397:INFO:Initializing Decision Tree Classifier
2022-11-15 23:11:11,397:INFO:Total runtime is 0.028172751267751057 minutes
2022-11-15 23:11:11,401:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:11,402:INFO:Initializing create_model()
2022-11-15 23:11:11,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:11,402:INFO:Checking exceptions
2022-11-15 23:11:11,404:INFO:Importing libraries
2022-11-15 23:11:11,404:INFO:Copying training dataset
2022-11-15 23:11:11,408:INFO:Defining folds
2022-11-15 23:11:11,409:INFO:Declaring metric variables
2022-11-15 23:11:11,414:INFO:Importing untrained model
2022-11-15 23:11:11,419:INFO:Decision Tree Classifier Imported successfully
2022-11-15 23:11:11,430:INFO:Starting cross validation
2022-11-15 23:11:11,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:11,551:INFO:Calculating mean and std
2022-11-15 23:11:11,555:INFO:Creating metrics dataframe
2022-11-15 23:11:11,558:INFO:Uploading results into container
2022-11-15 23:11:11,560:INFO:Uploading model into container now
2022-11-15 23:11:11,561:INFO:master_model_container: 4
2022-11-15 23:11:11,561:INFO:display_container: 2
2022-11-15 23:11:11,561:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7263, splitter='best')
2022-11-15 23:11:11,561:INFO:create_model() successfully completed......................................
2022-11-15 23:11:11,781:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:11,781:INFO:Creating metrics dataframe
2022-11-15 23:11:11,790:INFO:Initializing SVM - Linear Kernel
2022-11-15 23:11:11,791:INFO:Total runtime is 0.03474527597427368 minutes
2022-11-15 23:11:11,794:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:11,795:INFO:Initializing create_model()
2022-11-15 23:11:11,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:11,796:INFO:Checking exceptions
2022-11-15 23:11:11,799:INFO:Importing libraries
2022-11-15 23:11:11,799:INFO:Copying training dataset
2022-11-15 23:11:11,803:INFO:Defining folds
2022-11-15 23:11:11,803:INFO:Declaring metric variables
2022-11-15 23:11:11,807:INFO:Importing untrained model
2022-11-15 23:11:11,812:INFO:SVM - Linear Kernel Imported successfully
2022-11-15 23:11:11,823:INFO:Starting cross validation
2022-11-15 23:11:11,825:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:11,912:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:11,924:INFO:Calculating mean and std
2022-11-15 23:11:11,926:INFO:Creating metrics dataframe
2022-11-15 23:11:11,930:INFO:Uploading results into container
2022-11-15 23:11:11,931:INFO:Uploading model into container now
2022-11-15 23:11:11,931:INFO:master_model_container: 5
2022-11-15 23:11:11,931:INFO:display_container: 2
2022-11-15 23:11:11,932:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7263, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-15 23:11:11,932:INFO:create_model() successfully completed......................................
2022-11-15 23:11:12,155:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:12,156:INFO:Creating metrics dataframe
2022-11-15 23:11:12,165:INFO:Initializing Ridge Classifier
2022-11-15 23:11:12,166:INFO:Total runtime is 0.04099278052647909 minutes
2022-11-15 23:11:12,169:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:12,170:INFO:Initializing create_model()
2022-11-15 23:11:12,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:12,171:INFO:Checking exceptions
2022-11-15 23:11:12,173:INFO:Importing libraries
2022-11-15 23:11:12,173:INFO:Copying training dataset
2022-11-15 23:11:12,176:INFO:Defining folds
2022-11-15 23:11:12,177:INFO:Declaring metric variables
2022-11-15 23:11:12,182:INFO:Importing untrained model
2022-11-15 23:11:12,187:INFO:Ridge Classifier Imported successfully
2022-11-15 23:11:12,200:INFO:Starting cross validation
2022-11-15 23:11:12,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:12,306:INFO:Calculating mean and std
2022-11-15 23:11:12,310:INFO:Creating metrics dataframe
2022-11-15 23:11:12,313:INFO:Uploading results into container
2022-11-15 23:11:12,314:INFO:Uploading model into container now
2022-11-15 23:11:12,315:INFO:master_model_container: 6
2022-11-15 23:11:12,315:INFO:display_container: 2
2022-11-15 23:11:12,316:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=7263, solver='auto', tol=0.001)
2022-11-15 23:11:12,316:INFO:create_model() successfully completed......................................
2022-11-15 23:11:12,541:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:12,541:INFO:Creating metrics dataframe
2022-11-15 23:11:12,552:INFO:Initializing Random Forest Classifier
2022-11-15 23:11:12,552:INFO:Total runtime is 0.047424980004628504 minutes
2022-11-15 23:11:12,556:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:12,556:INFO:Initializing create_model()
2022-11-15 23:11:12,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:12,556:INFO:Checking exceptions
2022-11-15 23:11:12,558:INFO:Importing libraries
2022-11-15 23:11:12,559:INFO:Copying training dataset
2022-11-15 23:11:12,563:INFO:Defining folds
2022-11-15 23:11:12,564:INFO:Declaring metric variables
2022-11-15 23:11:12,569:INFO:Importing untrained model
2022-11-15 23:11:12,575:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:11:12,585:INFO:Starting cross validation
2022-11-15 23:11:12,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:13,227:INFO:Calculating mean and std
2022-11-15 23:11:13,229:INFO:Creating metrics dataframe
2022-11-15 23:11:13,233:INFO:Uploading results into container
2022-11-15 23:11:13,234:INFO:Uploading model into container now
2022-11-15 23:11:13,234:INFO:master_model_container: 7
2022-11-15 23:11:13,234:INFO:display_container: 2
2022-11-15 23:11:13,235:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7263, verbose=0, warm_start=False)
2022-11-15 23:11:13,235:INFO:create_model() successfully completed......................................
2022-11-15 23:11:13,485:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:13,486:INFO:Creating metrics dataframe
2022-11-15 23:11:13,495:INFO:Initializing Quadratic Discriminant Analysis
2022-11-15 23:11:13,496:INFO:Total runtime is 0.06316301425298056 minutes
2022-11-15 23:11:13,501:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:13,501:INFO:Initializing create_model()
2022-11-15 23:11:13,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:13,501:INFO:Checking exceptions
2022-11-15 23:11:13,504:INFO:Importing libraries
2022-11-15 23:11:13,504:INFO:Copying training dataset
2022-11-15 23:11:13,507:INFO:Defining folds
2022-11-15 23:11:13,508:INFO:Declaring metric variables
2022-11-15 23:11:13,514:INFO:Importing untrained model
2022-11-15 23:11:13,520:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-15 23:11:13,530:INFO:Starting cross validation
2022-11-15 23:11:13,531:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:13,650:INFO:Calculating mean and std
2022-11-15 23:11:13,652:INFO:Creating metrics dataframe
2022-11-15 23:11:13,655:INFO:Uploading results into container
2022-11-15 23:11:13,657:INFO:Uploading model into container now
2022-11-15 23:11:13,657:INFO:master_model_container: 8
2022-11-15 23:11:13,657:INFO:display_container: 2
2022-11-15 23:11:13,658:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-15 23:11:13,658:INFO:create_model() successfully completed......................................
2022-11-15 23:11:13,881:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:13,882:INFO:Creating metrics dataframe
2022-11-15 23:11:13,893:INFO:Initializing Ada Boost Classifier
2022-11-15 23:11:13,893:INFO:Total runtime is 0.06977587938308716 minutes
2022-11-15 23:11:13,897:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:13,897:INFO:Initializing create_model()
2022-11-15 23:11:13,898:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:13,898:INFO:Checking exceptions
2022-11-15 23:11:13,901:INFO:Importing libraries
2022-11-15 23:11:13,901:INFO:Copying training dataset
2022-11-15 23:11:13,904:INFO:Defining folds
2022-11-15 23:11:13,905:INFO:Declaring metric variables
2022-11-15 23:11:13,910:INFO:Importing untrained model
2022-11-15 23:11:13,916:INFO:Ada Boost Classifier Imported successfully
2022-11-15 23:11:13,926:INFO:Starting cross validation
2022-11-15 23:11:13,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:14,198:INFO:Calculating mean and std
2022-11-15 23:11:14,200:INFO:Creating metrics dataframe
2022-11-15 23:11:14,203:INFO:Uploading results into container
2022-11-15 23:11:14,204:INFO:Uploading model into container now
2022-11-15 23:11:14,205:INFO:master_model_container: 9
2022-11-15 23:11:14,205:INFO:display_container: 2
2022-11-15 23:11:14,205:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7263)
2022-11-15 23:11:14,205:INFO:create_model() successfully completed......................................
2022-11-15 23:11:14,435:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:14,436:INFO:Creating metrics dataframe
2022-11-15 23:11:14,451:INFO:Initializing Gradient Boosting Classifier
2022-11-15 23:11:14,451:INFO:Total runtime is 0.07907973527908325 minutes
2022-11-15 23:11:14,460:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:14,461:INFO:Initializing create_model()
2022-11-15 23:11:14,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:14,462:INFO:Checking exceptions
2022-11-15 23:11:14,466:INFO:Importing libraries
2022-11-15 23:11:14,467:INFO:Copying training dataset
2022-11-15 23:11:14,486:INFO:Defining folds
2022-11-15 23:11:14,486:INFO:Declaring metric variables
2022-11-15 23:11:14,496:INFO:Importing untrained model
2022-11-15 23:11:14,502:INFO:Gradient Boosting Classifier Imported successfully
2022-11-15 23:11:14,513:INFO:Starting cross validation
2022-11-15 23:11:14,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:14,929:INFO:Calculating mean and std
2022-11-15 23:11:14,933:INFO:Creating metrics dataframe
2022-11-15 23:11:14,946:INFO:Uploading results into container
2022-11-15 23:11:14,949:INFO:Uploading model into container now
2022-11-15 23:11:14,950:INFO:master_model_container: 10
2022-11-15 23:11:14,951:INFO:display_container: 2
2022-11-15 23:11:14,952:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7263, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-15 23:11:14,953:INFO:create_model() successfully completed......................................
2022-11-15 23:11:15,289:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:15,290:INFO:Creating metrics dataframe
2022-11-15 23:11:15,301:INFO:Initializing Linear Discriminant Analysis
2022-11-15 23:11:15,301:INFO:Total runtime is 0.09324983358383179 minutes
2022-11-15 23:11:15,305:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:15,306:INFO:Initializing create_model()
2022-11-15 23:11:15,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:15,306:INFO:Checking exceptions
2022-11-15 23:11:15,309:INFO:Importing libraries
2022-11-15 23:11:15,310:INFO:Copying training dataset
2022-11-15 23:11:15,313:INFO:Defining folds
2022-11-15 23:11:15,314:INFO:Declaring metric variables
2022-11-15 23:11:15,320:INFO:Importing untrained model
2022-11-15 23:11:15,326:INFO:Linear Discriminant Analysis Imported successfully
2022-11-15 23:11:15,338:INFO:Starting cross validation
2022-11-15 23:11:15,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:15,465:INFO:Calculating mean and std
2022-11-15 23:11:15,467:INFO:Creating metrics dataframe
2022-11-15 23:11:15,471:INFO:Uploading results into container
2022-11-15 23:11:15,472:INFO:Uploading model into container now
2022-11-15 23:11:15,473:INFO:master_model_container: 11
2022-11-15 23:11:15,473:INFO:display_container: 2
2022-11-15 23:11:15,473:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-15 23:11:15,473:INFO:create_model() successfully completed......................................
2022-11-15 23:11:15,717:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:15,718:INFO:Creating metrics dataframe
2022-11-15 23:11:15,730:INFO:Initializing Extra Trees Classifier
2022-11-15 23:11:15,730:INFO:Total runtime is 0.10039891799290976 minutes
2022-11-15 23:11:15,735:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:15,735:INFO:Initializing create_model()
2022-11-15 23:11:15,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:15,736:INFO:Checking exceptions
2022-11-15 23:11:15,737:INFO:Importing libraries
2022-11-15 23:11:15,737:INFO:Copying training dataset
2022-11-15 23:11:15,742:INFO:Defining folds
2022-11-15 23:11:15,743:INFO:Declaring metric variables
2022-11-15 23:11:15,749:INFO:Importing untrained model
2022-11-15 23:11:15,755:INFO:Extra Trees Classifier Imported successfully
2022-11-15 23:11:15,766:INFO:Starting cross validation
2022-11-15 23:11:15,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:16,396:INFO:Calculating mean and std
2022-11-15 23:11:16,398:INFO:Creating metrics dataframe
2022-11-15 23:11:16,402:INFO:Uploading results into container
2022-11-15 23:11:16,402:INFO:Uploading model into container now
2022-11-15 23:11:16,403:INFO:master_model_container: 12
2022-11-15 23:11:16,403:INFO:display_container: 2
2022-11-15 23:11:16,404:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7263, verbose=0, warm_start=False)
2022-11-15 23:11:16,404:INFO:create_model() successfully completed......................................
2022-11-15 23:11:16,689:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:16,689:INFO:Creating metrics dataframe
2022-11-15 23:11:16,702:INFO:Initializing Extreme Gradient Boosting
2022-11-15 23:11:16,702:INFO:Total runtime is 0.11659058729807537 minutes
2022-11-15 23:11:16,708:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:16,708:INFO:Initializing create_model()
2022-11-15 23:11:16,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:16,708:INFO:Checking exceptions
2022-11-15 23:11:16,710:INFO:Importing libraries
2022-11-15 23:11:16,710:INFO:Copying training dataset
2022-11-15 23:11:16,715:INFO:Defining folds
2022-11-15 23:11:16,715:INFO:Declaring metric variables
2022-11-15 23:11:16,721:INFO:Importing untrained model
2022-11-15 23:11:16,726:INFO:Extreme Gradient Boosting Imported successfully
2022-11-15 23:11:16,735:INFO:Starting cross validation
2022-11-15 23:11:16,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:16,954:INFO:Calculating mean and std
2022-11-15 23:11:16,956:INFO:Creating metrics dataframe
2022-11-15 23:11:16,961:INFO:Uploading results into container
2022-11-15 23:11:16,963:INFO:Uploading model into container now
2022-11-15 23:11:16,964:INFO:master_model_container: 13
2022-11-15 23:11:16,964:INFO:display_container: 2
2022-11-15 23:11:16,965:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2022-11-15 23:11:16,965:INFO:create_model() successfully completed......................................
2022-11-15 23:11:17,243:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:17,244:INFO:Creating metrics dataframe
2022-11-15 23:11:17,258:INFO:Initializing Light Gradient Boosting Machine
2022-11-15 23:11:17,258:INFO:Total runtime is 0.12585573196411134 minutes
2022-11-15 23:11:17,263:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:17,264:INFO:Initializing create_model()
2022-11-15 23:11:17,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:17,264:INFO:Checking exceptions
2022-11-15 23:11:17,267:INFO:Importing libraries
2022-11-15 23:11:17,267:INFO:Copying training dataset
2022-11-15 23:11:17,271:INFO:Defining folds
2022-11-15 23:11:17,272:INFO:Declaring metric variables
2022-11-15 23:11:17,278:INFO:Importing untrained model
2022-11-15 23:11:17,286:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-15 23:11:17,297:INFO:Starting cross validation
2022-11-15 23:11:17,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:17,469:INFO:Calculating mean and std
2022-11-15 23:11:17,471:INFO:Creating metrics dataframe
2022-11-15 23:11:17,476:INFO:Uploading results into container
2022-11-15 23:11:17,477:INFO:Uploading model into container now
2022-11-15 23:11:17,477:INFO:master_model_container: 14
2022-11-15 23:11:17,477:INFO:display_container: 2
2022-11-15 23:11:17,478:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7263, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-15 23:11:17,478:INFO:create_model() successfully completed......................................
2022-11-15 23:11:17,723:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:17,723:INFO:Creating metrics dataframe
2022-11-15 23:11:17,738:INFO:Initializing Dummy Classifier
2022-11-15 23:11:17,740:INFO:Total runtime is 0.1338876565297445 minutes
2022-11-15 23:11:17,744:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:17,745:INFO:Initializing create_model()
2022-11-15 23:11:17,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C479044250>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:17,745:INFO:Checking exceptions
2022-11-15 23:11:17,748:INFO:Importing libraries
2022-11-15 23:11:17,748:INFO:Copying training dataset
2022-11-15 23:11:17,754:INFO:Defining folds
2022-11-15 23:11:17,755:INFO:Declaring metric variables
2022-11-15 23:11:17,759:INFO:Importing untrained model
2022-11-15 23:11:17,766:INFO:Dummy Classifier Imported successfully
2022-11-15 23:11:17,778:INFO:Starting cross validation
2022-11-15 23:11:17,779:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:17,866:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,870:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,881:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,890:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,901:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,915:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,927:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,931:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,943:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,945:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:17,953:INFO:Calculating mean and std
2022-11-15 23:11:17,956:INFO:Creating metrics dataframe
2022-11-15 23:11:17,959:INFO:Uploading results into container
2022-11-15 23:11:17,960:INFO:Uploading model into container now
2022-11-15 23:11:17,960:INFO:master_model_container: 15
2022-11-15 23:11:17,961:INFO:display_container: 2
2022-11-15 23:11:17,961:INFO:DummyClassifier(constant=None, random_state=7263, strategy='prior')
2022-11-15 23:11:17,962:INFO:create_model() successfully completed......................................
2022-11-15 23:11:18,303:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:18,304:INFO:Creating metrics dataframe
2022-11-15 23:11:18,329:INFO:Initializing create_model()
2022-11-15 23:11:18,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4739B7E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7263, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:18,330:INFO:Checking exceptions
2022-11-15 23:11:18,334:INFO:Importing libraries
2022-11-15 23:11:18,334:INFO:Copying training dataset
2022-11-15 23:11:18,338:INFO:Defining folds
2022-11-15 23:11:18,338:INFO:Declaring metric variables
2022-11-15 23:11:18,338:INFO:Importing untrained model
2022-11-15 23:11:18,338:INFO:Declaring custom model
2022-11-15 23:11:18,340:INFO:Logistic Regression Imported successfully
2022-11-15 23:11:18,341:INFO:Cross validation set to False
2022-11-15 23:11:18,341:INFO:Fitting Model
2022-11-15 23:11:18,401:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7263, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:11:18,401:INFO:create_model() successfully completed......................................
2022-11-15 23:11:18,732:INFO:master_model_container: 15
2022-11-15 23:11:18,736:INFO:display_container: 2
2022-11-15 23:11:18,738:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7263, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:11:18,740:INFO:compare_models() successfully completed......................................
2022-11-15 23:11:37,902:INFO:PyCaret ClassificationExperiment
2022-11-15 23:11:37,902:INFO:Logging name: clf-default-name
2022-11-15 23:11:37,902:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:11:37,902:INFO:version 3.0.0.rc4
2022-11-15 23:11:37,902:INFO:Initializing setup()
2022-11-15 23:11:37,902:INFO:self.USI: 6b24
2022-11-15 23:11:37,902:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:11:37,902:INFO:Checking environment
2022-11-15 23:11:37,902:INFO:python_version: 3.9.0
2022-11-15 23:11:37,902:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:11:37,902:INFO:machine: AMD64
2022-11-15 23:11:37,902:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:11:37,902:INFO:Memory: svmem(total=7968530432, available=850010112, percent=89.3, used=7118520320, free=850010112)
2022-11-15 23:11:37,902:INFO:Physical Core: 6
2022-11-15 23:11:37,902:INFO:Logical Core: 12
2022-11-15 23:11:37,903:INFO:Checking libraries
2022-11-15 23:11:37,903:INFO:System:
2022-11-15 23:11:37,903:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:11:37,903:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:11:37,903:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:11:37,903:INFO:PyCaret required dependencies:
2022-11-15 23:11:37,903:INFO:                 pip: 22.1.2
2022-11-15 23:11:37,903:INFO:          setuptools: 60.10.0
2022-11-15 23:11:37,903:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:11:37,903:INFO:             IPython: 8.5.0
2022-11-15 23:11:37,903:INFO:          ipywidgets: 8.0.2
2022-11-15 23:11:37,903:INFO:                tqdm: 4.64.1
2022-11-15 23:11:37,903:INFO:               numpy: 1.22.4
2022-11-15 23:11:37,903:INFO:              pandas: 1.4.4
2022-11-15 23:11:37,903:INFO:              jinja2: 3.1.2
2022-11-15 23:11:37,903:INFO:               scipy: 1.8.1
2022-11-15 23:11:37,903:INFO:              joblib: 1.2.0
2022-11-15 23:11:37,903:INFO:             sklearn: 1.1.2
2022-11-15 23:11:37,903:INFO:                pyod: 1.0.6
2022-11-15 23:11:37,903:INFO:            imblearn: 0.9.1
2022-11-15 23:11:37,903:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:11:37,904:INFO:            lightgbm: 3.3.3
2022-11-15 23:11:37,904:INFO:               numba: 0.55.2
2022-11-15 23:11:37,904:INFO:            requests: 2.28.1
2022-11-15 23:11:37,904:INFO:          matplotlib: 3.6.0
2022-11-15 23:11:37,904:INFO:          scikitplot: 0.3.7
2022-11-15 23:11:37,904:INFO:         yellowbrick: 1.5
2022-11-15 23:11:37,904:INFO:              plotly: 5.11.0
2022-11-15 23:11:37,904:INFO:             kaleido: 0.2.1
2022-11-15 23:11:37,904:INFO:         statsmodels: 0.13.5
2022-11-15 23:11:37,904:INFO:              sktime: 0.13.4
2022-11-15 23:11:37,904:INFO:               tbats: 1.1.1
2022-11-15 23:11:37,904:INFO:            pmdarima: 1.8.5
2022-11-15 23:11:37,904:INFO:              psutil: 5.9.2
2022-11-15 23:11:37,904:INFO:PyCaret optional dependencies:
2022-11-15 23:11:37,904:INFO:                shap: 0.41.0
2022-11-15 23:11:37,905:INFO:           interpret: 0.2.7
2022-11-15 23:11:37,905:INFO:                umap: Not installed
2022-11-15 23:11:37,905:INFO:    pandas_profiling: Not installed
2022-11-15 23:11:37,905:INFO:  explainerdashboard: Not installed
2022-11-15 23:11:37,905:INFO:             autoviz: Not installed
2022-11-15 23:11:37,905:INFO:           fairlearn: Not installed
2022-11-15 23:11:37,905:INFO:             xgboost: 1.7.1
2022-11-15 23:11:37,905:INFO:            catboost: Not installed
2022-11-15 23:11:37,905:INFO:              kmodes: Not installed
2022-11-15 23:11:37,905:INFO:             mlxtend: Not installed
2022-11-15 23:11:37,905:INFO:       statsforecast: Not installed
2022-11-15 23:11:37,905:INFO:        tune_sklearn: Not installed
2022-11-15 23:11:37,905:INFO:                 ray: Not installed
2022-11-15 23:11:37,905:INFO:            hyperopt: Not installed
2022-11-15 23:11:37,905:INFO:              optuna: Not installed
2022-11-15 23:11:37,906:INFO:               skopt: Not installed
2022-11-15 23:11:37,906:INFO:              mlflow: Not installed
2022-11-15 23:11:37,906:INFO:              gradio: Not installed
2022-11-15 23:11:37,906:INFO:             fastapi: Not installed
2022-11-15 23:11:37,906:INFO:             uvicorn: Not installed
2022-11-15 23:11:37,906:INFO:              m2cgen: Not installed
2022-11-15 23:11:37,906:INFO:           evidently: Not installed
2022-11-15 23:11:37,906:INFO:                nltk: 3.7
2022-11-15 23:11:37,906:INFO:            pyLDAvis: Not installed
2022-11-15 23:11:37,906:INFO:              gensim: Not installed
2022-11-15 23:11:37,906:INFO:               spacy: Not installed
2022-11-15 23:11:37,906:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:11:37,906:INFO:            textblob: Not installed
2022-11-15 23:11:37,907:INFO:               fugue: Not installed
2022-11-15 23:11:37,907:INFO:           streamlit: Not installed
2022-11-15 23:11:37,907:INFO:             prophet: Not installed
2022-11-15 23:11:37,907:INFO:None
2022-11-15 23:11:37,907:INFO:Set up data.
2022-11-15 23:11:37,937:INFO:Set up train/test split.
2022-11-15 23:11:37,944:INFO:Set up index.
2022-11-15 23:11:37,944:INFO:Assigning column types.
2022-11-15 23:11:37,947:INFO:Set up folding strategy.
2022-11-15 23:11:37,947:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:11:37,993:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:11:37,994:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:11:38,024:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:11:38,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:11:38,074:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:11:38,075:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:11:38,104:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:11:38,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:11:38,107:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:11:38,154:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:11:38,206:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:11:38,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:11:38,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:11:38,287:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:11:38,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:11:38,291:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:11:38,367:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:11:38,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:11:38,481:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:11:38,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:11:38,486:INFO:Preparing preprocessing pipeline...
2022-11-15 23:11:38,487:INFO:Set up label encoding.
2022-11-15 23:11:38,487:INFO:Set up simple imputation.
2022-11-15 23:11:38,487:INFO:Set up variance threshold.
2022-11-15 23:11:38,548:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:11:38,552:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['N', 'P', 'K', 'temperature',
                                             'humidity', 'ph', 'rainfall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:11:38,553:INFO:Creating final display dataframe.
2022-11-15 23:11:38,987:INFO:Setup display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13       Low variance threshold   
14               Fold Generator   
15                  Fold Number   
16                     CPU Jobs   
17                      Use GPU   
18               Log Experiment   
19              Experiment Name   
20                          USI   

                                                Value  
0                                                8753  
1                                               label  
2                                          Multiclass  
3   apple: 0, banana: 1, blackgram: 2, chickpea: 3...  
4                                           (2200, 8)  
5                                           (2200, 8)  
6                                           (1539, 8)  
7                                            (661, 8)  
8                                                   7  
9                                                True  
10                                             simple  
11                                               mean  
12                                           constant  
13                                                  0  
14                                    StratifiedKFold  
15                                                 10  
16                                                 -1  
17                                              False  
18                                              False  
19                                   clf-default-name  
20                                               6b24  
2022-11-15 23:11:39,081:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:11:39,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:11:39,172:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:11:39,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:11:39,243:INFO:setup() successfully completed in 1.34s...............
2022-11-15 23:11:49,241:INFO:Initializing compare_models()
2022-11-15 23:11:49,241:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:11:49,242:INFO:Checking exceptions
2022-11-15 23:11:49,247:INFO:Preparing display monitor
2022-11-15 23:11:49,304:INFO:Initializing Logistic Regression
2022-11-15 23:11:49,304:INFO:Total runtime is 0.0 minutes
2022-11-15 23:11:49,309:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:49,310:INFO:Initializing create_model()
2022-11-15 23:11:49,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:49,310:INFO:Checking exceptions
2022-11-15 23:11:49,313:INFO:Importing libraries
2022-11-15 23:11:49,313:INFO:Copying training dataset
2022-11-15 23:11:49,317:INFO:Defining folds
2022-11-15 23:11:49,317:INFO:Declaring metric variables
2022-11-15 23:11:49,323:INFO:Importing untrained model
2022-11-15 23:11:49,329:INFO:Logistic Regression Imported successfully
2022-11-15 23:11:49,340:INFO:Starting cross validation
2022-11-15 23:11:49,346:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:54,331:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,349:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,390:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,546:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,636:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,666:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,741:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,758:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,827:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:54,832:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:54,836:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:54,841:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:54,848:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:54,853:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:54,857:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:54,936:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:54,941:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:54,946:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,092:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,095:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,098:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,103:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,106:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,106:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,109:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,109:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,110:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,112:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,116:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,119:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,120:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,122:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,124:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,126:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:11:55,139:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,141:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,143:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,257:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,260:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,261:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:55,265:INFO:Calculating mean and std
2022-11-15 23:11:55,267:INFO:Creating metrics dataframe
2022-11-15 23:11:55,270:INFO:Uploading results into container
2022-11-15 23:11:55,271:INFO:Uploading model into container now
2022-11-15 23:11:55,271:INFO:master_model_container: 1
2022-11-15 23:11:55,272:INFO:display_container: 2
2022-11-15 23:11:55,273:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8753, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:11:55,273:INFO:create_model() successfully completed......................................
2022-11-15 23:11:55,594:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:55,594:INFO:Creating metrics dataframe
2022-11-15 23:11:55,605:INFO:Initializing K Neighbors Classifier
2022-11-15 23:11:55,605:INFO:Total runtime is 0.10503319104512533 minutes
2022-11-15 23:11:55,611:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:55,611:INFO:Initializing create_model()
2022-11-15 23:11:55,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:55,611:INFO:Checking exceptions
2022-11-15 23:11:55,613:INFO:Importing libraries
2022-11-15 23:11:55,613:INFO:Copying training dataset
2022-11-15 23:11:55,617:INFO:Defining folds
2022-11-15 23:11:55,619:INFO:Declaring metric variables
2022-11-15 23:11:55,625:INFO:Importing untrained model
2022-11-15 23:11:55,632:INFO:K Neighbors Classifier Imported successfully
2022-11-15 23:11:55,643:INFO:Starting cross validation
2022-11-15 23:11:55,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:56,055:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,065:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,075:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,079:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,140:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,145:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,147:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,150:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,155:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,155:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,156:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,161:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,161:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,163:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,167:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,173:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,177:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,181:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,186:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,188:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,192:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,194:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,195:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,197:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,197:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,199:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,199:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,204:INFO:Calculating mean and std
2022-11-15 23:11:56,207:INFO:Creating metrics dataframe
2022-11-15 23:11:56,210:INFO:Uploading results into container
2022-11-15 23:11:56,212:INFO:Uploading model into container now
2022-11-15 23:11:56,213:INFO:master_model_container: 2
2022-11-15 23:11:56,213:INFO:display_container: 2
2022-11-15 23:11:56,213:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-15 23:11:56,213:INFO:create_model() successfully completed......................................
2022-11-15 23:11:56,491:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:56,492:INFO:Creating metrics dataframe
2022-11-15 23:11:56,500:INFO:Initializing Naive Bayes
2022-11-15 23:11:56,500:INFO:Total runtime is 0.11994142532348634 minutes
2022-11-15 23:11:56,505:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:56,505:INFO:Initializing create_model()
2022-11-15 23:11:56,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:56,505:INFO:Checking exceptions
2022-11-15 23:11:56,507:INFO:Importing libraries
2022-11-15 23:11:56,507:INFO:Copying training dataset
2022-11-15 23:11:56,512:INFO:Defining folds
2022-11-15 23:11:56,512:INFO:Declaring metric variables
2022-11-15 23:11:56,542:INFO:Importing untrained model
2022-11-15 23:11:56,555:INFO:Naive Bayes Imported successfully
2022-11-15 23:11:56,566:INFO:Starting cross validation
2022-11-15 23:11:56,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:56,685:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,689:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,694:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,700:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,702:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,703:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,706:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,707:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,710:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,716:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,717:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,719:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,721:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,723:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,723:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,723:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,726:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,727:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,732:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,735:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,737:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,738:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,738:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,741:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,743:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,744:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,747:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,750:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,751:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,754:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:56,757:INFO:Calculating mean and std
2022-11-15 23:11:56,760:INFO:Creating metrics dataframe
2022-11-15 23:11:56,764:INFO:Uploading results into container
2022-11-15 23:11:56,764:INFO:Uploading model into container now
2022-11-15 23:11:56,765:INFO:master_model_container: 3
2022-11-15 23:11:56,765:INFO:display_container: 2
2022-11-15 23:11:56,765:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:11:56,766:INFO:create_model() successfully completed......................................
2022-11-15 23:11:57,147:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:57,147:INFO:Creating metrics dataframe
2022-11-15 23:11:57,162:INFO:Initializing Decision Tree Classifier
2022-11-15 23:11:57,163:INFO:Total runtime is 0.13099739154179893 minutes
2022-11-15 23:11:57,171:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:57,171:INFO:Initializing create_model()
2022-11-15 23:11:57,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:57,172:INFO:Checking exceptions
2022-11-15 23:11:57,175:INFO:Importing libraries
2022-11-15 23:11:57,175:INFO:Copying training dataset
2022-11-15 23:11:57,181:INFO:Defining folds
2022-11-15 23:11:57,182:INFO:Declaring metric variables
2022-11-15 23:11:57,193:INFO:Importing untrained model
2022-11-15 23:11:57,203:INFO:Decision Tree Classifier Imported successfully
2022-11-15 23:11:57,217:INFO:Starting cross validation
2022-11-15 23:11:57,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:57,380:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,384:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,390:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,407:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,410:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,411:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,414:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,417:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,417:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,419:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,425:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,429:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,430:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,432:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,433:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,436:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,437:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,443:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,460:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,461:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,466:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,466:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,469:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,470:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,470:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,472:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,474:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,475:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,480:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,481:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:57,495:INFO:Calculating mean and std
2022-11-15 23:11:57,499:INFO:Creating metrics dataframe
2022-11-15 23:11:57,507:INFO:Uploading results into container
2022-11-15 23:11:57,511:INFO:Uploading model into container now
2022-11-15 23:11:57,511:INFO:master_model_container: 4
2022-11-15 23:11:57,512:INFO:display_container: 2
2022-11-15 23:11:57,512:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8753, splitter='best')
2022-11-15 23:11:57,513:INFO:create_model() successfully completed......................................
2022-11-15 23:11:58,029:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:58,029:INFO:Creating metrics dataframe
2022-11-15 23:11:58,042:INFO:Initializing SVM - Linear Kernel
2022-11-15 23:11:58,042:INFO:Total runtime is 0.14564967950185143 minutes
2022-11-15 23:11:58,046:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:58,047:INFO:Initializing create_model()
2022-11-15 23:11:58,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:58,047:INFO:Checking exceptions
2022-11-15 23:11:58,058:INFO:Importing libraries
2022-11-15 23:11:58,060:INFO:Copying training dataset
2022-11-15 23:11:58,089:INFO:Defining folds
2022-11-15 23:11:58,089:INFO:Declaring metric variables
2022-11-15 23:11:58,095:INFO:Importing untrained model
2022-11-15 23:11:58,102:INFO:SVM - Linear Kernel Imported successfully
2022-11-15 23:11:58,112:INFO:Starting cross validation
2022-11-15 23:11:58,114:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:58,238:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,240:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,242:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,243:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,270:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,274:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,275:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,276:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,277:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,278:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,279:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,279:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,281:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,292:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,297:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,299:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,301:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,300:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,303:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,304:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,304:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,361:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,364:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,366:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,366:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,367:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,369:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,388:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,393:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,395:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,396:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,411:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,412:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,413:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,414:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,415:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,416:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,417:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,418:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,422:INFO:Calculating mean and std
2022-11-15 23:11:58,424:INFO:Creating metrics dataframe
2022-11-15 23:11:58,429:INFO:Uploading results into container
2022-11-15 23:11:58,430:INFO:Uploading model into container now
2022-11-15 23:11:58,431:INFO:master_model_container: 5
2022-11-15 23:11:58,431:INFO:display_container: 2
2022-11-15 23:11:58,432:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8753, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-15 23:11:58,432:INFO:create_model() successfully completed......................................
2022-11-15 23:11:58,709:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:58,709:INFO:Creating metrics dataframe
2022-11-15 23:11:58,719:INFO:Initializing Ridge Classifier
2022-11-15 23:11:58,720:INFO:Total runtime is 0.15694914658864342 minutes
2022-11-15 23:11:58,724:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:58,725:INFO:Initializing create_model()
2022-11-15 23:11:58,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:58,725:INFO:Checking exceptions
2022-11-15 23:11:58,728:INFO:Importing libraries
2022-11-15 23:11:58,728:INFO:Copying training dataset
2022-11-15 23:11:58,733:INFO:Defining folds
2022-11-15 23:11:58,733:INFO:Declaring metric variables
2022-11-15 23:11:58,738:INFO:Importing untrained model
2022-11-15 23:11:58,744:INFO:Ridge Classifier Imported successfully
2022-11-15 23:11:58,755:INFO:Starting cross validation
2022-11-15 23:11:58,756:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:11:58,898:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,902:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,904:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,905:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,906:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,906:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,908:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,910:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,912:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,912:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, ms2022-11-15 23:11:58,912:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,915:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,916:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,916:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,916:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,916:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,918:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,918:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,918:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,919:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,919:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,920:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,922:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,922:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,924:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,925:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,926:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,927:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,929:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,929:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,929:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,929:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,929:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,930:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,931:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:11:58,932:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:11:58,935:INFO:Calculating mean and std
2022-11-15 23:11:58,938:INFO:Creating metrics dataframe
2022-11-15 23:11:58,942:INFO:Uploading results into container
2022-11-15 23:11:58,943:INFO:Uploading model into container now
2022-11-15 23:11:58,943:INFO:master_model_container: 6
2022-11-15 23:11:58,943:INFO:display_container: 2
2022-11-15 23:11:58,944:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=8753, solver='auto', tol=0.001)
2022-11-15 23:11:58,944:INFO:create_model() successfully completed......................................
2022-11-15 23:11:59,193:INFO:SubProcess create_model() end ==================================
2022-11-15 23:11:59,194:INFO:Creating metrics dataframe
2022-11-15 23:11:59,204:INFO:Initializing Random Forest Classifier
2022-11-15 23:11:59,204:INFO:Total runtime is 0.16501458088556928 minutes
2022-11-15 23:11:59,208:INFO:SubProcess create_model() called ==================================
2022-11-15 23:11:59,208:INFO:Initializing create_model()
2022-11-15 23:11:59,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:11:59,208:INFO:Checking exceptions
2022-11-15 23:11:59,211:INFO:Importing libraries
2022-11-15 23:11:59,211:INFO:Copying training dataset
2022-11-15 23:11:59,216:INFO:Defining folds
2022-11-15 23:11:59,216:INFO:Declaring metric variables
2022-11-15 23:11:59,222:INFO:Importing untrained model
2022-11-15 23:11:59,227:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:11:59,238:INFO:Starting cross validation
2022-11-15 23:11:59,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:00,062:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,066:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,074:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,075:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,077:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,078:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,084:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,091:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,092:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,103:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,108:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,213:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,215:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,219:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,244:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,247:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,249:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,276:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,278:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,280:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,307:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,309:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,312:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,319:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,321:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,322:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,326:INFO:Calculating mean and std
2022-11-15 23:12:00,328:INFO:Creating metrics dataframe
2022-11-15 23:12:00,332:INFO:Uploading results into container
2022-11-15 23:12:00,333:INFO:Uploading model into container now
2022-11-15 23:12:00,333:INFO:master_model_container: 7
2022-11-15 23:12:00,334:INFO:display_container: 2
2022-11-15 23:12:00,334:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8753, verbose=0, warm_start=False)
2022-11-15 23:12:00,334:INFO:create_model() successfully completed......................................
2022-11-15 23:12:00,603:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:00,603:INFO:Creating metrics dataframe
2022-11-15 23:12:00,613:INFO:Initializing Quadratic Discriminant Analysis
2022-11-15 23:12:00,614:INFO:Total runtime is 0.18851366043090823 minutes
2022-11-15 23:12:00,620:INFO:SubProcess create_model() called ==================================
2022-11-15 23:12:00,621:INFO:Initializing create_model()
2022-11-15 23:12:00,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:00,621:INFO:Checking exceptions
2022-11-15 23:12:00,624:INFO:Importing libraries
2022-11-15 23:12:00,625:INFO:Copying training dataset
2022-11-15 23:12:00,657:INFO:Defining folds
2022-11-15 23:12:00,657:INFO:Declaring metric variables
2022-11-15 23:12:00,679:INFO:Importing untrained model
2022-11-15 23:12:00,683:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-15 23:12:00,693:INFO:Starting cross validation
2022-11-15 23:12:00,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:00,803:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,806:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,810:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,811:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,814:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,817:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,819:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,820:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,822:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,823:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,826:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,826:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,827:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,832:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,836:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,841:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,844:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,846:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,846:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,849:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,849:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,849:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,851:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,852:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,852:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,852:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,854:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,854:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,855:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,857:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:00,861:INFO:Calculating mean and std
2022-11-15 23:12:00,863:INFO:Creating metrics dataframe
2022-11-15 23:12:00,867:INFO:Uploading results into container
2022-11-15 23:12:00,867:INFO:Uploading model into container now
2022-11-15 23:12:00,869:INFO:master_model_container: 8
2022-11-15 23:12:00,869:INFO:display_container: 2
2022-11-15 23:12:00,869:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-15 23:12:00,869:INFO:create_model() successfully completed......................................
2022-11-15 23:12:01,128:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:01,129:INFO:Creating metrics dataframe
2022-11-15 23:12:01,169:INFO:Initializing Ada Boost Classifier
2022-11-15 23:12:01,169:INFO:Total runtime is 0.19775026241938276 minutes
2022-11-15 23:12:01,174:INFO:SubProcess create_model() called ==================================
2022-11-15 23:12:01,174:INFO:Initializing create_model()
2022-11-15 23:12:01,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:01,174:INFO:Checking exceptions
2022-11-15 23:12:01,177:INFO:Importing libraries
2022-11-15 23:12:01,177:INFO:Copying training dataset
2022-11-15 23:12:01,181:INFO:Defining folds
2022-11-15 23:12:01,181:INFO:Declaring metric variables
2022-11-15 23:12:01,186:INFO:Importing untrained model
2022-11-15 23:12:01,192:INFO:Ada Boost Classifier Imported successfully
2022-11-15 23:12:01,203:INFO:Starting cross validation
2022-11-15 23:12:01,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:01,801:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,805:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,805:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,806:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,809:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,809:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,809:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,811:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,812:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,814:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,817:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,824:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,825:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,826:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,826:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,827:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,827:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,829:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,829:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,838:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,841:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,841:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,842:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,842:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,843:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,843:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,844:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,844:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,845:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,846:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,847:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,849:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,851:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,852:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,853:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,859:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,861:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,862:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:01,863:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:01,867:INFO:Calculating mean and std
2022-11-15 23:12:01,869:INFO:Creating metrics dataframe
2022-11-15 23:12:01,872:INFO:Uploading results into container
2022-11-15 23:12:01,872:INFO:Uploading model into container now
2022-11-15 23:12:01,873:INFO:master_model_container: 9
2022-11-15 23:12:01,873:INFO:display_container: 2
2022-11-15 23:12:01,873:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8753)
2022-11-15 23:12:01,873:INFO:create_model() successfully completed......................................
2022-11-15 23:12:02,143:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:02,143:INFO:Creating metrics dataframe
2022-11-15 23:12:02,154:INFO:Initializing Gradient Boosting Classifier
2022-11-15 23:12:02,155:INFO:Total runtime is 0.21418488423029586 minutes
2022-11-15 23:12:02,159:INFO:SubProcess create_model() called ==================================
2022-11-15 23:12:02,159:INFO:Initializing create_model()
2022-11-15 23:12:02,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:02,160:INFO:Checking exceptions
2022-11-15 23:12:02,162:INFO:Importing libraries
2022-11-15 23:12:02,163:INFO:Copying training dataset
2022-11-15 23:12:02,188:INFO:Defining folds
2022-11-15 23:12:02,188:INFO:Declaring metric variables
2022-11-15 23:12:02,194:INFO:Importing untrained model
2022-11-15 23:12:02,201:INFO:Gradient Boosting Classifier Imported successfully
2022-11-15 23:12:02,210:INFO:Starting cross validation
2022-11-15 23:12:02,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:15,717:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,724:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,724:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,727:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,786:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,789:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,858:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,862:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,867:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,893:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,897:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,897:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,897:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,899:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,902:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,902:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,902:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,905:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,919:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,922:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,925:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,930:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,932:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,935:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,940:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,943:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:15,944:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:16,023:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:16,025:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:16,026:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:16,030:INFO:Calculating mean and std
2022-11-15 23:12:16,032:INFO:Creating metrics dataframe
2022-11-15 23:12:16,035:INFO:Uploading results into container
2022-11-15 23:12:16,035:INFO:Uploading model into container now
2022-11-15 23:12:16,035:INFO:master_model_container: 10
2022-11-15 23:12:16,036:INFO:display_container: 2
2022-11-15 23:12:16,036:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8753, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-15 23:12:16,036:INFO:create_model() successfully completed......................................
2022-11-15 23:12:16,672:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:16,672:INFO:Creating metrics dataframe
2022-11-15 23:12:16,685:INFO:Initializing Linear Discriminant Analysis
2022-11-15 23:12:16,685:INFO:Total runtime is 0.4563648343086243 minutes
2022-11-15 23:12:16,689:INFO:SubProcess create_model() called ==================================
2022-11-15 23:12:16,691:INFO:Initializing create_model()
2022-11-15 23:12:16,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:16,691:INFO:Checking exceptions
2022-11-15 23:12:16,694:INFO:Importing libraries
2022-11-15 23:12:16,694:INFO:Copying training dataset
2022-11-15 23:12:16,700:INFO:Defining folds
2022-11-15 23:12:16,700:INFO:Declaring metric variables
2022-11-15 23:12:16,706:INFO:Importing untrained model
2022-11-15 23:12:16,715:INFO:Linear Discriminant Analysis Imported successfully
2022-11-15 23:12:16,734:INFO:Starting cross validation
2022-11-15 23:12:16,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:16,997:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:16,998:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,002:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,002:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,005:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,006:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,007:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,009:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,011:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,011:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,011:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,012:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,016:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,016:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,019:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,025:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,029:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,030:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,033:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,035:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,036:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,040:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,044:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,044:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,047:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,048:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,055:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:17,063:INFO:Calculating mean and std
2022-11-15 23:12:17,067:INFO:Creating metrics dataframe
2022-11-15 23:12:17,071:INFO:Uploading results into container
2022-11-15 23:12:17,085:INFO:Uploading model into container now
2022-11-15 23:12:17,091:INFO:master_model_container: 11
2022-11-15 23:12:17,093:INFO:display_container: 2
2022-11-15 23:12:17,094:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-15 23:12:17,095:INFO:create_model() successfully completed......................................
2022-11-15 23:12:17,686:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:17,686:INFO:Creating metrics dataframe
2022-11-15 23:12:17,709:INFO:Initializing Extra Trees Classifier
2022-11-15 23:12:17,709:INFO:Total runtime is 0.4734293818473816 minutes
2022-11-15 23:12:17,716:INFO:SubProcess create_model() called ==================================
2022-11-15 23:12:17,717:INFO:Initializing create_model()
2022-11-15 23:12:17,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:17,717:INFO:Checking exceptions
2022-11-15 23:12:17,722:INFO:Importing libraries
2022-11-15 23:12:17,722:INFO:Copying training dataset
2022-11-15 23:12:17,741:INFO:Defining folds
2022-11-15 23:12:17,741:INFO:Declaring metric variables
2022-11-15 23:12:17,750:INFO:Importing untrained model
2022-11-15 23:12:17,756:INFO:Extra Trees Classifier Imported successfully
2022-11-15 23:12:17,769:INFO:Starting cross validation
2022-11-15 23:12:17,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:18,626:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,630:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,633:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,634:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,637:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,641:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,645:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,649:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,655:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,708:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,715:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,726:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,756:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,760:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,761:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,762:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,764:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,767:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,767:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,771:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,827:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,831:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,834:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,838:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,841:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,843:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,854:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,856:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,857:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:18,861:INFO:Calculating mean and std
2022-11-15 23:12:18,863:INFO:Creating metrics dataframe
2022-11-15 23:12:18,866:INFO:Uploading results into container
2022-11-15 23:12:18,867:INFO:Uploading model into container now
2022-11-15 23:12:18,867:INFO:master_model_container: 12
2022-11-15 23:12:18,867:INFO:display_container: 2
2022-11-15 23:12:18,867:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8753, verbose=0, warm_start=False)
2022-11-15 23:12:18,869:INFO:create_model() successfully completed......................................
2022-11-15 23:12:19,091:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:19,091:INFO:Creating metrics dataframe
2022-11-15 23:12:19,104:INFO:Initializing Extreme Gradient Boosting
2022-11-15 23:12:19,104:INFO:Total runtime is 0.49666691621144615 minutes
2022-11-15 23:12:19,108:INFO:SubProcess create_model() called ==================================
2022-11-15 23:12:19,109:INFO:Initializing create_model()
2022-11-15 23:12:19,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:19,109:INFO:Checking exceptions
2022-11-15 23:12:19,112:INFO:Importing libraries
2022-11-15 23:12:19,112:INFO:Copying training dataset
2022-11-15 23:12:19,117:INFO:Defining folds
2022-11-15 23:12:19,117:INFO:Declaring metric variables
2022-11-15 23:12:19,123:INFO:Importing untrained model
2022-11-15 23:12:19,130:INFO:Extreme Gradient Boosting Imported successfully
2022-11-15 23:12:19,142:INFO:Starting cross validation
2022-11-15 23:12:19,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:20,591:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,595:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,599:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,703:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,703:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,707:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,707:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,707:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,711:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,711:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,711:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,751:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,753:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,754:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,755:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,756:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,756:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,757:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,760:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,761:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,761:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,764:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,769:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,790:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,792:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,796:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,817:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,820:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,822:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:20,827:INFO:Calculating mean and std
2022-11-15 23:12:20,831:INFO:Creating metrics dataframe
2022-11-15 23:12:20,835:INFO:Uploading results into container
2022-11-15 23:12:20,838:INFO:Uploading model into container now
2022-11-15 23:12:20,840:INFO:master_model_container: 13
2022-11-15 23:12:20,840:INFO:display_container: 2
2022-11-15 23:12:20,841:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2022-11-15 23:12:20,841:INFO:create_model() successfully completed......................................
2022-11-15 23:12:21,444:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:21,445:INFO:Creating metrics dataframe
2022-11-15 23:12:21,463:INFO:Initializing Light Gradient Boosting Machine
2022-11-15 23:12:21,463:INFO:Total runtime is 0.535985004901886 minutes
2022-11-15 23:12:21,468:INFO:SubProcess create_model() called ==================================
2022-11-15 23:12:21,469:INFO:Initializing create_model()
2022-11-15 23:12:21,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:21,470:INFO:Checking exceptions
2022-11-15 23:12:21,472:INFO:Importing libraries
2022-11-15 23:12:21,472:INFO:Copying training dataset
2022-11-15 23:12:21,476:INFO:Defining folds
2022-11-15 23:12:21,477:INFO:Declaring metric variables
2022-11-15 23:12:21,481:INFO:Importing untrained model
2022-11-15 23:12:21,486:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-15 23:12:21,494:INFO:Starting cross validation
2022-11-15 23:12:21,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:24,133:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,139:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,145:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,369:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,372:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,377:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,398:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,405:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,410:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,444:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,446:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,453:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,504:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,507:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,512:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,532:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,535:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,539:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,541:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,546:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,548:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,564:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,567:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,570:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,616:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,616:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,620:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,623:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,626:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,628:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:24,638:INFO:Calculating mean and std
2022-11-15 23:12:24,644:INFO:Creating metrics dataframe
2022-11-15 23:12:24,661:INFO:Uploading results into container
2022-11-15 23:12:24,665:INFO:Uploading model into container now
2022-11-15 23:12:24,668:INFO:master_model_container: 14
2022-11-15 23:12:24,669:INFO:display_container: 2
2022-11-15 23:12:24,671:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8753, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-15 23:12:24,672:INFO:create_model() successfully completed......................................
2022-11-15 23:12:25,165:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:25,165:INFO:Creating metrics dataframe
2022-11-15 23:12:25,189:INFO:Initializing Dummy Classifier
2022-11-15 23:12:25,189:INFO:Total runtime is 0.5980883518854778 minutes
2022-11-15 23:12:25,194:INFO:SubProcess create_model() called ==================================
2022-11-15 23:12:25,195:INFO:Initializing create_model()
2022-11-15 23:12:25,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472CFDEE0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:25,195:INFO:Checking exceptions
2022-11-15 23:12:25,200:INFO:Importing libraries
2022-11-15 23:12:25,200:INFO:Copying training dataset
2022-11-15 23:12:25,209:INFO:Defining folds
2022-11-15 23:12:25,210:INFO:Declaring metric variables
2022-11-15 23:12:25,215:INFO:Importing untrained model
2022-11-15 23:12:25,224:INFO:Dummy Classifier Imported successfully
2022-11-15 23:12:25,236:INFO:Starting cross validation
2022-11-15 23:12:25,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:12:25,365:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,365:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,369:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,370:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,372:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,374:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,374:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,375:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,376:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,379:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,381:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,383:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,392:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,395:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,397:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,400:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,403:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,406:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,408:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,410:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,411:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,415:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,416:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,421:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,423:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,423:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,427:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,428:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,430:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,433:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,434:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,436:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,437:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,439:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,440:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,442:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,448:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,450:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,451:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:12:25,452:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:12:25,456:INFO:Calculating mean and std
2022-11-15 23:12:25,460:INFO:Creating metrics dataframe
2022-11-15 23:12:25,464:INFO:Uploading results into container
2022-11-15 23:12:25,465:INFO:Uploading model into container now
2022-11-15 23:12:25,466:INFO:master_model_container: 15
2022-11-15 23:12:25,466:INFO:display_container: 2
2022-11-15 23:12:25,466:INFO:DummyClassifier(constant=None, random_state=8753, strategy='prior')
2022-11-15 23:12:25,466:INFO:create_model() successfully completed......................................
2022-11-15 23:12:25,925:INFO:SubProcess create_model() end ==================================
2022-11-15 23:12:25,925:INFO:Creating metrics dataframe
2022-11-15 23:12:25,961:INFO:Initializing create_model()
2022-11-15 23:12:25,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C472D05FD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8753, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:12:25,961:INFO:Checking exceptions
2022-11-15 23:12:25,966:INFO:Importing libraries
2022-11-15 23:12:25,966:INFO:Copying training dataset
2022-11-15 23:12:25,973:INFO:Defining folds
2022-11-15 23:12:25,973:INFO:Declaring metric variables
2022-11-15 23:12:25,973:INFO:Importing untrained model
2022-11-15 23:12:25,973:INFO:Declaring custom model
2022-11-15 23:12:25,974:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:12:25,975:INFO:Cross validation set to False
2022-11-15 23:12:25,975:INFO:Fitting Model
2022-11-15 23:12:26,316:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8753, verbose=0, warm_start=False)
2022-11-15 23:12:26,316:INFO:create_model() successfully completed......................................
2022-11-15 23:12:26,799:INFO:master_model_container: 15
2022-11-15 23:12:26,800:INFO:display_container: 2
2022-11-15 23:12:26,800:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8753, verbose=0, warm_start=False)
2022-11-15 23:12:26,800:INFO:compare_models() successfully completed......................................
2022-11-15 23:12:26,824:INFO:PyCaret ClassificationExperiment
2022-11-15 23:12:26,824:INFO:Logging name: clf-default-name
2022-11-15 23:12:26,824:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:12:26,824:INFO:version 3.0.0.rc4
2022-11-15 23:12:26,824:INFO:Initializing setup()
2022-11-15 23:12:26,824:INFO:self.USI: 789f
2022-11-15 23:12:26,825:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:12:26,825:INFO:Checking environment
2022-11-15 23:12:26,825:INFO:python_version: 3.9.0
2022-11-15 23:12:26,825:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:12:26,825:INFO:machine: AMD64
2022-11-15 23:12:26,825:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:12:26,825:INFO:Memory: svmem(total=7968530432, available=829300736, percent=89.6, used=7139229696, free=829300736)
2022-11-15 23:12:26,825:INFO:Physical Core: 6
2022-11-15 23:12:26,825:INFO:Logical Core: 12
2022-11-15 23:12:26,825:INFO:Checking libraries
2022-11-15 23:12:26,825:INFO:System:
2022-11-15 23:12:26,825:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:12:26,825:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:12:26,825:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:12:26,826:INFO:PyCaret required dependencies:
2022-11-15 23:12:26,826:INFO:                 pip: 22.1.2
2022-11-15 23:12:26,826:INFO:          setuptools: 60.10.0
2022-11-15 23:12:26,826:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:12:26,826:INFO:             IPython: 8.5.0
2022-11-15 23:12:26,826:INFO:          ipywidgets: 8.0.2
2022-11-15 23:12:26,826:INFO:                tqdm: 4.64.1
2022-11-15 23:12:26,826:INFO:               numpy: 1.22.4
2022-11-15 23:12:26,826:INFO:              pandas: 1.4.4
2022-11-15 23:12:26,826:INFO:              jinja2: 3.1.2
2022-11-15 23:12:26,826:INFO:               scipy: 1.8.1
2022-11-15 23:12:26,826:INFO:              joblib: 1.2.0
2022-11-15 23:12:26,826:INFO:             sklearn: 1.1.2
2022-11-15 23:12:26,826:INFO:                pyod: 1.0.6
2022-11-15 23:12:26,826:INFO:            imblearn: 0.9.1
2022-11-15 23:12:26,826:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:12:26,826:INFO:            lightgbm: 3.3.3
2022-11-15 23:12:26,826:INFO:               numba: 0.55.2
2022-11-15 23:12:26,826:INFO:            requests: 2.28.1
2022-11-15 23:12:26,826:INFO:          matplotlib: 3.6.0
2022-11-15 23:12:26,826:INFO:          scikitplot: 0.3.7
2022-11-15 23:12:26,826:INFO:         yellowbrick: 1.5
2022-11-15 23:12:26,826:INFO:              plotly: 5.11.0
2022-11-15 23:12:26,826:INFO:             kaleido: 0.2.1
2022-11-15 23:12:26,826:INFO:         statsmodels: 0.13.5
2022-11-15 23:12:26,826:INFO:              sktime: 0.13.4
2022-11-15 23:12:26,826:INFO:               tbats: 1.1.1
2022-11-15 23:12:26,826:INFO:            pmdarima: 1.8.5
2022-11-15 23:12:26,826:INFO:              psutil: 5.9.2
2022-11-15 23:12:26,826:INFO:PyCaret optional dependencies:
2022-11-15 23:12:26,826:INFO:                shap: 0.41.0
2022-11-15 23:12:26,826:INFO:           interpret: 0.2.7
2022-11-15 23:12:26,826:INFO:                umap: Not installed
2022-11-15 23:12:26,826:INFO:    pandas_profiling: Not installed
2022-11-15 23:12:26,826:INFO:  explainerdashboard: Not installed
2022-11-15 23:12:26,827:INFO:             autoviz: Not installed
2022-11-15 23:12:26,827:INFO:           fairlearn: Not installed
2022-11-15 23:12:26,827:INFO:             xgboost: 1.7.1
2022-11-15 23:12:26,827:INFO:            catboost: Not installed
2022-11-15 23:12:26,827:INFO:              kmodes: Not installed
2022-11-15 23:12:26,827:INFO:             mlxtend: Not installed
2022-11-15 23:12:26,827:INFO:       statsforecast: Not installed
2022-11-15 23:12:26,827:INFO:        tune_sklearn: Not installed
2022-11-15 23:12:26,827:INFO:                 ray: Not installed
2022-11-15 23:12:26,827:INFO:            hyperopt: Not installed
2022-11-15 23:12:26,827:INFO:              optuna: Not installed
2022-11-15 23:12:26,827:INFO:               skopt: Not installed
2022-11-15 23:12:26,827:INFO:              mlflow: Not installed
2022-11-15 23:12:26,827:INFO:              gradio: Not installed
2022-11-15 23:12:26,828:INFO:             fastapi: Not installed
2022-11-15 23:12:26,828:INFO:             uvicorn: Not installed
2022-11-15 23:12:26,828:INFO:              m2cgen: Not installed
2022-11-15 23:12:26,828:INFO:           evidently: Not installed
2022-11-15 23:12:26,828:INFO:                nltk: 3.7
2022-11-15 23:12:26,828:INFO:            pyLDAvis: Not installed
2022-11-15 23:12:26,828:INFO:              gensim: Not installed
2022-11-15 23:12:26,828:INFO:               spacy: Not installed
2022-11-15 23:12:26,828:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:12:26,828:INFO:            textblob: Not installed
2022-11-15 23:12:26,828:INFO:               fugue: Not installed
2022-11-15 23:12:26,828:INFO:           streamlit: Not installed
2022-11-15 23:12:26,828:INFO:             prophet: Not installed
2022-11-15 23:12:26,828:INFO:None
2022-11-15 23:12:26,828:INFO:Set up data.
2022-11-15 23:12:26,834:INFO:Set up train/test split.
2022-11-15 23:12:26,839:INFO:Set up index.
2022-11-15 23:12:26,840:INFO:Assigning column types.
2022-11-15 23:12:26,845:INFO:Set up folding strategy.
2022-11-15 23:12:26,846:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:12:26,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:12:26,901:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:12:26,933:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:12:26,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:12:26,988:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:12:26,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:12:27,020:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:12:27,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:12:27,024:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:12:27,074:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:12:27,104:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:12:27,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:12:27,159:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:12:27,189:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:12:27,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:12:27,193:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:12:27,278:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:12:27,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:12:27,363:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:12:27,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:12:27,368:INFO:Preparing preprocessing pipeline...
2022-11-15 23:12:27,369:INFO:Set up label encoding.
2022-11-15 23:12:27,370:INFO:Set up simple imputation.
2022-11-15 23:12:27,370:INFO:Set up variance threshold.
2022-11-15 23:12:27,443:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:12:27,447:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['fixed acidity',
                                             'volatile acidity', 'citric acid',
                                             'residual sugar', 'chlorides',
                                             'free sulfur dioxide',
                                             'total su...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:12:27,447:INFO:Creating final display dataframe.
2022-11-15 23:12:27,830:INFO:Setup display_container:                     Description                               Value
0                    Session id                                6746
1                        Target                             quality
2                   Target type                          Multiclass
3                Target mapping  3: 0, 4: 1, 5: 2, 6: 3, 7: 4, 8: 5
4           Original data shape                          (1596, 12)
5        Transformed data shape                          (1596, 12)
6   Transformed train set shape                          (1117, 12)
7    Transformed test set shape                           (479, 12)
8              Numeric features                                  11
9                    Preprocess                                True
10              Imputation type                              simple
11           Numeric imputation                                mean
12       Categorical imputation                            constant
13       Low variance threshold                                   0
14               Fold Generator                     StratifiedKFold
15                  Fold Number                                  10
16                     CPU Jobs                                  -1
17                      Use GPU                               False
18               Log Experiment                               False
19              Experiment Name                    clf-default-name
20                          USI                                789f
2022-11-15 23:12:27,924:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:12:27,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:12:28,014:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:12:28,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:12:28,028:INFO:setup() successfully completed in 1.21s...............
2022-11-15 23:13:45,264:INFO:PyCaret ClassificationExperiment
2022-11-15 23:13:45,264:INFO:Logging name: clf-default-name
2022-11-15 23:13:45,264:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:13:45,264:INFO:version 3.0.0.rc4
2022-11-15 23:13:45,264:INFO:Initializing setup()
2022-11-15 23:13:45,264:INFO:self.USI: 5e0e
2022-11-15 23:13:45,265:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:13:45,265:INFO:Checking environment
2022-11-15 23:13:45,265:INFO:python_version: 3.9.0
2022-11-15 23:13:45,265:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:13:45,265:INFO:machine: AMD64
2022-11-15 23:13:45,265:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:13:45,265:INFO:Memory: svmem(total=7968530432, available=932102144, percent=88.3, used=7036428288, free=932102144)
2022-11-15 23:13:45,265:INFO:Physical Core: 6
2022-11-15 23:13:45,265:INFO:Logical Core: 12
2022-11-15 23:13:45,265:INFO:Checking libraries
2022-11-15 23:13:45,265:INFO:System:
2022-11-15 23:13:45,265:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:13:45,265:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:13:45,265:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:13:45,265:INFO:PyCaret required dependencies:
2022-11-15 23:13:45,265:INFO:                 pip: 22.1.2
2022-11-15 23:13:45,265:INFO:          setuptools: 60.10.0
2022-11-15 23:13:45,265:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:13:45,265:INFO:             IPython: 8.5.0
2022-11-15 23:13:45,265:INFO:          ipywidgets: 8.0.2
2022-11-15 23:13:45,265:INFO:                tqdm: 4.64.1
2022-11-15 23:13:45,265:INFO:               numpy: 1.22.4
2022-11-15 23:13:45,265:INFO:              pandas: 1.4.4
2022-11-15 23:13:45,266:INFO:              jinja2: 3.1.2
2022-11-15 23:13:45,266:INFO:               scipy: 1.8.1
2022-11-15 23:13:45,266:INFO:              joblib: 1.2.0
2022-11-15 23:13:45,266:INFO:             sklearn: 1.1.2
2022-11-15 23:13:45,266:INFO:                pyod: 1.0.6
2022-11-15 23:13:45,266:INFO:            imblearn: 0.9.1
2022-11-15 23:13:45,266:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:13:45,266:INFO:            lightgbm: 3.3.3
2022-11-15 23:13:45,266:INFO:               numba: 0.55.2
2022-11-15 23:13:45,266:INFO:            requests: 2.28.1
2022-11-15 23:13:45,266:INFO:          matplotlib: 3.6.0
2022-11-15 23:13:45,266:INFO:          scikitplot: 0.3.7
2022-11-15 23:13:45,266:INFO:         yellowbrick: 1.5
2022-11-15 23:13:45,266:INFO:              plotly: 5.11.0
2022-11-15 23:13:45,266:INFO:             kaleido: 0.2.1
2022-11-15 23:13:45,266:INFO:         statsmodels: 0.13.5
2022-11-15 23:13:45,266:INFO:              sktime: 0.13.4
2022-11-15 23:13:45,266:INFO:               tbats: 1.1.1
2022-11-15 23:13:45,266:INFO:            pmdarima: 1.8.5
2022-11-15 23:13:45,266:INFO:              psutil: 5.9.2
2022-11-15 23:13:45,266:INFO:PyCaret optional dependencies:
2022-11-15 23:13:45,266:INFO:                shap: 0.41.0
2022-11-15 23:13:45,266:INFO:           interpret: 0.2.7
2022-11-15 23:13:45,266:INFO:                umap: Not installed
2022-11-15 23:13:45,266:INFO:    pandas_profiling: Not installed
2022-11-15 23:13:45,266:INFO:  explainerdashboard: Not installed
2022-11-15 23:13:45,266:INFO:             autoviz: Not installed
2022-11-15 23:13:45,266:INFO:           fairlearn: Not installed
2022-11-15 23:13:45,266:INFO:             xgboost: 1.7.1
2022-11-15 23:13:45,266:INFO:            catboost: Not installed
2022-11-15 23:13:45,266:INFO:              kmodes: Not installed
2022-11-15 23:13:45,266:INFO:             mlxtend: Not installed
2022-11-15 23:13:45,266:INFO:       statsforecast: Not installed
2022-11-15 23:13:45,266:INFO:        tune_sklearn: Not installed
2022-11-15 23:13:45,267:INFO:                 ray: Not installed
2022-11-15 23:13:45,267:INFO:            hyperopt: Not installed
2022-11-15 23:13:45,267:INFO:              optuna: Not installed
2022-11-15 23:13:45,267:INFO:               skopt: Not installed
2022-11-15 23:13:45,267:INFO:              mlflow: Not installed
2022-11-15 23:13:45,267:INFO:              gradio: Not installed
2022-11-15 23:13:45,267:INFO:             fastapi: Not installed
2022-11-15 23:13:45,267:INFO:             uvicorn: Not installed
2022-11-15 23:13:45,267:INFO:              m2cgen: Not installed
2022-11-15 23:13:45,267:INFO:           evidently: Not installed
2022-11-15 23:13:45,267:INFO:                nltk: 3.7
2022-11-15 23:13:45,267:INFO:            pyLDAvis: Not installed
2022-11-15 23:13:45,267:INFO:              gensim: Not installed
2022-11-15 23:13:45,267:INFO:               spacy: Not installed
2022-11-15 23:13:45,267:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:13:45,267:INFO:            textblob: Not installed
2022-11-15 23:13:45,267:INFO:               fugue: Not installed
2022-11-15 23:13:45,267:INFO:           streamlit: Not installed
2022-11-15 23:13:45,267:INFO:             prophet: Not installed
2022-11-15 23:13:45,267:INFO:None
2022-11-15 23:13:45,267:INFO:Set up data.
2022-11-15 23:13:45,273:INFO:Set up train/test split.
2022-11-15 23:13:45,277:INFO:Set up index.
2022-11-15 23:13:45,277:INFO:Assigning column types.
2022-11-15 23:13:45,281:INFO:Set up folding strategy.
2022-11-15 23:13:45,281:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:13:45,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:13:45,328:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:13:45,358:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:13:45,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:13:45,408:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:13:45,409:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:13:45,438:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:13:45,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:13:45,442:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:13:45,490:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:13:45,522:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:13:45,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:13:45,575:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:13:45,607:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:13:45,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:13:45,610:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:13:45,688:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:13:45,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:13:45,766:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:13:45,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:13:45,770:INFO:Preparing preprocessing pipeline...
2022-11-15 23:13:45,771:INFO:Set up label encoding.
2022-11-15 23:13:45,771:INFO:Set up simple imputation.
2022-11-15 23:13:45,771:INFO:Set up variance threshold.
2022-11-15 23:13:45,830:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:13:45,834:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['fixed acidity',
                                             'volatile acidity', 'citric acid',
                                             'residual sugar', 'chlorides',
                                             'free sulfur dioxide',
                                             'total su...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:13:45,834:INFO:Creating final display dataframe.
2022-11-15 23:13:46,129:INFO:Setup display_container:                     Description                               Value
0                    Session id                                2019
1                        Target                             quality
2                   Target type                          Multiclass
3                Target mapping  3: 0, 4: 1, 5: 2, 6: 3, 7: 4, 8: 5
4           Original data shape                          (1596, 12)
5        Transformed data shape                          (1596, 12)
6   Transformed train set shape                          (1117, 12)
7    Transformed test set shape                           (479, 12)
8              Numeric features                                  11
9                    Preprocess                                True
10              Imputation type                              simple
11           Numeric imputation                                mean
12       Categorical imputation                            constant
13       Low variance threshold                                   0
14               Fold Generator                     StratifiedKFold
15                  Fold Number                                  10
16                     CPU Jobs                                  -1
17                      Use GPU                               False
18               Log Experiment                               False
19              Experiment Name                    clf-default-name
20                          USI                                5e0e
2022-11-15 23:13:46,215:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:13:46,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:13:46,296:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:13:46,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:13:46,313:INFO:setup() successfully completed in 1.05s...............
2022-11-15 23:13:51,809:INFO:Initializing compare_models()
2022-11-15 23:13:51,810:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:13:51,810:INFO:Checking exceptions
2022-11-15 23:13:51,815:INFO:Preparing display monitor
2022-11-15 23:13:51,868:INFO:Initializing Logistic Regression
2022-11-15 23:13:51,868:INFO:Total runtime is 0.0 minutes
2022-11-15 23:13:51,878:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:51,879:INFO:Initializing create_model()
2022-11-15 23:13:51,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:51,880:INFO:Checking exceptions
2022-11-15 23:13:51,885:INFO:Importing libraries
2022-11-15 23:13:51,886:INFO:Copying training dataset
2022-11-15 23:13:51,892:INFO:Defining folds
2022-11-15 23:13:51,892:INFO:Declaring metric variables
2022-11-15 23:13:51,898:INFO:Importing untrained model
2022-11-15 23:13:51,903:INFO:Logistic Regression Imported successfully
2022-11-15 23:13:51,914:INFO:Starting cross validation
2022-11-15 23:13:51,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:53,250:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,271:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,307:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,339:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,354:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,368:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,396:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,398:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,416:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,444:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:13:53,564:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,568:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,569:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,570:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,572:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,575:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:53,592:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,595:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,596:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,598:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,605:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,607:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,608:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,608:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,619:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,620:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,622:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,623:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,624:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,625:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,625:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:53,627:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,628:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,629:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,638:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,639:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,640:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,641:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,645:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,646:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,646:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,647:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,647:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,647:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,648:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,648:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,649:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,650:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:53,652:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,653:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,653:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,653:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,671:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,672:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,673:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:53,673:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:53,676:INFO:Calculating mean and std
2022-11-15 23:13:53,679:INFO:Creating metrics dataframe
2022-11-15 23:13:53,682:INFO:Uploading results into container
2022-11-15 23:13:53,684:INFO:Uploading model into container now
2022-11-15 23:13:53,684:INFO:master_model_container: 1
2022-11-15 23:13:53,684:INFO:display_container: 2
2022-11-15 23:13:53,685:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2019, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:13:53,685:INFO:create_model() successfully completed......................................
2022-11-15 23:13:53,915:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:53,915:INFO:Creating metrics dataframe
2022-11-15 23:13:53,924:INFO:Initializing K Neighbors Classifier
2022-11-15 23:13:53,924:INFO:Total runtime is 0.034266746044158934 minutes
2022-11-15 23:13:53,930:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:53,930:INFO:Initializing create_model()
2022-11-15 23:13:53,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:53,930:INFO:Checking exceptions
2022-11-15 23:13:53,932:INFO:Importing libraries
2022-11-15 23:13:53,932:INFO:Copying training dataset
2022-11-15 23:13:53,936:INFO:Defining folds
2022-11-15 23:13:53,937:INFO:Declaring metric variables
2022-11-15 23:13:53,942:INFO:Importing untrained model
2022-11-15 23:13:53,947:INFO:K Neighbors Classifier Imported successfully
2022-11-15 23:13:53,958:INFO:Starting cross validation
2022-11-15 23:13:53,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:54,173:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,175:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,177:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,177:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,178:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,179:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,180:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,181:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,186:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,187:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,189:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,190:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,191:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,192:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,192:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,193:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,193:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,195:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,195:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:54,196:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,198:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,199:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,202:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:54,202:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,203:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,205:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,206:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,207:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,208:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:54,216:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,218:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,219:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,220:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,220:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,221:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,223:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,224:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,227:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,229:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,230:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,231:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,242:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,243:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,244:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,244:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,247:INFO:Calculating mean and std
2022-11-15 23:13:54,249:INFO:Creating metrics dataframe
2022-11-15 23:13:54,253:INFO:Uploading results into container
2022-11-15 23:13:54,254:INFO:Uploading model into container now
2022-11-15 23:13:54,254:INFO:master_model_container: 2
2022-11-15 23:13:54,254:INFO:display_container: 2
2022-11-15 23:13:54,255:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-15 23:13:54,255:INFO:create_model() successfully completed......................................
2022-11-15 23:13:54,519:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:54,519:INFO:Creating metrics dataframe
2022-11-15 23:13:54,527:INFO:Initializing Naive Bayes
2022-11-15 23:13:54,528:INFO:Total runtime is 0.04432377020517985 minutes
2022-11-15 23:13:54,532:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:54,532:INFO:Initializing create_model()
2022-11-15 23:13:54,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:54,532:INFO:Checking exceptions
2022-11-15 23:13:54,534:INFO:Importing libraries
2022-11-15 23:13:54,534:INFO:Copying training dataset
2022-11-15 23:13:54,538:INFO:Defining folds
2022-11-15 23:13:54,538:INFO:Declaring metric variables
2022-11-15 23:13:54,542:INFO:Importing untrained model
2022-11-15 23:13:54,549:INFO:Naive Bayes Imported successfully
2022-11-15 23:13:54,560:INFO:Starting cross validation
2022-11-15 23:13:54,562:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:54,646:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,648:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,650:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,651:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,654:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,656:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,658:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,659:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,661:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,664:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,665:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,668:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,669:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,670:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,670:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,671:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,671:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,672:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,672:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,672:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,673:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,673:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:54,675:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,677:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,678:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,678:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,679:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,680:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:54,681:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,682:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,682:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,683:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,686:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,687:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,688:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,689:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,690:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,691:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,693:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,694:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,695:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:54,695:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:54,698:INFO:Calculating mean and std
2022-11-15 23:13:54,700:INFO:Creating metrics dataframe
2022-11-15 23:13:54,704:INFO:Uploading results into container
2022-11-15 23:13:54,705:INFO:Uploading model into container now
2022-11-15 23:13:54,706:INFO:master_model_container: 3
2022-11-15 23:13:54,706:INFO:display_container: 2
2022-11-15 23:13:54,706:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:13:54,706:INFO:create_model() successfully completed......................................
2022-11-15 23:13:54,933:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:54,933:INFO:Creating metrics dataframe
2022-11-15 23:13:54,942:INFO:Initializing Decision Tree Classifier
2022-11-15 23:13:54,942:INFO:Total runtime is 0.051235508918762204 minutes
2022-11-15 23:13:54,945:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:54,945:INFO:Initializing create_model()
2022-11-15 23:13:54,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:54,946:INFO:Checking exceptions
2022-11-15 23:13:54,949:INFO:Importing libraries
2022-11-15 23:13:54,950:INFO:Copying training dataset
2022-11-15 23:13:54,953:INFO:Defining folds
2022-11-15 23:13:54,954:INFO:Declaring metric variables
2022-11-15 23:13:54,958:INFO:Importing untrained model
2022-11-15 23:13:54,965:INFO:Decision Tree Classifier Imported successfully
2022-11-15 23:13:54,974:INFO:Starting cross validation
2022-11-15 23:13:54,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:55,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,073:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,075:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,075:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,077:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,078:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,080:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,080:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,081:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,082:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,083:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,084:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,087:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,089:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,090:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,091:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,092:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,093:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,094:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,095:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,098:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,099:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,099:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,102:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,103:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,105:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,106:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,106:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,111:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,112:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,112:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,112:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,113:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,113:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,114:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,116:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,116:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,117:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,120:INFO:Calculating mean and std
2022-11-15 23:13:55,122:INFO:Creating metrics dataframe
2022-11-15 23:13:55,125:INFO:Uploading results into container
2022-11-15 23:13:55,126:INFO:Uploading model into container now
2022-11-15 23:13:55,127:INFO:master_model_container: 4
2022-11-15 23:13:55,127:INFO:display_container: 2
2022-11-15 23:13:55,128:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2019, splitter='best')
2022-11-15 23:13:55,128:INFO:create_model() successfully completed......................................
2022-11-15 23:13:55,374:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:55,374:INFO:Creating metrics dataframe
2022-11-15 23:13:55,385:INFO:Initializing SVM - Linear Kernel
2022-11-15 23:13:55,385:INFO:Total runtime is 0.058612048625946045 minutes
2022-11-15 23:13:55,390:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:55,390:INFO:Initializing create_model()
2022-11-15 23:13:55,391:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:55,391:INFO:Checking exceptions
2022-11-15 23:13:55,393:INFO:Importing libraries
2022-11-15 23:13:55,393:INFO:Copying training dataset
2022-11-15 23:13:55,397:INFO:Defining folds
2022-11-15 23:13:55,398:INFO:Declaring metric variables
2022-11-15 23:13:55,404:INFO:Importing untrained model
2022-11-15 23:13:55,411:INFO:SVM - Linear Kernel Imported successfully
2022-11-15 23:13:55,424:INFO:Starting cross validation
2022-11-15 23:13:55,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:55,531:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,533:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,533:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,534:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,542:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,544:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,545:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,546:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,549:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,551:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,552:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,553:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,565:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,566:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,568:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,568:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,570:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,570:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,571:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,572:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,573:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,575:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:55,575:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,576:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:55,582:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,583:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,583:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,584:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,584:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,585:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,586:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,588:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,588:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,588:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,589:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,589:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,589:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,589:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,590:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,590:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,590:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,596:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,596:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,596:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,598:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,601:INFO:Calculating mean and std
2022-11-15 23:13:55,602:INFO:Creating metrics dataframe
2022-11-15 23:13:55,606:INFO:Uploading results into container
2022-11-15 23:13:55,607:INFO:Uploading model into container now
2022-11-15 23:13:55,607:INFO:master_model_container: 5
2022-11-15 23:13:55,607:INFO:display_container: 2
2022-11-15 23:13:55,608:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2019, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-15 23:13:55,608:INFO:create_model() successfully completed......................................
2022-11-15 23:13:55,833:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:55,833:INFO:Creating metrics dataframe
2022-11-15 23:13:55,845:INFO:Initializing Ridge Classifier
2022-11-15 23:13:55,845:INFO:Total runtime is 0.0662789265314738 minutes
2022-11-15 23:13:55,848:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:55,849:INFO:Initializing create_model()
2022-11-15 23:13:55,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:55,850:INFO:Checking exceptions
2022-11-15 23:13:55,852:INFO:Importing libraries
2022-11-15 23:13:55,852:INFO:Copying training dataset
2022-11-15 23:13:55,855:INFO:Defining folds
2022-11-15 23:13:55,856:INFO:Declaring metric variables
2022-11-15 23:13:55,861:INFO:Importing untrained model
2022-11-15 23:13:55,868:INFO:Ridge Classifier Imported successfully
2022-11-15 23:13:55,878:INFO:Starting cross validation
2022-11-15 23:13:55,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:55,951:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,952:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,953:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,953:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,954:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,954:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,955:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,956:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,958:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,958:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,959:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,962:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,963:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,964:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,965:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,966:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,968:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:55,974:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,975:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,976:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,978:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,978:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,978:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,979:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:55,979:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,980:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,980:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,981:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,982:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:55,985:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,985:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,986:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,986:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,986:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,988:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,990:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,991:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,992:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,992:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,993:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,993:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,994:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:55,994:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:55,997:INFO:Calculating mean and std
2022-11-15 23:13:55,998:INFO:Creating metrics dataframe
2022-11-15 23:13:56,002:INFO:Uploading results into container
2022-11-15 23:13:56,003:INFO:Uploading model into container now
2022-11-15 23:13:56,004:INFO:master_model_container: 6
2022-11-15 23:13:56,004:INFO:display_container: 2
2022-11-15 23:13:56,004:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=2019, solver='auto', tol=0.001)
2022-11-15 23:13:56,004:INFO:create_model() successfully completed......................................
2022-11-15 23:13:56,233:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:56,233:INFO:Creating metrics dataframe
2022-11-15 23:13:56,244:INFO:Initializing Random Forest Classifier
2022-11-15 23:13:56,244:INFO:Total runtime is 0.0729276458422343 minutes
2022-11-15 23:13:56,248:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:56,248:INFO:Initializing create_model()
2022-11-15 23:13:56,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:56,249:INFO:Checking exceptions
2022-11-15 23:13:56,250:INFO:Importing libraries
2022-11-15 23:13:56,250:INFO:Copying training dataset
2022-11-15 23:13:56,254:INFO:Defining folds
2022-11-15 23:13:56,254:INFO:Declaring metric variables
2022-11-15 23:13:56,258:INFO:Importing untrained model
2022-11-15 23:13:56,264:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:13:56,273:INFO:Starting cross validation
2022-11-15 23:13:56,275:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:56,895:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,897:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,899:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,900:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,903:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,905:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,906:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,908:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,908:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,909:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,910:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,912:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,914:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,931:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,934:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,935:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,936:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,950:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,951:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,952:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,953:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,953:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,954:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,955:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,955:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,956:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,956:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:56,958:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:56,968:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,970:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,971:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,972:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,976:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,976:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:56,978:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:56,978:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,070:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,072:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,076:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,077:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,077:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,078:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,081:INFO:Calculating mean and std
2022-11-15 23:13:57,082:INFO:Creating metrics dataframe
2022-11-15 23:13:57,086:INFO:Uploading results into container
2022-11-15 23:13:57,086:INFO:Uploading model into container now
2022-11-15 23:13:57,088:INFO:master_model_container: 7
2022-11-15 23:13:57,088:INFO:display_container: 2
2022-11-15 23:13:57,088:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2019, verbose=0, warm_start=False)
2022-11-15 23:13:57,088:INFO:create_model() successfully completed......................................
2022-11-15 23:13:57,313:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:57,313:INFO:Creating metrics dataframe
2022-11-15 23:13:57,324:INFO:Initializing Quadratic Discriminant Analysis
2022-11-15 23:13:57,324:INFO:Total runtime is 0.09093244870503744 minutes
2022-11-15 23:13:57,329:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:57,330:INFO:Initializing create_model()
2022-11-15 23:13:57,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:57,330:INFO:Checking exceptions
2022-11-15 23:13:57,333:INFO:Importing libraries
2022-11-15 23:13:57,333:INFO:Copying training dataset
2022-11-15 23:13:57,338:INFO:Defining folds
2022-11-15 23:13:57,338:INFO:Declaring metric variables
2022-11-15 23:13:57,342:INFO:Importing untrained model
2022-11-15 23:13:57,348:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-15 23:13:57,358:INFO:Starting cross validation
2022-11-15 23:13:57,361:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:57,403:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,408:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,415:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,423:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,433:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,439:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,446:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,454:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,457:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,459:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,460:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,462:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,465:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,466:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,469:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,470:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,471:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,472:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,472:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,472:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2022-11-15 23:13:57,473:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,473:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,474:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,475:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,475:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,476:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,476:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,477:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:57,481:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,482:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,483:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,483:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,484:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,484:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,485:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:57,485:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,486:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,488:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,489:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,490:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:57,495:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,495:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,496:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,496:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,496:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,496:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,497:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,497:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,501:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,501:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,502:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,502:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,506:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,507:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,507:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:57,508:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:57,510:INFO:Calculating mean and std
2022-11-15 23:13:57,512:INFO:Creating metrics dataframe
2022-11-15 23:13:57,515:INFO:Uploading results into container
2022-11-15 23:13:57,516:INFO:Uploading model into container now
2022-11-15 23:13:57,518:INFO:master_model_container: 8
2022-11-15 23:13:57,518:INFO:display_container: 2
2022-11-15 23:13:57,518:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-15 23:13:57,518:INFO:create_model() successfully completed......................................
2022-11-15 23:13:57,771:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:57,772:INFO:Creating metrics dataframe
2022-11-15 23:13:57,782:INFO:Initializing Ada Boost Classifier
2022-11-15 23:13:57,783:INFO:Total runtime is 0.0985723376274109 minutes
2022-11-15 23:13:57,786:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:57,786:INFO:Initializing create_model()
2022-11-15 23:13:57,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:57,786:INFO:Checking exceptions
2022-11-15 23:13:57,789:INFO:Importing libraries
2022-11-15 23:13:57,789:INFO:Copying training dataset
2022-11-15 23:13:57,792:INFO:Defining folds
2022-11-15 23:13:57,792:INFO:Declaring metric variables
2022-11-15 23:13:57,798:INFO:Importing untrained model
2022-11-15 23:13:57,805:INFO:Ada Boost Classifier Imported successfully
2022-11-15 23:13:57,816:INFO:Starting cross validation
2022-11-15 23:13:57,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:13:58,123:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,125:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,126:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,128:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,132:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,132:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,133:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,134:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,135:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,135:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,136:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,136:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,136:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,137:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,138:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,139:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,140:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,140:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:13:58,141:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,143:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,143:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,145:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,145:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,148:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,150:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,150:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,150:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,151:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,151:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,152:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,152:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,152:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,155:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,158:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,159:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,160:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,166:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,166:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,168:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,168:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,168:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,168:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:13:58,168:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,169:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:13:58,171:INFO:Calculating mean and std
2022-11-15 23:13:58,173:INFO:Creating metrics dataframe
2022-11-15 23:13:58,176:INFO:Uploading results into container
2022-11-15 23:13:58,176:INFO:Uploading model into container now
2022-11-15 23:13:58,178:INFO:master_model_container: 9
2022-11-15 23:13:58,178:INFO:display_container: 2
2022-11-15 23:13:58,178:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2019)
2022-11-15 23:13:58,178:INFO:create_model() successfully completed......................................
2022-11-15 23:13:58,412:INFO:SubProcess create_model() end ==================================
2022-11-15 23:13:58,412:INFO:Creating metrics dataframe
2022-11-15 23:13:58,423:INFO:Initializing Gradient Boosting Classifier
2022-11-15 23:13:58,423:INFO:Total runtime is 0.10923749208450319 minutes
2022-11-15 23:13:58,427:INFO:SubProcess create_model() called ==================================
2022-11-15 23:13:58,428:INFO:Initializing create_model()
2022-11-15 23:13:58,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:13:58,428:INFO:Checking exceptions
2022-11-15 23:13:58,430:INFO:Importing libraries
2022-11-15 23:13:58,430:INFO:Copying training dataset
2022-11-15 23:13:58,433:INFO:Defining folds
2022-11-15 23:13:58,434:INFO:Declaring metric variables
2022-11-15 23:13:58,441:INFO:Importing untrained model
2022-11-15 23:13:58,452:INFO:Gradient Boosting Classifier Imported successfully
2022-11-15 23:13:58,465:INFO:Starting cross validation
2022-11-15 23:13:58,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:00,504:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,506:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,508:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,508:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,525:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,526:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,527:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,528:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,528:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,529:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,530:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

rage, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:00,531:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,532:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,540:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,540:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,541:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,543:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,544:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,545:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:00,547:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,549:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,551:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,551:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,553:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,554:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,555:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,558:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,560:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,562:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,574:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,575:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,575:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,575:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,576:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,576:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,576:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,577:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:00,578:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,578:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,591:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,591:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,592:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:00,593:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:00,596:INFO:Calculating mean and std
2022-11-15 23:14:00,597:INFO:Creating metrics dataframe
2022-11-15 23:14:00,601:INFO:Uploading results into container
2022-11-15 23:14:00,601:INFO:Uploading model into container now
2022-11-15 23:14:00,602:INFO:master_model_container: 10
2022-11-15 23:14:00,602:INFO:display_container: 2
2022-11-15 23:14:00,602:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2019, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-15 23:14:00,602:INFO:create_model() successfully completed......................................
2022-11-15 23:14:00,863:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:00,864:INFO:Creating metrics dataframe
2022-11-15 23:14:00,876:INFO:Initializing Linear Discriminant Analysis
2022-11-15 23:14:00,876:INFO:Total runtime is 0.15013586282730104 minutes
2022-11-15 23:14:00,881:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:00,881:INFO:Initializing create_model()
2022-11-15 23:14:00,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:00,881:INFO:Checking exceptions
2022-11-15 23:14:00,883:INFO:Importing libraries
2022-11-15 23:14:00,884:INFO:Copying training dataset
2022-11-15 23:14:00,888:INFO:Defining folds
2022-11-15 23:14:00,888:INFO:Declaring metric variables
2022-11-15 23:14:00,894:INFO:Importing untrained model
2022-11-15 23:14:00,900:INFO:Linear Discriminant Analysis Imported successfully
2022-11-15 23:14:00,912:INFO:Starting cross validation
2022-11-15 23:14:00,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:01,008:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,011:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,012:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,013:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,026:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,028:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,030:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,031:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,031:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,034:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,035:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,036:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,036:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,038:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,040:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,041:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,048:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,048:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,049:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,051:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,051:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,052:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,052:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:01,055:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,056:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,056:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,057:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,061:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,062:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,063:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,063:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,063:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,064:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,066:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,066:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,068:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,069:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,070:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,070:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,073:INFO:Calculating mean and std
2022-11-15 23:14:01,074:INFO:Creating metrics dataframe
2022-11-15 23:14:01,079:INFO:Uploading results into container
2022-11-15 23:14:01,080:INFO:Uploading model into container now
2022-11-15 23:14:01,081:INFO:master_model_container: 11
2022-11-15 23:14:01,081:INFO:display_container: 2
2022-11-15 23:14:01,081:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-15 23:14:01,081:INFO:create_model() successfully completed......................................
2022-11-15 23:14:01,303:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:01,303:INFO:Creating metrics dataframe
2022-11-15 23:14:01,314:INFO:Initializing Extra Trees Classifier
2022-11-15 23:14:01,314:INFO:Total runtime is 0.15743203163146974 minutes
2022-11-15 23:14:01,319:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:01,320:INFO:Initializing create_model()
2022-11-15 23:14:01,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:01,320:INFO:Checking exceptions
2022-11-15 23:14:01,322:INFO:Importing libraries
2022-11-15 23:14:01,322:INFO:Copying training dataset
2022-11-15 23:14:01,326:INFO:Defining folds
2022-11-15 23:14:01,327:INFO:Declaring metric variables
2022-11-15 23:14:01,333:INFO:Importing untrained model
2022-11-15 23:14:01,340:INFO:Extra Trees Classifier Imported successfully
2022-11-15 23:14:01,351:INFO:Starting cross validation
2022-11-15 23:14:01,352:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:01,980:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,982:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,984:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,985:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,990:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,993:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:01,995:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:01,997:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,003:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,006:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,008:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,010:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,039:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,041:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,043:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,046:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,046:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,051:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,053:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,054:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,056:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:02,068:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,071:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,073:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,075:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,076:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,078:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:02,083:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,085:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,086:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,088:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,157:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,159:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,160:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,160:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,173:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,174:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,175:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,176:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,238:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,240:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,241:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:02,241:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:02,244:INFO:Calculating mean and std
2022-11-15 23:14:02,246:INFO:Creating metrics dataframe
2022-11-15 23:14:02,250:INFO:Uploading results into container
2022-11-15 23:14:02,251:INFO:Uploading model into container now
2022-11-15 23:14:02,252:INFO:master_model_container: 12
2022-11-15 23:14:02,252:INFO:display_container: 2
2022-11-15 23:14:02,252:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2019, verbose=0, warm_start=False)
2022-11-15 23:14:02,253:INFO:create_model() successfully completed......................................
2022-11-15 23:14:02,506:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:02,507:INFO:Creating metrics dataframe
2022-11-15 23:14:02,520:INFO:Initializing Extreme Gradient Boosting
2022-11-15 23:14:02,520:INFO:Total runtime is 0.17752036253611247 minutes
2022-11-15 23:14:02,524:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:02,525:INFO:Initializing create_model()
2022-11-15 23:14:02,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:02,525:INFO:Checking exceptions
2022-11-15 23:14:02,527:INFO:Importing libraries
2022-11-15 23:14:02,527:INFO:Copying training dataset
2022-11-15 23:14:02,531:INFO:Defining folds
2022-11-15 23:14:02,531:INFO:Declaring metric variables
2022-11-15 23:14:02,536:INFO:Importing untrained model
2022-11-15 23:14:02,543:INFO:Extreme Gradient Boosting Imported successfully
2022-11-15 23:14:02,554:INFO:Starting cross validation
2022-11-15 23:14:02,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:03,369:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,372:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,373:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,374:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,374:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,375:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,376:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,379:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,392:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,393:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,394:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,394:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,394:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,394:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,395:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,395:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,396:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,396:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,397:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,397:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,398:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,400:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:03,407:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,408:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,408:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,409:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,409:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,409:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,409:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,409:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,409:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,410:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,410:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,411:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,412:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,413:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,413:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:03,414:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,415:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,415:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,415:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,416:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,416:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:03,417:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:03,420:INFO:Calculating mean and std
2022-11-15 23:14:03,422:INFO:Creating metrics dataframe
2022-11-15 23:14:03,426:INFO:Uploading results into container
2022-11-15 23:14:03,428:INFO:Uploading model into container now
2022-11-15 23:14:03,428:INFO:master_model_container: 13
2022-11-15 23:14:03,428:INFO:display_container: 2
2022-11-15 23:14:03,429:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2022-11-15 23:14:03,429:INFO:create_model() successfully completed......................................
2022-11-15 23:14:03,653:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:03,654:INFO:Creating metrics dataframe
2022-11-15 23:14:03,665:INFO:Initializing Light Gradient Boosting Machine
2022-11-15 23:14:03,666:INFO:Total runtime is 0.19662703275680543 minutes
2022-11-15 23:14:03,670:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:03,671:INFO:Initializing create_model()
2022-11-15 23:14:03,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:03,671:INFO:Checking exceptions
2022-11-15 23:14:03,673:INFO:Importing libraries
2022-11-15 23:14:03,673:INFO:Copying training dataset
2022-11-15 23:14:03,676:INFO:Defining folds
2022-11-15 23:14:03,678:INFO:Declaring metric variables
2022-11-15 23:14:03,682:INFO:Importing untrained model
2022-11-15 23:14:03,689:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-15 23:14:03,700:INFO:Starting cross validation
2022-11-15 23:14:03,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:04,441:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,443:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,444:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,445:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,456:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,458:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,459:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,461:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,466:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,468:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,470:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,471:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,472:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,472:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,473:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,475:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,476:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,478:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,479:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,479:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,480:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,481:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:04,481:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,481:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,482:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,483:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,483:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,484:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,485:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,485:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,485:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:04,486:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,489:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,490:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,491:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,491:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,496:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,498:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,498:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,498:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,501:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,502:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,503:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,504:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,505:INFO:Calculating mean and std
2022-11-15 23:14:04,508:INFO:Creating metrics dataframe
2022-11-15 23:14:04,512:INFO:Uploading results into container
2022-11-15 23:14:04,513:INFO:Uploading model into container now
2022-11-15 23:14:04,513:INFO:master_model_container: 14
2022-11-15 23:14:04,514:INFO:display_container: 2
2022-11-15 23:14:04,514:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2019, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-15 23:14:04,514:INFO:create_model() successfully completed......................................
2022-11-15 23:14:04,742:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:04,742:INFO:Creating metrics dataframe
2022-11-15 23:14:04,755:INFO:Initializing Dummy Classifier
2022-11-15 23:14:04,755:INFO:Total runtime is 0.21477122704188029 minutes
2022-11-15 23:14:04,758:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:04,758:INFO:Initializing create_model()
2022-11-15 23:14:04,759:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473699850>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:04,759:INFO:Checking exceptions
2022-11-15 23:14:04,761:INFO:Importing libraries
2022-11-15 23:14:04,761:INFO:Copying training dataset
2022-11-15 23:14:04,764:INFO:Defining folds
2022-11-15 23:14:04,765:INFO:Declaring metric variables
2022-11-15 23:14:04,770:INFO:Importing untrained model
2022-11-15 23:14:04,775:INFO:Dummy Classifier Imported successfully
2022-11-15 23:14:04,784:INFO:Starting cross validation
2022-11-15 23:14:04,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:04,864:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,868:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,869:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,869:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,870:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,871:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,872:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,873:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,873:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,874:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,875:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,876:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,879:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,880:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,881:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,882:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,883:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,883:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:04,887:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,888:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,890:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,890:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,891:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,892:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:04,893:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,894:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,894:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,895:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1599: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2022-11-15 23:14:04,900:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,901:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,901:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,902:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,904:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,905:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,906:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,907:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,909:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,910:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,910:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,910:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,913:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,914:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,915:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:04,915:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:14:04,918:INFO:Calculating mean and std
2022-11-15 23:14:04,921:INFO:Creating metrics dataframe
2022-11-15 23:14:04,924:INFO:Uploading results into container
2022-11-15 23:14:04,924:INFO:Uploading model into container now
2022-11-15 23:14:04,925:INFO:master_model_container: 15
2022-11-15 23:14:04,925:INFO:display_container: 2
2022-11-15 23:14:04,925:INFO:DummyClassifier(constant=None, random_state=2019, strategy='prior')
2022-11-15 23:14:04,925:INFO:create_model() successfully completed......................................
2022-11-15 23:14:05,152:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:05,152:INFO:Creating metrics dataframe
2022-11-15 23:14:05,176:INFO:Initializing create_model()
2022-11-15 23:14:05,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922EB80>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2019, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:05,177:INFO:Checking exceptions
2022-11-15 23:14:05,180:INFO:Importing libraries
2022-11-15 23:14:05,180:INFO:Copying training dataset
2022-11-15 23:14:05,182:INFO:Defining folds
2022-11-15 23:14:05,183:INFO:Declaring metric variables
2022-11-15 23:14:05,183:INFO:Importing untrained model
2022-11-15 23:14:05,183:INFO:Declaring custom model
2022-11-15 23:14:05,184:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:14:05,186:INFO:Cross validation set to False
2022-11-15 23:14:05,186:INFO:Fitting Model
2022-11-15 23:14:05,429:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2019, verbose=0, warm_start=False)
2022-11-15 23:14:05,429:INFO:create_model() successfully completed......................................
2022-11-15 23:14:05,691:INFO:master_model_container: 15
2022-11-15 23:14:05,691:INFO:display_container: 2
2022-11-15 23:14:05,692:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2019, verbose=0, warm_start=False)
2022-11-15 23:14:05,692:INFO:compare_models() successfully completed......................................
2022-11-15 23:14:34,359:INFO:PyCaret ClassificationExperiment
2022-11-15 23:14:34,359:INFO:Logging name: clf-default-name
2022-11-15 23:14:34,359:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:14:34,359:INFO:version 3.0.0.rc4
2022-11-15 23:14:34,359:INFO:Initializing setup()
2022-11-15 23:14:34,360:INFO:self.USI: e519
2022-11-15 23:14:34,360:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:14:34,360:INFO:Checking environment
2022-11-15 23:14:34,360:INFO:python_version: 3.9.0
2022-11-15 23:14:34,360:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:14:34,360:INFO:machine: AMD64
2022-11-15 23:14:34,360:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:14:34,360:INFO:Memory: svmem(total=7968530432, available=880652288, percent=88.9, used=7087878144, free=880652288)
2022-11-15 23:14:34,360:INFO:Physical Core: 6
2022-11-15 23:14:34,360:INFO:Logical Core: 12
2022-11-15 23:14:34,360:INFO:Checking libraries
2022-11-15 23:14:34,360:INFO:System:
2022-11-15 23:14:34,360:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:14:34,360:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:14:34,360:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:14:34,360:INFO:PyCaret required dependencies:
2022-11-15 23:14:34,360:INFO:                 pip: 22.1.2
2022-11-15 23:14:34,360:INFO:          setuptools: 60.10.0
2022-11-15 23:14:34,360:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:14:34,360:INFO:             IPython: 8.5.0
2022-11-15 23:14:34,360:INFO:          ipywidgets: 8.0.2
2022-11-15 23:14:34,360:INFO:                tqdm: 4.64.1
2022-11-15 23:14:34,360:INFO:               numpy: 1.22.4
2022-11-15 23:14:34,361:INFO:              pandas: 1.4.4
2022-11-15 23:14:34,361:INFO:              jinja2: 3.1.2
2022-11-15 23:14:34,361:INFO:               scipy: 1.8.1
2022-11-15 23:14:34,361:INFO:              joblib: 1.2.0
2022-11-15 23:14:34,361:INFO:             sklearn: 1.1.2
2022-11-15 23:14:34,361:INFO:                pyod: 1.0.6
2022-11-15 23:14:34,361:INFO:            imblearn: 0.9.1
2022-11-15 23:14:34,361:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:14:34,361:INFO:            lightgbm: 3.3.3
2022-11-15 23:14:34,361:INFO:               numba: 0.55.2
2022-11-15 23:14:34,361:INFO:            requests: 2.28.1
2022-11-15 23:14:34,361:INFO:          matplotlib: 3.6.0
2022-11-15 23:14:34,361:INFO:          scikitplot: 0.3.7
2022-11-15 23:14:34,361:INFO:         yellowbrick: 1.5
2022-11-15 23:14:34,361:INFO:              plotly: 5.11.0
2022-11-15 23:14:34,361:INFO:             kaleido: 0.2.1
2022-11-15 23:14:34,361:INFO:         statsmodels: 0.13.5
2022-11-15 23:14:34,361:INFO:              sktime: 0.13.4
2022-11-15 23:14:34,361:INFO:               tbats: 1.1.1
2022-11-15 23:14:34,361:INFO:            pmdarima: 1.8.5
2022-11-15 23:14:34,361:INFO:              psutil: 5.9.2
2022-11-15 23:14:34,361:INFO:PyCaret optional dependencies:
2022-11-15 23:14:34,361:INFO:                shap: 0.41.0
2022-11-15 23:14:34,361:INFO:           interpret: 0.2.7
2022-11-15 23:14:34,361:INFO:                umap: Not installed
2022-11-15 23:14:34,361:INFO:    pandas_profiling: Not installed
2022-11-15 23:14:34,361:INFO:  explainerdashboard: Not installed
2022-11-15 23:14:34,361:INFO:             autoviz: Not installed
2022-11-15 23:14:34,361:INFO:           fairlearn: Not installed
2022-11-15 23:14:34,362:INFO:             xgboost: 1.7.1
2022-11-15 23:14:34,362:INFO:            catboost: Not installed
2022-11-15 23:14:34,362:INFO:              kmodes: Not installed
2022-11-15 23:14:34,362:INFO:             mlxtend: Not installed
2022-11-15 23:14:34,362:INFO:       statsforecast: Not installed
2022-11-15 23:14:34,362:INFO:        tune_sklearn: Not installed
2022-11-15 23:14:34,362:INFO:                 ray: Not installed
2022-11-15 23:14:34,362:INFO:            hyperopt: Not installed
2022-11-15 23:14:34,362:INFO:              optuna: Not installed
2022-11-15 23:14:34,362:INFO:               skopt: Not installed
2022-11-15 23:14:34,362:INFO:              mlflow: Not installed
2022-11-15 23:14:34,362:INFO:              gradio: Not installed
2022-11-15 23:14:34,362:INFO:             fastapi: Not installed
2022-11-15 23:14:34,362:INFO:             uvicorn: Not installed
2022-11-15 23:14:34,362:INFO:              m2cgen: Not installed
2022-11-15 23:14:34,362:INFO:           evidently: Not installed
2022-11-15 23:14:34,362:INFO:                nltk: 3.7
2022-11-15 23:14:34,362:INFO:            pyLDAvis: Not installed
2022-11-15 23:14:34,362:INFO:              gensim: Not installed
2022-11-15 23:14:34,362:INFO:               spacy: Not installed
2022-11-15 23:14:34,362:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:14:34,362:INFO:            textblob: Not installed
2022-11-15 23:14:34,363:INFO:               fugue: Not installed
2022-11-15 23:14:34,363:INFO:           streamlit: Not installed
2022-11-15 23:14:34,363:INFO:             prophet: Not installed
2022-11-15 23:14:34,363:INFO:None
2022-11-15 23:14:34,363:INFO:Set up data.
2022-11-15 23:14:34,369:INFO:Set up train/test split.
2022-11-15 23:14:34,374:INFO:Set up index.
2022-11-15 23:14:34,374:INFO:Assigning column types.
2022-11-15 23:14:34,379:INFO:Set up folding strategy.
2022-11-15 23:14:34,379:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:14:34,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:14:34,428:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:14:34,457:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:14:34,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:14:34,508:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:14:34,509:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:14:34,539:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:14:34,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:14:34,542:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:14:34,589:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:14:34,618:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:14:34,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:14:34,668:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:14:34,698:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:14:34,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:14:34,700:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:14:34,778:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:14:34,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:14:34,858:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:14:34,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:14:34,862:INFO:Preparing preprocessing pipeline...
2022-11-15 23:14:34,863:INFO:Set up simple imputation.
2022-11-15 23:14:34,863:INFO:Set up variance threshold.
2022-11-15 23:14:34,905:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:14:34,908:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:14:34,909:INFO:Creating final display dataframe.
2022-11-15 23:14:35,126:INFO:Setup display_container:                     Description             Value
0                    Session id              1470
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (537, 9)
6    Transformed test set shape          (231, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation          constant
12       Low variance threshold                 0
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              e519
2022-11-15 23:14:35,210:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:14:35,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:14:35,290:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:14:35,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:14:35,299:INFO:setup() successfully completed in 0.94s...............
2022-11-15 23:14:48,167:INFO:Initializing compare_models()
2022-11-15 23:14:48,167:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:14:48,167:INFO:Checking exceptions
2022-11-15 23:14:48,173:INFO:Preparing display monitor
2022-11-15 23:14:48,219:INFO:Initializing Logistic Regression
2022-11-15 23:14:48,220:INFO:Total runtime is 1.6959508260091147e-05 minutes
2022-11-15 23:14:48,227:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:48,228:INFO:Initializing create_model()
2022-11-15 23:14:48,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:48,229:INFO:Checking exceptions
2022-11-15 23:14:48,232:INFO:Importing libraries
2022-11-15 23:14:48,232:INFO:Copying training dataset
2022-11-15 23:14:48,237:INFO:Defining folds
2022-11-15 23:14:48,237:INFO:Declaring metric variables
2022-11-15 23:14:48,243:INFO:Importing untrained model
2022-11-15 23:14:48,250:INFO:Logistic Regression Imported successfully
2022-11-15 23:14:48,263:INFO:Starting cross validation
2022-11-15 23:14:48,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:48,765:INFO:Calculating mean and std
2022-11-15 23:14:48,766:INFO:Creating metrics dataframe
2022-11-15 23:14:48,770:INFO:Uploading results into container
2022-11-15 23:14:48,770:INFO:Uploading model into container now
2022-11-15 23:14:48,770:INFO:master_model_container: 1
2022-11-15 23:14:48,770:INFO:display_container: 2
2022-11-15 23:14:48,771:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:14:48,771:INFO:create_model() successfully completed......................................
2022-11-15 23:14:48,992:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:48,992:INFO:Creating metrics dataframe
2022-11-15 23:14:49,000:INFO:Initializing K Neighbors Classifier
2022-11-15 23:14:49,000:INFO:Total runtime is 0.013026154041290284 minutes
2022-11-15 23:14:49,004:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:49,004:INFO:Initializing create_model()
2022-11-15 23:14:49,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:49,004:INFO:Checking exceptions
2022-11-15 23:14:49,006:INFO:Importing libraries
2022-11-15 23:14:49,007:INFO:Copying training dataset
2022-11-15 23:14:49,010:INFO:Defining folds
2022-11-15 23:14:49,010:INFO:Declaring metric variables
2022-11-15 23:14:49,014:INFO:Importing untrained model
2022-11-15 23:14:49,019:INFO:K Neighbors Classifier Imported successfully
2022-11-15 23:14:49,028:INFO:Starting cross validation
2022-11-15 23:14:49,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:49,290:INFO:Calculating mean and std
2022-11-15 23:14:49,292:INFO:Creating metrics dataframe
2022-11-15 23:14:49,298:INFO:Uploading results into container
2022-11-15 23:14:49,298:INFO:Uploading model into container now
2022-11-15 23:14:49,299:INFO:master_model_container: 2
2022-11-15 23:14:49,299:INFO:display_container: 2
2022-11-15 23:14:49,299:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-15 23:14:49,300:INFO:create_model() successfully completed......................................
2022-11-15 23:14:49,606:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:49,606:INFO:Creating metrics dataframe
2022-11-15 23:14:49,615:INFO:Initializing Naive Bayes
2022-11-15 23:14:49,616:INFO:Total runtime is 0.023294858137766522 minutes
2022-11-15 23:14:49,619:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:49,620:INFO:Initializing create_model()
2022-11-15 23:14:49,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:49,621:INFO:Checking exceptions
2022-11-15 23:14:49,623:INFO:Importing libraries
2022-11-15 23:14:49,623:INFO:Copying training dataset
2022-11-15 23:14:49,626:INFO:Defining folds
2022-11-15 23:14:49,626:INFO:Declaring metric variables
2022-11-15 23:14:49,633:INFO:Importing untrained model
2022-11-15 23:14:49,638:INFO:Naive Bayes Imported successfully
2022-11-15 23:14:49,650:INFO:Starting cross validation
2022-11-15 23:14:49,651:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:49,768:INFO:Calculating mean and std
2022-11-15 23:14:49,769:INFO:Creating metrics dataframe
2022-11-15 23:14:49,773:INFO:Uploading results into container
2022-11-15 23:14:49,774:INFO:Uploading model into container now
2022-11-15 23:14:49,775:INFO:master_model_container: 3
2022-11-15 23:14:49,775:INFO:display_container: 2
2022-11-15 23:14:49,775:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:14:49,775:INFO:create_model() successfully completed......................................
2022-11-15 23:14:50,009:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:50,009:INFO:Creating metrics dataframe
2022-11-15 23:14:50,018:INFO:Initializing Decision Tree Classifier
2022-11-15 23:14:50,018:INFO:Total runtime is 0.02999184528986613 minutes
2022-11-15 23:14:50,021:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:50,022:INFO:Initializing create_model()
2022-11-15 23:14:50,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:50,023:INFO:Checking exceptions
2022-11-15 23:14:50,025:INFO:Importing libraries
2022-11-15 23:14:50,025:INFO:Copying training dataset
2022-11-15 23:14:50,030:INFO:Defining folds
2022-11-15 23:14:50,030:INFO:Declaring metric variables
2022-11-15 23:14:50,036:INFO:Importing untrained model
2022-11-15 23:14:50,041:INFO:Decision Tree Classifier Imported successfully
2022-11-15 23:14:50,053:INFO:Starting cross validation
2022-11-15 23:14:50,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:50,170:INFO:Calculating mean and std
2022-11-15 23:14:50,172:INFO:Creating metrics dataframe
2022-11-15 23:14:50,176:INFO:Uploading results into container
2022-11-15 23:14:50,176:INFO:Uploading model into container now
2022-11-15 23:14:50,177:INFO:master_model_container: 4
2022-11-15 23:14:50,177:INFO:display_container: 2
2022-11-15 23:14:50,177:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1470, splitter='best')
2022-11-15 23:14:50,178:INFO:create_model() successfully completed......................................
2022-11-15 23:14:50,430:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:50,430:INFO:Creating metrics dataframe
2022-11-15 23:14:50,441:INFO:Initializing SVM - Linear Kernel
2022-11-15 23:14:50,441:INFO:Total runtime is 0.03704388936360677 minutes
2022-11-15 23:14:50,446:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:50,447:INFO:Initializing create_model()
2022-11-15 23:14:50,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:50,448:INFO:Checking exceptions
2022-11-15 23:14:50,450:INFO:Importing libraries
2022-11-15 23:14:50,451:INFO:Copying training dataset
2022-11-15 23:14:50,455:INFO:Defining folds
2022-11-15 23:14:50,456:INFO:Declaring metric variables
2022-11-15 23:14:50,460:INFO:Importing untrained model
2022-11-15 23:14:50,466:INFO:SVM - Linear Kernel Imported successfully
2022-11-15 23:14:50,477:INFO:Starting cross validation
2022-11-15 23:14:50,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:50,591:INFO:Calculating mean and std
2022-11-15 23:14:50,593:INFO:Creating metrics dataframe
2022-11-15 23:14:50,596:INFO:Uploading results into container
2022-11-15 23:14:50,597:INFO:Uploading model into container now
2022-11-15 23:14:50,598:INFO:master_model_container: 5
2022-11-15 23:14:50,598:INFO:display_container: 2
2022-11-15 23:14:50,599:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1470, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-15 23:14:50,599:INFO:create_model() successfully completed......................................
2022-11-15 23:14:50,828:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:50,828:INFO:Creating metrics dataframe
2022-11-15 23:14:50,839:INFO:Initializing Ridge Classifier
2022-11-15 23:14:50,839:INFO:Total runtime is 0.043671286106109625 minutes
2022-11-15 23:14:50,843:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:50,844:INFO:Initializing create_model()
2022-11-15 23:14:50,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:50,845:INFO:Checking exceptions
2022-11-15 23:14:50,846:INFO:Importing libraries
2022-11-15 23:14:50,846:INFO:Copying training dataset
2022-11-15 23:14:50,849:INFO:Defining folds
2022-11-15 23:14:50,849:INFO:Declaring metric variables
2022-11-15 23:14:50,855:INFO:Importing untrained model
2022-11-15 23:14:50,861:INFO:Ridge Classifier Imported successfully
2022-11-15 23:14:50,873:INFO:Starting cross validation
2022-11-15 23:14:50,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:50,995:INFO:Calculating mean and std
2022-11-15 23:14:50,997:INFO:Creating metrics dataframe
2022-11-15 23:14:51,001:INFO:Uploading results into container
2022-11-15 23:14:51,002:INFO:Uploading model into container now
2022-11-15 23:14:51,003:INFO:master_model_container: 6
2022-11-15 23:14:51,003:INFO:display_container: 2
2022-11-15 23:14:51,003:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=1470, solver='auto', tol=0.001)
2022-11-15 23:14:51,003:INFO:create_model() successfully completed......................................
2022-11-15 23:14:51,239:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:51,240:INFO:Creating metrics dataframe
2022-11-15 23:14:51,249:INFO:Initializing Random Forest Classifier
2022-11-15 23:14:51,250:INFO:Total runtime is 0.05051872332890829 minutes
2022-11-15 23:14:51,255:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:51,255:INFO:Initializing create_model()
2022-11-15 23:14:51,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:51,256:INFO:Checking exceptions
2022-11-15 23:14:51,257:INFO:Importing libraries
2022-11-15 23:14:51,257:INFO:Copying training dataset
2022-11-15 23:14:51,262:INFO:Defining folds
2022-11-15 23:14:51,263:INFO:Declaring metric variables
2022-11-15 23:14:51,268:INFO:Importing untrained model
2022-11-15 23:14:51,273:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:14:51,287:INFO:Starting cross validation
2022-11-15 23:14:51,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:51,969:INFO:Calculating mean and std
2022-11-15 23:14:51,971:INFO:Creating metrics dataframe
2022-11-15 23:14:51,974:INFO:Uploading results into container
2022-11-15 23:14:51,975:INFO:Uploading model into container now
2022-11-15 23:14:51,975:INFO:master_model_container: 7
2022-11-15 23:14:51,975:INFO:display_container: 2
2022-11-15 23:14:51,976:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1470, verbose=0, warm_start=False)
2022-11-15 23:14:51,976:INFO:create_model() successfully completed......................................
2022-11-15 23:14:52,208:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:52,208:INFO:Creating metrics dataframe
2022-11-15 23:14:52,218:INFO:Initializing Quadratic Discriminant Analysis
2022-11-15 23:14:52,220:INFO:Total runtime is 0.06665838559468587 minutes
2022-11-15 23:14:52,223:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:52,223:INFO:Initializing create_model()
2022-11-15 23:14:52,223:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:52,223:INFO:Checking exceptions
2022-11-15 23:14:52,226:INFO:Importing libraries
2022-11-15 23:14:52,227:INFO:Copying training dataset
2022-11-15 23:14:52,230:INFO:Defining folds
2022-11-15 23:14:52,230:INFO:Declaring metric variables
2022-11-15 23:14:52,236:INFO:Importing untrained model
2022-11-15 23:14:52,241:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-15 23:14:52,254:INFO:Starting cross validation
2022-11-15 23:14:52,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:52,371:INFO:Calculating mean and std
2022-11-15 23:14:52,373:INFO:Creating metrics dataframe
2022-11-15 23:14:52,376:INFO:Uploading results into container
2022-11-15 23:14:52,377:INFO:Uploading model into container now
2022-11-15 23:14:52,378:INFO:master_model_container: 8
2022-11-15 23:14:52,378:INFO:display_container: 2
2022-11-15 23:14:52,378:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-15 23:14:52,378:INFO:create_model() successfully completed......................................
2022-11-15 23:14:52,635:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:52,635:INFO:Creating metrics dataframe
2022-11-15 23:14:52,645:INFO:Initializing Ada Boost Classifier
2022-11-15 23:14:52,646:INFO:Total runtime is 0.07378795941670735 minutes
2022-11-15 23:14:52,650:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:52,651:INFO:Initializing create_model()
2022-11-15 23:14:52,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:52,651:INFO:Checking exceptions
2022-11-15 23:14:52,652:INFO:Importing libraries
2022-11-15 23:14:52,652:INFO:Copying training dataset
2022-11-15 23:14:52,656:INFO:Defining folds
2022-11-15 23:14:52,657:INFO:Declaring metric variables
2022-11-15 23:14:52,662:INFO:Importing untrained model
2022-11-15 23:14:52,667:INFO:Ada Boost Classifier Imported successfully
2022-11-15 23:14:52,681:INFO:Starting cross validation
2022-11-15 23:14:52,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:52,953:INFO:Calculating mean and std
2022-11-15 23:14:52,955:INFO:Creating metrics dataframe
2022-11-15 23:14:52,958:INFO:Uploading results into container
2022-11-15 23:14:52,960:INFO:Uploading model into container now
2022-11-15 23:14:52,961:INFO:master_model_container: 9
2022-11-15 23:14:52,961:INFO:display_container: 2
2022-11-15 23:14:52,961:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1470)
2022-11-15 23:14:52,961:INFO:create_model() successfully completed......................................
2022-11-15 23:14:53,190:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:53,190:INFO:Creating metrics dataframe
2022-11-15 23:14:53,202:INFO:Initializing Gradient Boosting Classifier
2022-11-15 23:14:53,202:INFO:Total runtime is 0.08305884599685669 minutes
2022-11-15 23:14:53,208:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:53,208:INFO:Initializing create_model()
2022-11-15 23:14:53,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:53,208:INFO:Checking exceptions
2022-11-15 23:14:53,209:INFO:Importing libraries
2022-11-15 23:14:53,209:INFO:Copying training dataset
2022-11-15 23:14:53,214:INFO:Defining folds
2022-11-15 23:14:53,215:INFO:Declaring metric variables
2022-11-15 23:14:53,222:INFO:Importing untrained model
2022-11-15 23:14:53,228:INFO:Gradient Boosting Classifier Imported successfully
2022-11-15 23:14:53,238:INFO:Starting cross validation
2022-11-15 23:14:53,239:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:53,501:INFO:Calculating mean and std
2022-11-15 23:14:53,503:INFO:Creating metrics dataframe
2022-11-15 23:14:53,506:INFO:Uploading results into container
2022-11-15 23:14:53,507:INFO:Uploading model into container now
2022-11-15 23:14:53,507:INFO:master_model_container: 10
2022-11-15 23:14:53,507:INFO:display_container: 2
2022-11-15 23:14:53,508:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1470, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-15 23:14:53,508:INFO:create_model() successfully completed......................................
2022-11-15 23:14:53,749:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:53,749:INFO:Creating metrics dataframe
2022-11-15 23:14:53,767:INFO:Initializing Linear Discriminant Analysis
2022-11-15 23:14:53,768:INFO:Total runtime is 0.0924892783164978 minutes
2022-11-15 23:14:53,772:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:53,772:INFO:Initializing create_model()
2022-11-15 23:14:53,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:53,773:INFO:Checking exceptions
2022-11-15 23:14:53,775:INFO:Importing libraries
2022-11-15 23:14:53,775:INFO:Copying training dataset
2022-11-15 23:14:53,779:INFO:Defining folds
2022-11-15 23:14:53,779:INFO:Declaring metric variables
2022-11-15 23:14:53,787:INFO:Importing untrained model
2022-11-15 23:14:53,793:INFO:Linear Discriminant Analysis Imported successfully
2022-11-15 23:14:53,803:INFO:Starting cross validation
2022-11-15 23:14:53,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:53,916:INFO:Calculating mean and std
2022-11-15 23:14:53,919:INFO:Creating metrics dataframe
2022-11-15 23:14:53,923:INFO:Uploading results into container
2022-11-15 23:14:53,923:INFO:Uploading model into container now
2022-11-15 23:14:53,924:INFO:master_model_container: 11
2022-11-15 23:14:53,924:INFO:display_container: 2
2022-11-15 23:14:53,924:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-15 23:14:53,924:INFO:create_model() successfully completed......................................
2022-11-15 23:14:54,169:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:54,169:INFO:Creating metrics dataframe
2022-11-15 23:14:54,180:INFO:Initializing Extra Trees Classifier
2022-11-15 23:14:54,181:INFO:Total runtime is 0.09937713543574014 minutes
2022-11-15 23:14:54,184:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:54,185:INFO:Initializing create_model()
2022-11-15 23:14:54,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:54,185:INFO:Checking exceptions
2022-11-15 23:14:54,187:INFO:Importing libraries
2022-11-15 23:14:54,187:INFO:Copying training dataset
2022-11-15 23:14:54,191:INFO:Defining folds
2022-11-15 23:14:54,192:INFO:Declaring metric variables
2022-11-15 23:14:54,196:INFO:Importing untrained model
2022-11-15 23:14:54,202:INFO:Extra Trees Classifier Imported successfully
2022-11-15 23:14:54,213:INFO:Starting cross validation
2022-11-15 23:14:54,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:54,776:INFO:Calculating mean and std
2022-11-15 23:14:54,779:INFO:Creating metrics dataframe
2022-11-15 23:14:54,783:INFO:Uploading results into container
2022-11-15 23:14:54,784:INFO:Uploading model into container now
2022-11-15 23:14:54,784:INFO:master_model_container: 12
2022-11-15 23:14:54,784:INFO:display_container: 2
2022-11-15 23:14:54,785:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1470, verbose=0, warm_start=False)
2022-11-15 23:14:54,785:INFO:create_model() successfully completed......................................
2022-11-15 23:14:55,023:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:55,023:INFO:Creating metrics dataframe
2022-11-15 23:14:55,034:INFO:Initializing Extreme Gradient Boosting
2022-11-15 23:14:55,035:INFO:Total runtime is 0.11360648870468139 minutes
2022-11-15 23:14:55,038:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:55,040:INFO:Initializing create_model()
2022-11-15 23:14:55,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:55,040:INFO:Checking exceptions
2022-11-15 23:14:55,042:INFO:Importing libraries
2022-11-15 23:14:55,042:INFO:Copying training dataset
2022-11-15 23:14:55,045:INFO:Defining folds
2022-11-15 23:14:55,045:INFO:Declaring metric variables
2022-11-15 23:14:55,049:INFO:Importing untrained model
2022-11-15 23:14:55,055:INFO:Extreme Gradient Boosting Imported successfully
2022-11-15 23:14:55,067:INFO:Starting cross validation
2022-11-15 23:14:55,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:55,272:INFO:Calculating mean and std
2022-11-15 23:14:55,274:INFO:Creating metrics dataframe
2022-11-15 23:14:55,276:INFO:Uploading results into container
2022-11-15 23:14:55,278:INFO:Uploading model into container now
2022-11-15 23:14:55,278:INFO:master_model_container: 13
2022-11-15 23:14:55,278:INFO:display_container: 2
2022-11-15 23:14:55,279:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2022-11-15 23:14:55,279:INFO:create_model() successfully completed......................................
2022-11-15 23:14:55,507:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:55,508:INFO:Creating metrics dataframe
2022-11-15 23:14:55,521:INFO:Initializing Light Gradient Boosting Machine
2022-11-15 23:14:55,521:INFO:Total runtime is 0.12170670827229817 minutes
2022-11-15 23:14:55,526:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:55,527:INFO:Initializing create_model()
2022-11-15 23:14:55,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:55,527:INFO:Checking exceptions
2022-11-15 23:14:55,528:INFO:Importing libraries
2022-11-15 23:14:55,529:INFO:Copying training dataset
2022-11-15 23:14:55,532:INFO:Defining folds
2022-11-15 23:14:55,532:INFO:Declaring metric variables
2022-11-15 23:14:55,537:INFO:Importing untrained model
2022-11-15 23:14:55,543:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-15 23:14:55,554:INFO:Starting cross validation
2022-11-15 23:14:55,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:55,713:INFO:Calculating mean and std
2022-11-15 23:14:55,714:INFO:Creating metrics dataframe
2022-11-15 23:14:55,718:INFO:Uploading results into container
2022-11-15 23:14:55,719:INFO:Uploading model into container now
2022-11-15 23:14:55,720:INFO:master_model_container: 14
2022-11-15 23:14:55,720:INFO:display_container: 2
2022-11-15 23:14:55,721:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1470, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-15 23:14:55,721:INFO:create_model() successfully completed......................................
2022-11-15 23:14:55,970:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:55,970:INFO:Creating metrics dataframe
2022-11-15 23:14:55,984:INFO:Initializing Dummy Classifier
2022-11-15 23:14:55,984:INFO:Total runtime is 0.12942405541737872 minutes
2022-11-15 23:14:55,990:INFO:SubProcess create_model() called ==================================
2022-11-15 23:14:55,990:INFO:Initializing create_model()
2022-11-15 23:14:55,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C473ACEEB0>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:55,990:INFO:Checking exceptions
2022-11-15 23:14:55,992:INFO:Importing libraries
2022-11-15 23:14:55,992:INFO:Copying training dataset
2022-11-15 23:14:55,996:INFO:Defining folds
2022-11-15 23:14:55,996:INFO:Declaring metric variables
2022-11-15 23:14:56,003:INFO:Importing untrained model
2022-11-15 23:14:56,013:INFO:Dummy Classifier Imported successfully
2022-11-15 23:14:56,026:INFO:Starting cross validation
2022-11-15 23:14:56,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:14:56,095:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,101:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,111:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,119:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,119:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,123:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,130:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,141:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,144:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,146:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:14:56,149:INFO:Calculating mean and std
2022-11-15 23:14:56,152:INFO:Creating metrics dataframe
2022-11-15 23:14:56,156:INFO:Uploading results into container
2022-11-15 23:14:56,157:INFO:Uploading model into container now
2022-11-15 23:14:56,158:INFO:master_model_container: 15
2022-11-15 23:14:56,158:INFO:display_container: 2
2022-11-15 23:14:56,158:INFO:DummyClassifier(constant=None, random_state=1470, strategy='prior')
2022-11-15 23:14:56,158:INFO:create_model() successfully completed......................................
2022-11-15 23:14:56,387:INFO:SubProcess create_model() end ==================================
2022-11-15 23:14:56,387:INFO:Creating metrics dataframe
2022-11-15 23:14:56,412:INFO:Initializing create_model()
2022-11-15 23:14:56,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4760F85E0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:14:56,413:INFO:Checking exceptions
2022-11-15 23:14:56,417:INFO:Importing libraries
2022-11-15 23:14:56,417:INFO:Copying training dataset
2022-11-15 23:14:56,421:INFO:Defining folds
2022-11-15 23:14:56,421:INFO:Declaring metric variables
2022-11-15 23:14:56,422:INFO:Importing untrained model
2022-11-15 23:14:56,422:INFO:Declaring custom model
2022-11-15 23:14:56,422:INFO:Logistic Regression Imported successfully
2022-11-15 23:14:56,423:INFO:Cross validation set to False
2022-11-15 23:14:56,423:INFO:Fitting Model
2022-11-15 23:14:56,478:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:14:56,478:INFO:create_model() successfully completed......................................
2022-11-15 23:14:56,762:INFO:master_model_container: 15
2022-11-15 23:14:56,763:INFO:display_container: 2
2022-11-15 23:14:56,763:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1470, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:14:56,763:INFO:compare_models() successfully completed......................................
2022-11-15 23:18:15,989:INFO:PyCaret ClassificationExperiment
2022-11-15 23:18:15,989:INFO:Logging name: clf-default-name
2022-11-15 23:18:15,989:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2022-11-15 23:18:15,989:INFO:version 3.0.0.rc4
2022-11-15 23:18:15,989:INFO:Initializing setup()
2022-11-15 23:18:15,989:INFO:self.USI: b278
2022-11-15 23:18:15,990:INFO:self.variable_keys: {'n_jobs_param', 'master_model_container', 'X_train', 'variable_keys', '_all_models', '_gpu_n_jobs_param', 'exp_id', 'seed', 'logging_param', '_is_multiclass', 'USI', 'display_container', 'y_train', 'fold_generator', '_ml_usecase', 'exp_name_log', '_all_metrics', 'data', 'idx', '_available_plots', 'X', 'gpu_param', 'fix_imbalance', 'fold_groups_param', 'fold_shuffle_param', 'html_param', 'y_test', 'memory', 'y', 'target_param', '_all_models_internal', 'X_test', 'pipeline', 'log_plots_param'}
2022-11-15 23:18:15,990:INFO:Checking environment
2022-11-15 23:18:15,990:INFO:python_version: 3.9.0
2022-11-15 23:18:15,990:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2022-11-15 23:18:15,990:INFO:machine: AMD64
2022-11-15 23:18:15,990:INFO:platform: Windows-10-10.0.22621-SP0
2022-11-15 23:18:15,990:INFO:Memory: svmem(total=7968530432, available=1347817472, percent=83.1, used=6620712960, free=1347817472)
2022-11-15 23:18:15,990:INFO:Physical Core: 6
2022-11-15 23:18:15,990:INFO:Logical Core: 12
2022-11-15 23:18:15,990:INFO:Checking libraries
2022-11-15 23:18:15,990:INFO:System:
2022-11-15 23:18:15,990:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2022-11-15 23:18:15,990:INFO:executable: C:\Users\Sirisha\anaconda3\envs\gs\python.exe
2022-11-15 23:18:15,990:INFO:   machine: Windows-10-10.0.22621-SP0
2022-11-15 23:18:15,990:INFO:PyCaret required dependencies:
2022-11-15 23:18:15,990:INFO:                 pip: 22.1.2
2022-11-15 23:18:15,990:INFO:          setuptools: 60.10.0
2022-11-15 23:18:15,991:INFO:             pycaret: 3.0.0rc4
2022-11-15 23:18:15,991:INFO:             IPython: 8.5.0
2022-11-15 23:18:15,991:INFO:          ipywidgets: 8.0.2
2022-11-15 23:18:15,991:INFO:                tqdm: 4.64.1
2022-11-15 23:18:15,991:INFO:               numpy: 1.22.4
2022-11-15 23:18:15,991:INFO:              pandas: 1.4.4
2022-11-15 23:18:15,991:INFO:              jinja2: 3.1.2
2022-11-15 23:18:15,991:INFO:               scipy: 1.8.1
2022-11-15 23:18:15,991:INFO:              joblib: 1.2.0
2022-11-15 23:18:15,991:INFO:             sklearn: 1.1.2
2022-11-15 23:18:15,991:INFO:                pyod: 1.0.6
2022-11-15 23:18:15,991:INFO:            imblearn: 0.9.1
2022-11-15 23:18:15,991:INFO:   category_encoders: 2.5.1.post0
2022-11-15 23:18:15,991:INFO:            lightgbm: 3.3.3
2022-11-15 23:18:15,991:INFO:               numba: 0.55.2
2022-11-15 23:18:15,991:INFO:            requests: 2.28.1
2022-11-15 23:18:15,991:INFO:          matplotlib: 3.6.0
2022-11-15 23:18:15,991:INFO:          scikitplot: 0.3.7
2022-11-15 23:18:15,991:INFO:         yellowbrick: 1.5
2022-11-15 23:18:15,991:INFO:              plotly: 5.11.0
2022-11-15 23:18:15,991:INFO:             kaleido: 0.2.1
2022-11-15 23:18:15,991:INFO:         statsmodels: 0.13.5
2022-11-15 23:18:15,991:INFO:              sktime: 0.13.4
2022-11-15 23:18:15,991:INFO:               tbats: 1.1.1
2022-11-15 23:18:15,991:INFO:            pmdarima: 1.8.5
2022-11-15 23:18:15,991:INFO:              psutil: 5.9.2
2022-11-15 23:18:15,991:INFO:PyCaret optional dependencies:
2022-11-15 23:18:15,991:INFO:                shap: 0.41.0
2022-11-15 23:18:15,991:INFO:           interpret: 0.2.7
2022-11-15 23:18:15,991:INFO:                umap: Not installed
2022-11-15 23:18:15,991:INFO:    pandas_profiling: Not installed
2022-11-15 23:18:15,991:INFO:  explainerdashboard: Not installed
2022-11-15 23:18:15,992:INFO:             autoviz: Not installed
2022-11-15 23:18:15,992:INFO:           fairlearn: Not installed
2022-11-15 23:18:15,992:INFO:             xgboost: 1.7.1
2022-11-15 23:18:15,992:INFO:            catboost: Not installed
2022-11-15 23:18:15,992:INFO:              kmodes: Not installed
2022-11-15 23:18:15,992:INFO:             mlxtend: Not installed
2022-11-15 23:18:15,992:INFO:       statsforecast: Not installed
2022-11-15 23:18:15,992:INFO:        tune_sklearn: Not installed
2022-11-15 23:18:15,992:INFO:                 ray: Not installed
2022-11-15 23:18:15,992:INFO:            hyperopt: Not installed
2022-11-15 23:18:15,992:INFO:              optuna: Not installed
2022-11-15 23:18:15,992:INFO:               skopt: Not installed
2022-11-15 23:18:15,992:INFO:              mlflow: Not installed
2022-11-15 23:18:15,992:INFO:              gradio: Not installed
2022-11-15 23:18:15,992:INFO:             fastapi: Not installed
2022-11-15 23:18:15,992:INFO:             uvicorn: Not installed
2022-11-15 23:18:15,992:INFO:              m2cgen: Not installed
2022-11-15 23:18:15,992:INFO:           evidently: Not installed
2022-11-15 23:18:15,992:INFO:                nltk: 3.7
2022-11-15 23:18:15,992:INFO:            pyLDAvis: Not installed
2022-11-15 23:18:15,992:INFO:              gensim: Not installed
2022-11-15 23:18:15,992:INFO:               spacy: Not installed
2022-11-15 23:18:15,992:INFO:           wordcloud: 1.8.2.2
2022-11-15 23:18:15,992:INFO:            textblob: Not installed
2022-11-15 23:18:15,992:INFO:               fugue: Not installed
2022-11-15 23:18:15,992:INFO:           streamlit: Not installed
2022-11-15 23:18:15,992:INFO:             prophet: Not installed
2022-11-15 23:18:15,992:INFO:None
2022-11-15 23:18:15,993:INFO:Set up data.
2022-11-15 23:18:16,000:INFO:Set up train/test split.
2022-11-15 23:18:16,006:INFO:Set up index.
2022-11-15 23:18:16,007:INFO:Assigning column types.
2022-11-15 23:18:16,011:INFO:Set up folding strategy.
2022-11-15 23:18:16,011:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-11-15 23:18:16,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:18:16,060:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:18:16,091:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:18:16,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:18:16,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-11-15 23:18:16,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:18:16,172:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:18:16,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:18:16,176:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-11-15 23:18:16,225:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:18:16,256:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:18:16,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:18:16,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2022-11-15 23:18:16,337:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:18:16,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:18:16,340:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2022-11-15 23:18:16,419:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:18:16,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:18:16,502:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:18:16,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:18:16,506:INFO:Preparing preprocessing pipeline...
2022-11-15 23:18:16,506:INFO:Set up label encoding.
2022-11-15 23:18:16,507:INFO:Set up simple imputation.
2022-11-15 23:18:16,507:INFO:Set up variance threshold.
2022-11-15 23:18:16,574:INFO:Finished creating preprocessing pipeline.
2022-11-15 23:18:16,578:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\Sirisha\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['N', 'P', 'K', 'temperature',
                                             'humidity', 'ph', 'rainfall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value='constant',
                                                              missing_values=nan,
                                                              strategy='constant',
                                                              verbose='deprecated'))),
                ('low_variance',
                 TransformerWrapper(exclude=[], include=None,
                                    transformer=VarianceThreshold(threshold=0)))],
         verbose=False)
2022-11-15 23:18:16,579:INFO:Creating final display dataframe.
2022-11-15 23:18:16,957:INFO:Setup display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13       Low variance threshold   
14               Fold Generator   
15                  Fold Number   
16                     CPU Jobs   
17                      Use GPU   
18               Log Experiment   
19              Experiment Name   
20                          USI   

                                                Value  
0                                                5680  
1                                               label  
2                                          Multiclass  
3   apple: 0, banana: 1, blackgram: 2, chickpea: 3...  
4                                           (2200, 8)  
5                                           (2200, 8)  
6                                           (1539, 8)  
7                                            (661, 8)  
8                                                   7  
9                                                True  
10                                             simple  
11                                               mean  
12                                           constant  
13                                                  0  
14                                    StratifiedKFold  
15                                                 10  
16                                                 -1  
17                                              False  
18                                              False  
19                                   clf-default-name  
20                                               b278  
2022-11-15 23:18:17,058:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:18:17,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:18:17,146:INFO:Soft dependency imported: xgboost: 1.7.1
2022-11-15 23:18:17,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-11-15 23:18:17,159:INFO:setup() successfully completed in 1.17s...............
2022-11-15 23:18:20,654:INFO:Initializing compare_models()
2022-11-15 23:18:20,654:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2022-11-15 23:18:20,655:INFO:Checking exceptions
2022-11-15 23:18:20,661:INFO:Preparing display monitor
2022-11-15 23:18:20,712:INFO:Initializing Logistic Regression
2022-11-15 23:18:20,713:INFO:Total runtime is 1.666545867919922e-05 minutes
2022-11-15 23:18:20,720:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:20,720:INFO:Initializing create_model()
2022-11-15 23:18:20,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:20,720:INFO:Checking exceptions
2022-11-15 23:18:20,722:INFO:Importing libraries
2022-11-15 23:18:20,722:INFO:Copying training dataset
2022-11-15 23:18:20,728:INFO:Defining folds
2022-11-15 23:18:20,728:INFO:Declaring metric variables
2022-11-15 23:18:20,734:INFO:Importing untrained model
2022-11-15 23:18:20,740:INFO:Logistic Regression Imported successfully
2022-11-15 23:18:20,754:INFO:Starting cross validation
2022-11-15 23:18:20,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:24,622:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:24,623:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:24,638:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:24,663:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:24,664:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:24,745:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:24,792:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:24,807:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:24,845:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:25,015:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,018:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,023:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,034:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,035:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,037:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,037:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,038:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,039:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,041:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,041:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,041:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,044:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,044:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,046:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,067:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2022-11-15 23:18:25,073:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,075:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,077:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,093:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,095:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,096:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,100:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,102:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,104:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,115:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,117:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,118:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,190:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,191:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,193:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,198:INFO:Calculating mean and std
2022-11-15 23:18:25,201:INFO:Creating metrics dataframe
2022-11-15 23:18:25,204:INFO:Uploading results into container
2022-11-15 23:18:25,205:INFO:Uploading model into container now
2022-11-15 23:18:25,205:INFO:master_model_container: 1
2022-11-15 23:18:25,205:INFO:display_container: 2
2022-11-15 23:18:25,206:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5680, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2022-11-15 23:18:25,206:INFO:create_model() successfully completed......................................
2022-11-15 23:18:25,465:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:25,466:INFO:Creating metrics dataframe
2022-11-15 23:18:25,477:INFO:Initializing K Neighbors Classifier
2022-11-15 23:18:25,478:INFO:Total runtime is 0.07943232854207358 minutes
2022-11-15 23:18:25,483:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:25,483:INFO:Initializing create_model()
2022-11-15 23:18:25,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:25,483:INFO:Checking exceptions
2022-11-15 23:18:25,485:INFO:Importing libraries
2022-11-15 23:18:25,485:INFO:Copying training dataset
2022-11-15 23:18:25,490:INFO:Defining folds
2022-11-15 23:18:25,490:INFO:Declaring metric variables
2022-11-15 23:18:25,497:INFO:Importing untrained model
2022-11-15 23:18:25,505:INFO:K Neighbors Classifier Imported successfully
2022-11-15 23:18:25,519:INFO:Starting cross validation
2022-11-15 23:18:25,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:25,918:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,922:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,927:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,928:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,928:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,932:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,934:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,936:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,941:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,956:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,958:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,960:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,964:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,969:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,974:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,975:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,975:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,978:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,978:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,982:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,983:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,986:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,989:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,989:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,992:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,992:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,994:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,994:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,996:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:25,999:INFO:Calculating mean and std
2022-11-15 23:18:26,003:INFO:Creating metrics dataframe
2022-11-15 23:18:26,006:INFO:Uploading results into container
2022-11-15 23:18:26,007:INFO:Uploading model into container now
2022-11-15 23:18:26,008:INFO:master_model_container: 2
2022-11-15 23:18:26,008:INFO:display_container: 2
2022-11-15 23:18:26,009:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2022-11-15 23:18:26,009:INFO:create_model() successfully completed......................................
2022-11-15 23:18:26,294:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:26,294:INFO:Creating metrics dataframe
2022-11-15 23:18:26,304:INFO:Initializing Naive Bayes
2022-11-15 23:18:26,305:INFO:Total runtime is 0.09321475426355999 minutes
2022-11-15 23:18:26,310:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:26,310:INFO:Initializing create_model()
2022-11-15 23:18:26,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:26,310:INFO:Checking exceptions
2022-11-15 23:18:26,312:INFO:Importing libraries
2022-11-15 23:18:26,313:INFO:Copying training dataset
2022-11-15 23:18:26,317:INFO:Defining folds
2022-11-15 23:18:26,317:INFO:Declaring metric variables
2022-11-15 23:18:26,322:INFO:Importing untrained model
2022-11-15 23:18:26,328:INFO:Naive Bayes Imported successfully
2022-11-15 23:18:26,338:INFO:Starting cross validation
2022-11-15 23:18:26,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:26,460:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,464:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,470:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,471:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,474:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,476:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,478:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,480:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,482:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,498:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,502:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,505:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,506:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,508:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,509:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,512:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,513:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,514:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,515:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,517:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,526:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,531:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,533:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,533:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,534:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,536:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,537:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,543:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:26,548:INFO:Calculating mean and std
2022-11-15 23:18:26,554:INFO:Creating metrics dataframe
2022-11-15 23:18:26,561:INFO:Uploading results into container
2022-11-15 23:18:26,562:INFO:Uploading model into container now
2022-11-15 23:18:26,564:INFO:master_model_container: 3
2022-11-15 23:18:26,564:INFO:display_container: 2
2022-11-15 23:18:26,565:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:18:26,565:INFO:create_model() successfully completed......................................
2022-11-15 23:18:26,991:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:26,992:INFO:Creating metrics dataframe
2022-11-15 23:18:27,009:INFO:Initializing Decision Tree Classifier
2022-11-15 23:18:27,010:INFO:Total runtime is 0.10496264298756919 minutes
2022-11-15 23:18:27,014:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:27,015:INFO:Initializing create_model()
2022-11-15 23:18:27,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:27,015:INFO:Checking exceptions
2022-11-15 23:18:27,018:INFO:Importing libraries
2022-11-15 23:18:27,018:INFO:Copying training dataset
2022-11-15 23:18:27,023:INFO:Defining folds
2022-11-15 23:18:27,024:INFO:Declaring metric variables
2022-11-15 23:18:27,033:INFO:Importing untrained model
2022-11-15 23:18:27,046:INFO:Decision Tree Classifier Imported successfully
2022-11-15 23:18:27,059:INFO:Starting cross validation
2022-11-15 23:18:27,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:27,182:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,186:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,192:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,192:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,198:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,202:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,205:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,208:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,213:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,217:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,218:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,221:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,221:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,224:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,225:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,228:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,232:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,232:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,234:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,235:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,236:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,237:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,238:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,240:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,240:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,241:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,242:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,243:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,243:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,246:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,252:INFO:Calculating mean and std
2022-11-15 23:18:27,255:INFO:Creating metrics dataframe
2022-11-15 23:18:27,261:INFO:Uploading results into container
2022-11-15 23:18:27,262:INFO:Uploading model into container now
2022-11-15 23:18:27,262:INFO:master_model_container: 4
2022-11-15 23:18:27,263:INFO:display_container: 2
2022-11-15 23:18:27,263:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5680, splitter='best')
2022-11-15 23:18:27,263:INFO:create_model() successfully completed......................................
2022-11-15 23:18:27,531:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:27,532:INFO:Creating metrics dataframe
2022-11-15 23:18:27,543:INFO:Initializing SVM - Linear Kernel
2022-11-15 23:18:27,543:INFO:Total runtime is 0.11385138432184856 minutes
2022-11-15 23:18:27,547:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:27,548:INFO:Initializing create_model()
2022-11-15 23:18:27,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:27,548:INFO:Checking exceptions
2022-11-15 23:18:27,551:INFO:Importing libraries
2022-11-15 23:18:27,551:INFO:Copying training dataset
2022-11-15 23:18:27,555:INFO:Defining folds
2022-11-15 23:18:27,555:INFO:Declaring metric variables
2022-11-15 23:18:27,562:INFO:Importing untrained model
2022-11-15 23:18:27,568:INFO:SVM - Linear Kernel Imported successfully
2022-11-15 23:18:27,578:INFO:Starting cross validation
2022-11-15 23:18:27,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:27,686:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,700:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,702:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,704:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:27,705:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,708:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,712:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,713:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,714:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,720:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:27,725:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,727:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,730:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:27,731:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,742:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,745:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,747:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

g_start, len(result))

2022-11-15 23:18:27,749:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,750:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:27,752:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,753:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,755:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,760:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,762:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:27,764:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,781:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,782:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,784:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:27,786:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,788:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,790:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,791:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:27,793:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,796:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,798:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,799:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:27,804:INFO:Calculating mean and std
2022-11-15 23:18:27,806:INFO:Creating metrics dataframe
2022-11-15 23:18:27,809:INFO:Uploading results into container
2022-11-15 23:18:27,810:INFO:Uploading model into container now
2022-11-15 23:18:27,811:INFO:master_model_container: 5
2022-11-15 23:18:27,811:INFO:display_container: 2
2022-11-15 23:18:27,811:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5680, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2022-11-15 23:18:27,811:INFO:create_model() successfully completed......................................
2022-11-15 23:18:28,121:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:28,121:INFO:Creating metrics dataframe
2022-11-15 23:18:28,131:INFO:Initializing Ridge Classifier
2022-11-15 23:18:28,131:INFO:Total runtime is 0.12365195353825888 minutes
2022-11-15 23:18:28,137:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:28,137:INFO:Initializing create_model()
2022-11-15 23:18:28,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:28,137:INFO:Checking exceptions
2022-11-15 23:18:28,141:INFO:Importing libraries
2022-11-15 23:18:28,142:INFO:Copying training dataset
2022-11-15 23:18:28,145:INFO:Defining folds
2022-11-15 23:18:28,146:INFO:Declaring metric variables
2022-11-15 23:18:28,152:INFO:Importing untrained model
2022-11-15 23:18:28,158:INFO:Ridge Classifier Imported successfully
2022-11-15 23:18:28,170:INFO:Starting cross validation
2022-11-15 23:18:28,171:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:28,237:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,241:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,242:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,243:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,246:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,248:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,252:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,252:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,255:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,255:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,258:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,260:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,264:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,270:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,270:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,272:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,274:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,274:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,276:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,278:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,280:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,283:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,284:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,285:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,287:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,290:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,290:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,291:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,295:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,296:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,298:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,298:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,300:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,300:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,300:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,300:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,300:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,301:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:28,302:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:28,306:INFO:Calculating mean and std
2022-11-15 23:18:28,308:INFO:Creating metrics dataframe
2022-11-15 23:18:28,311:INFO:Uploading results into container
2022-11-15 23:18:28,313:INFO:Uploading model into container now
2022-11-15 23:18:28,313:INFO:master_model_container: 6
2022-11-15 23:18:28,314:INFO:display_container: 2
2022-11-15 23:18:28,314:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=5680, solver='auto', tol=0.001)
2022-11-15 23:18:28,314:INFO:create_model() successfully completed......................................
2022-11-15 23:18:28,557:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:28,557:INFO:Creating metrics dataframe
2022-11-15 23:18:28,570:INFO:Initializing Random Forest Classifier
2022-11-15 23:18:28,571:INFO:Total runtime is 0.1309821605682373 minutes
2022-11-15 23:18:28,575:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:28,575:INFO:Initializing create_model()
2022-11-15 23:18:28,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:28,576:INFO:Checking exceptions
2022-11-15 23:18:28,580:INFO:Importing libraries
2022-11-15 23:18:28,580:INFO:Copying training dataset
2022-11-15 23:18:28,584:INFO:Defining folds
2022-11-15 23:18:28,585:INFO:Declaring metric variables
2022-11-15 23:18:28,589:INFO:Importing untrained model
2022-11-15 23:18:28,595:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:18:28,607:INFO:Starting cross validation
2022-11-15 23:18:28,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:29,313:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,317:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,317:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,320:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,329:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,353:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,366:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,382:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,401:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,454:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,458:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,462:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,471:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,473:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,477:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,478:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,480:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,483:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,496:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,500:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,504:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,628:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,631:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,635:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,642:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,643:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,645:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,705:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,706:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,707:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:29,710:INFO:Calculating mean and std
2022-11-15 23:18:29,713:INFO:Creating metrics dataframe
2022-11-15 23:18:29,717:INFO:Uploading results into container
2022-11-15 23:18:29,718:INFO:Uploading model into container now
2022-11-15 23:18:29,718:INFO:master_model_container: 7
2022-11-15 23:18:29,718:INFO:display_container: 2
2022-11-15 23:18:29,718:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5680, verbose=0, warm_start=False)
2022-11-15 23:18:29,718:INFO:create_model() successfully completed......................................
2022-11-15 23:18:30,086:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:30,087:INFO:Creating metrics dataframe
2022-11-15 23:18:30,100:INFO:Initializing Quadratic Discriminant Analysis
2022-11-15 23:18:30,100:INFO:Total runtime is 0.1564621051152547 minutes
2022-11-15 23:18:30,103:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:30,104:INFO:Initializing create_model()
2022-11-15 23:18:30,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:30,104:INFO:Checking exceptions
2022-11-15 23:18:30,107:INFO:Importing libraries
2022-11-15 23:18:30,107:INFO:Copying training dataset
2022-11-15 23:18:30,110:INFO:Defining folds
2022-11-15 23:18:30,110:INFO:Declaring metric variables
2022-11-15 23:18:30,115:INFO:Importing untrained model
2022-11-15 23:18:30,120:INFO:Quadratic Discriminant Analysis Imported successfully
2022-11-15 23:18:30,129:INFO:Starting cross validation
2022-11-15 23:18:30,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:30,252:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,256:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,259:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,260:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,263:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,268:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,272:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,276:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,278:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,282:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,283:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,285:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,287:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,288:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,289:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,293:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,294:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,300:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,304:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,307:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,308:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,308:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,310:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,311:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,312:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,314:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,321:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,322:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,324:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:30,329:INFO:Calculating mean and std
2022-11-15 23:18:30,331:INFO:Creating metrics dataframe
2022-11-15 23:18:30,337:INFO:Uploading results into container
2022-11-15 23:18:30,338:INFO:Uploading model into container now
2022-11-15 23:18:30,338:INFO:master_model_container: 8
2022-11-15 23:18:30,339:INFO:display_container: 2
2022-11-15 23:18:30,339:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2022-11-15 23:18:30,339:INFO:create_model() successfully completed......................................
2022-11-15 23:18:30,825:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:30,825:INFO:Creating metrics dataframe
2022-11-15 23:18:30,837:INFO:Initializing Ada Boost Classifier
2022-11-15 23:18:30,837:INFO:Total runtime is 0.16875112056732178 minutes
2022-11-15 23:18:30,845:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:30,845:INFO:Initializing create_model()
2022-11-15 23:18:30,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:30,846:INFO:Checking exceptions
2022-11-15 23:18:30,848:INFO:Importing libraries
2022-11-15 23:18:30,848:INFO:Copying training dataset
2022-11-15 23:18:30,852:INFO:Defining folds
2022-11-15 23:18:30,853:INFO:Declaring metric variables
2022-11-15 23:18:30,858:INFO:Importing untrained model
2022-11-15 23:18:30,864:INFO:Ada Boost Classifier Imported successfully
2022-11-15 23:18:30,878:INFO:Starting cross validation
2022-11-15 23:18:30,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:31,642:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,647:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,647:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,649:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,651:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,652:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,652:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,653:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,654:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,656:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,656:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,657:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,658:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,658:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,661:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,663:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,668:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,671:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,673:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,675:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,675:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,676:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,677:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,678:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,678:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,679:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,679:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,679:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,685:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,686:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,687:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,688:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,689:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,692:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,692:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,692:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,693:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,694:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,695:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:31,696:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:31,700:INFO:Calculating mean and std
2022-11-15 23:18:31,702:INFO:Creating metrics dataframe
2022-11-15 23:18:31,706:INFO:Uploading results into container
2022-11-15 23:18:31,706:INFO:Uploading model into container now
2022-11-15 23:18:31,706:INFO:master_model_container: 9
2022-11-15 23:18:31,707:INFO:display_container: 2
2022-11-15 23:18:31,707:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5680)
2022-11-15 23:18:31,707:INFO:create_model() successfully completed......................................
2022-11-15 23:18:31,983:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:31,983:INFO:Creating metrics dataframe
2022-11-15 23:18:31,995:INFO:Initializing Gradient Boosting Classifier
2022-11-15 23:18:31,995:INFO:Total runtime is 0.1880536437034607 minutes
2022-11-15 23:18:31,999:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:32,000:INFO:Initializing create_model()
2022-11-15 23:18:32,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:32,000:INFO:Checking exceptions
2022-11-15 23:18:32,002:INFO:Importing libraries
2022-11-15 23:18:32,002:INFO:Copying training dataset
2022-11-15 23:18:32,005:INFO:Defining folds
2022-11-15 23:18:32,006:INFO:Declaring metric variables
2022-11-15 23:18:32,011:INFO:Importing untrained model
2022-11-15 23:18:32,016:INFO:Gradient Boosting Classifier Imported successfully
2022-11-15 23:18:32,026:INFO:Starting cross validation
2022-11-15 23:18:32,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:45,899:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:45,901:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:45,905:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:45,923:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:45,927:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:45,930:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,006:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,009:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,012:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,018:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,021:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,024:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,036:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,040:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,040:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,042:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,042:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,045:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,046:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,048:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,050:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,109:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,111:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,113:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,120:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,122:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,123:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,297:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,301:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,303:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,307:INFO:Calculating mean and std
2022-11-15 23:18:46,309:INFO:Creating metrics dataframe
2022-11-15 23:18:46,315:INFO:Uploading results into container
2022-11-15 23:18:46,316:INFO:Uploading model into container now
2022-11-15 23:18:46,317:INFO:master_model_container: 10
2022-11-15 23:18:46,317:INFO:display_container: 2
2022-11-15 23:18:46,317:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5680, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2022-11-15 23:18:46,318:INFO:create_model() successfully completed......................................
2022-11-15 23:18:46,680:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:46,680:INFO:Creating metrics dataframe
2022-11-15 23:18:46,692:INFO:Initializing Linear Discriminant Analysis
2022-11-15 23:18:46,692:INFO:Total runtime is 0.43300404151280725 minutes
2022-11-15 23:18:46,698:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:46,699:INFO:Initializing create_model()
2022-11-15 23:18:46,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:46,699:INFO:Checking exceptions
2022-11-15 23:18:46,701:INFO:Importing libraries
2022-11-15 23:18:46,702:INFO:Copying training dataset
2022-11-15 23:18:46,706:INFO:Defining folds
2022-11-15 23:18:46,706:INFO:Declaring metric variables
2022-11-15 23:18:46,713:INFO:Importing untrained model
2022-11-15 23:18:46,719:INFO:Linear Discriminant Analysis Imported successfully
2022-11-15 23:18:46,727:INFO:Starting cross validation
2022-11-15 23:18:46,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:46,838:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,843:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,848:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,848:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,851:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,854:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,859:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,863:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,863:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,866:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,871:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,871:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,873:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,875:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,879:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,881:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,883:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,883:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,885:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,886:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,887:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,887:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,889:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,891:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,891:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,891:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,892:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,894:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:46,897:INFO:Calculating mean and std
2022-11-15 23:18:46,899:INFO:Creating metrics dataframe
2022-11-15 23:18:46,903:INFO:Uploading results into container
2022-11-15 23:18:46,903:INFO:Uploading model into container now
2022-11-15 23:18:46,904:INFO:master_model_container: 11
2022-11-15 23:18:46,904:INFO:display_container: 2
2022-11-15 23:18:46,905:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2022-11-15 23:18:46,905:INFO:create_model() successfully completed......................................
2022-11-15 23:18:47,137:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:47,138:INFO:Creating metrics dataframe
2022-11-15 23:18:47,149:INFO:Initializing Extra Trees Classifier
2022-11-15 23:18:47,149:INFO:Total runtime is 0.4406174858411154 minutes
2022-11-15 23:18:47,154:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:47,155:INFO:Initializing create_model()
2022-11-15 23:18:47,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:47,155:INFO:Checking exceptions
2022-11-15 23:18:47,156:INFO:Importing libraries
2022-11-15 23:18:47,157:INFO:Copying training dataset
2022-11-15 23:18:47,160:INFO:Defining folds
2022-11-15 23:18:47,160:INFO:Declaring metric variables
2022-11-15 23:18:47,164:INFO:Importing untrained model
2022-11-15 23:18:47,169:INFO:Extra Trees Classifier Imported successfully
2022-11-15 23:18:47,177:INFO:Starting cross validation
2022-11-15 23:18:47,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:47,995:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:47,999:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,001:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,004:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,005:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,008:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,012:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,016:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,024:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,029:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,039:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,074:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,077:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,081:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,089:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,093:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,097:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,101:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,104:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,109:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,119:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,122:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,125:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,157:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,158:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,162:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,170:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,172:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,175:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:48,179:INFO:Calculating mean and std
2022-11-15 23:18:48,181:INFO:Creating metrics dataframe
2022-11-15 23:18:48,185:INFO:Uploading results into container
2022-11-15 23:18:48,186:INFO:Uploading model into container now
2022-11-15 23:18:48,187:INFO:master_model_container: 12
2022-11-15 23:18:48,187:INFO:display_container: 2
2022-11-15 23:18:48,187:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5680, verbose=0, warm_start=False)
2022-11-15 23:18:48,187:INFO:create_model() successfully completed......................................
2022-11-15 23:18:48,436:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:48,436:INFO:Creating metrics dataframe
2022-11-15 23:18:48,449:INFO:Initializing Extreme Gradient Boosting
2022-11-15 23:18:48,449:INFO:Total runtime is 0.46228646437327076 minutes
2022-11-15 23:18:48,454:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:48,454:INFO:Initializing create_model()
2022-11-15 23:18:48,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:48,455:INFO:Checking exceptions
2022-11-15 23:18:48,456:INFO:Importing libraries
2022-11-15 23:18:48,456:INFO:Copying training dataset
2022-11-15 23:18:48,460:INFO:Defining folds
2022-11-15 23:18:48,460:INFO:Declaring metric variables
2022-11-15 23:18:48,466:INFO:Importing untrained model
2022-11-15 23:18:48,471:INFO:Extreme Gradient Boosting Imported successfully
2022-11-15 23:18:48,479:INFO:Starting cross validation
2022-11-15 23:18:48,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:49,754:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,759:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,769:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,782:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,786:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,789:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,796:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,797:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,798:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,799:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,801:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,801:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,802:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,803:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,803:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,804:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,807:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,807:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,810:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,817:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,825:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,827:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,828:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,829:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,830:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,831:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,837:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,839:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,842:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:49,845:INFO:Calculating mean and std
2022-11-15 23:18:49,846:INFO:Creating metrics dataframe
2022-11-15 23:18:49,850:INFO:Uploading results into container
2022-11-15 23:18:49,851:INFO:Uploading model into container now
2022-11-15 23:18:49,851:INFO:master_model_container: 13
2022-11-15 23:18:49,851:INFO:display_container: 2
2022-11-15 23:18:49,852:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2022-11-15 23:18:49,852:INFO:create_model() successfully completed......................................
2022-11-15 23:18:50,110:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:50,111:INFO:Creating metrics dataframe
2022-11-15 23:18:50,127:INFO:Initializing Light Gradient Boosting Machine
2022-11-15 23:18:50,128:INFO:Total runtime is 0.49024014870325733 minutes
2022-11-15 23:18:50,131:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:50,131:INFO:Initializing create_model()
2022-11-15 23:18:50,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:50,132:INFO:Checking exceptions
2022-11-15 23:18:50,134:INFO:Importing libraries
2022-11-15 23:18:50,134:INFO:Copying training dataset
2022-11-15 23:18:50,137:INFO:Defining folds
2022-11-15 23:18:50,139:INFO:Declaring metric variables
2022-11-15 23:18:50,143:INFO:Importing untrained model
2022-11-15 23:18:50,148:INFO:Light Gradient Boosting Machine Imported successfully
2022-11-15 23:18:50,156:INFO:Starting cross validation
2022-11-15 23:18:50,157:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:53,003:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,007:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,008:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,012:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,013:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,015:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,024:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,028:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,032:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,054:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,057:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,059:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,060:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,062:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,066:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,074:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,074:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,077:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,080:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,081:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,085:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,087:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,089:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,097:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,099:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,100:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,101:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,102:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,103:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,107:INFO:Calculating mean and std
2022-11-15 23:18:53,109:INFO:Creating metrics dataframe
2022-11-15 23:18:53,114:INFO:Uploading results into container
2022-11-15 23:18:53,114:INFO:Uploading model into container now
2022-11-15 23:18:53,115:INFO:master_model_container: 14
2022-11-15 23:18:53,115:INFO:display_container: 2
2022-11-15 23:18:53,116:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5680, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2022-11-15 23:18:53,116:INFO:create_model() successfully completed......................................
2022-11-15 23:18:53,373:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:53,373:INFO:Creating metrics dataframe
2022-11-15 23:18:53,387:INFO:Initializing Dummy Classifier
2022-11-15 23:18:53,387:INFO:Total runtime is 0.5445784608523052 minutes
2022-11-15 23:18:53,393:INFO:SubProcess create_model() called ==================================
2022-11-15 23:18:53,394:INFO:Initializing create_model()
2022-11-15 23:18:53,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475CC2580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:53,394:INFO:Checking exceptions
2022-11-15 23:18:53,397:INFO:Importing libraries
2022-11-15 23:18:53,397:INFO:Copying training dataset
2022-11-15 23:18:53,401:INFO:Defining folds
2022-11-15 23:18:53,401:INFO:Declaring metric variables
2022-11-15 23:18:53,406:INFO:Importing untrained model
2022-11-15 23:18:53,411:INFO:Dummy Classifier Imported successfully
2022-11-15 23:18:53,419:INFO:Starting cross validation
2022-11-15 23:18:53,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:18:53,520:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,525:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,527:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,527:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,532:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,533:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,533:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,535:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,535:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,535:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,537:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,538:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,539:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,540:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,541:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,544:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,547:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,549:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,551:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,552:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,553:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,553:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,555:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,555:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,557:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,557:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,559:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,559:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,561:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,562:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,563:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,564:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,567:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,568:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,569:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,569:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,570:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,570:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,571:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2022-11-15 23:18:53,572:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:18:53,575:INFO:Calculating mean and std
2022-11-15 23:18:53,577:INFO:Creating metrics dataframe
2022-11-15 23:18:53,582:INFO:Uploading results into container
2022-11-15 23:18:53,582:INFO:Uploading model into container now
2022-11-15 23:18:53,583:INFO:master_model_container: 15
2022-11-15 23:18:53,583:INFO:display_container: 2
2022-11-15 23:18:53,584:INFO:DummyClassifier(constant=None, random_state=5680, strategy='prior')
2022-11-15 23:18:53,584:INFO:create_model() successfully completed......................................
2022-11-15 23:18:53,816:INFO:SubProcess create_model() end ==================================
2022-11-15 23:18:53,816:INFO:Creating metrics dataframe
2022-11-15 23:18:53,841:INFO:Initializing create_model()
2022-11-15 23:18:53,841:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:18:53,841:INFO:Checking exceptions
2022-11-15 23:18:53,845:INFO:Importing libraries
2022-11-15 23:18:53,845:INFO:Copying training dataset
2022-11-15 23:18:53,848:INFO:Defining folds
2022-11-15 23:18:53,848:INFO:Declaring metric variables
2022-11-15 23:18:53,848:INFO:Importing untrained model
2022-11-15 23:18:53,848:INFO:Declaring custom model
2022-11-15 23:18:53,849:INFO:Naive Bayes Imported successfully
2022-11-15 23:18:53,849:INFO:Cross validation set to False
2022-11-15 23:18:53,850:INFO:Fitting Model
2022-11-15 23:18:53,901:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:18:53,901:INFO:create_model() successfully completed......................................
2022-11-15 23:18:54,186:INFO:master_model_container: 15
2022-11-15 23:18:54,186:INFO:display_container: 2
2022-11-15 23:18:54,186:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:18:54,187:INFO:compare_models() successfully completed......................................
2022-11-15 23:19:57,304:INFO:Initializing create_model()
2022-11-15 23:19:57,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:19:57,304:INFO:Checking exceptions
2022-11-15 23:19:57,343:INFO:Importing libraries
2022-11-15 23:19:57,343:INFO:Copying training dataset
2022-11-15 23:19:57,347:INFO:Defining folds
2022-11-15 23:19:57,347:INFO:Declaring metric variables
2022-11-15 23:19:57,353:INFO:Importing untrained model
2022-11-15 23:19:57,362:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:19:57,375:INFO:Starting cross validation
2022-11-15 23:19:57,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:19:58,077:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,081:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,085:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,093:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,097:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,107:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,128:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,133:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,136:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,139:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,140:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,143:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,149:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,165:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,173:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,182:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,186:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,189:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,212:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,214:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,217:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,232:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,233:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,236:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,316:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,319:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,321:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,345:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,347:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,349:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:19:58,352:INFO:Calculating mean and std
2022-11-15 23:19:58,355:INFO:Creating metrics dataframe
2022-11-15 23:19:58,362:INFO:Finalizing model
2022-11-15 23:19:58,587:INFO:Uploading results into container
2022-11-15 23:19:58,588:INFO:Uploading model into container now
2022-11-15 23:19:58,602:INFO:master_model_container: 16
2022-11-15 23:19:58,602:INFO:display_container: 3
2022-11-15 23:19:58,603:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5680, verbose=0, warm_start=False)
2022-11-15 23:19:58,603:INFO:create_model() successfully completed......................................
2022-11-15 23:22:37,226:INFO:Initializing create_model()
2022-11-15 23:22:37,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:22:37,226:INFO:Checking exceptions
2022-11-15 23:22:37,265:INFO:Importing libraries
2022-11-15 23:22:37,266:INFO:Copying training dataset
2022-11-15 23:22:37,269:INFO:Defining folds
2022-11-15 23:22:37,269:INFO:Declaring metric variables
2022-11-15 23:22:37,277:INFO:Importing untrained model
2022-11-15 23:22:37,282:INFO:Naive Bayes Imported successfully
2022-11-15 23:22:37,294:INFO:Starting cross validation
2022-11-15 23:22:37,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:22:37,407:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,409:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,411:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,414:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,415:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,418:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,421:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,425:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,428:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,430:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,434:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,436:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,437:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,439:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,439:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,440:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,441:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,444:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,444:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,446:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,447:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,449:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,451:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,453:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,457:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,458:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,459:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,461:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,462:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,464:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:22:37,468:INFO:Calculating mean and std
2022-11-15 23:22:37,469:INFO:Creating metrics dataframe
2022-11-15 23:22:37,474:INFO:Finalizing model
2022-11-15 23:22:37,498:INFO:Uploading results into container
2022-11-15 23:22:37,499:INFO:Uploading model into container now
2022-11-15 23:22:37,511:INFO:master_model_container: 17
2022-11-15 23:22:37,511:INFO:display_container: 4
2022-11-15 23:22:37,511:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2022-11-15 23:22:37,511:INFO:create_model() successfully completed......................................
2022-11-15 23:23:22,565:INFO:Initializing create_model()
2022-11-15 23:23:22,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:23:22,565:INFO:Checking exceptions
2022-11-15 23:23:22,600:INFO:Importing libraries
2022-11-15 23:23:22,600:INFO:Copying training dataset
2022-11-15 23:23:22,604:INFO:Defining folds
2022-11-15 23:23:22,604:INFO:Declaring metric variables
2022-11-15 23:23:22,608:INFO:Importing untrained model
2022-11-15 23:23:22,617:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:23:22,631:INFO:Starting cross validation
2022-11-15 23:23:22,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:23:23,346:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,350:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,356:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,362:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,364:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,370:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,470:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,473:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,476:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,478:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,482:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,483:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,483:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,487:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,489:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,491:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,494:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,496:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,497:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,500:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,581:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,585:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,588:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,591:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,593:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,594:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,595:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,596:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,598:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:23,602:INFO:Calculating mean and std
2022-11-15 23:23:23,604:INFO:Creating metrics dataframe
2022-11-15 23:23:23,612:INFO:Finalizing model
2022-11-15 23:23:23,820:INFO:Uploading results into container
2022-11-15 23:23:23,821:INFO:Uploading model into container now
2022-11-15 23:23:23,831:INFO:master_model_container: 18
2022-11-15 23:23:23,832:INFO:display_container: 5
2022-11-15 23:23:23,832:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5680, verbose=0, warm_start=False)
2022-11-15 23:23:23,833:INFO:create_model() successfully completed......................................
2022-11-15 23:23:35,614:INFO:Initializing create_model()
2022-11-15 23:23:35,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:23:35,614:INFO:Checking exceptions
2022-11-15 23:23:35,651:INFO:Importing libraries
2022-11-15 23:23:35,652:INFO:Copying training dataset
2022-11-15 23:23:35,659:INFO:Defining folds
2022-11-15 23:23:35,659:INFO:Declaring metric variables
2022-11-15 23:23:35,664:INFO:Importing untrained model
2022-11-15 23:23:35,671:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:23:35,682:INFO:Starting cross validation
2022-11-15 23:23:35,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:23:36,384:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,386:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,388:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,393:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,397:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,398:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,401:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,405:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,413:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,416:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,424:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,432:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,435:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,439:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,444:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,448:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,452:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,455:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,472:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,475:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,477:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,490:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,493:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,495:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,508:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,511:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,513:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,576:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,578:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,580:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:23:36,583:INFO:Calculating mean and std
2022-11-15 23:23:36,584:INFO:Creating metrics dataframe
2022-11-15 23:23:36,590:INFO:Finalizing model
2022-11-15 23:23:36,793:INFO:Uploading results into container
2022-11-15 23:23:36,794:INFO:Uploading model into container now
2022-11-15 23:23:36,807:INFO:master_model_container: 19
2022-11-15 23:23:36,807:INFO:display_container: 6
2022-11-15 23:23:36,808:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5680, verbose=0, warm_start=False)
2022-11-15 23:23:36,808:INFO:create_model() successfully completed......................................
2022-11-15 23:26:54,895:INFO:Initializing tune_model()
2022-11-15 23:26:54,895:INFO:tune_model(estimator=model_rf, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>)
2022-11-15 23:26:54,896:INFO:Checking exceptions
2022-11-15 23:30:21,247:INFO:Initializing ensemble_model()
2022-11-15 23:30:21,247:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5680, verbose=0, warm_start=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-11-15 23:30:21,247:INFO:Checking exceptions
2022-11-15 23:30:21,282:INFO:Importing libraries
2022-11-15 23:30:21,282:INFO:Copying training dataset
2022-11-15 23:30:21,282:INFO:Checking base model
2022-11-15 23:30:21,283:INFO:Base model : Random Forest Classifier
2022-11-15 23:30:21,292:INFO:Importing untrained ensembler
2022-11-15 23:30:21,292:INFO:Ensemble method set to Bagging
2022-11-15 23:30:21,292:INFO:SubProcess create_model() called ==================================
2022-11-15 23:30:21,293:INFO:Initializing create_model()
2022-11-15 23:30:21,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=BaggingClassifier(base_estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=5680,
                                                        verbose=0,
                                                        warm_start=False),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=5680, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C472B08070>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:30:21,293:INFO:Checking exceptions
2022-11-15 23:30:21,296:INFO:Importing libraries
2022-11-15 23:30:21,296:INFO:Copying training dataset
2022-11-15 23:30:21,302:INFO:Defining folds
2022-11-15 23:30:21,303:INFO:Declaring metric variables
2022-11-15 23:30:21,312:INFO:Importing untrained model
2022-11-15 23:30:21,312:INFO:Declaring custom model
2022-11-15 23:30:21,319:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:30:21,331:INFO:Starting cross validation
2022-11-15 23:30:21,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:30:36,170:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,175:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,178:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,180:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,180:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,181:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,184:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,188:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,189:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,193:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,194:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,196:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,196:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,203:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,213:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,261:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,268:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,273:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,273:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,281:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,363:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,369:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,374:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,377:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,381:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,386:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,667:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,669:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,671:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:30:36,674:INFO:Calculating mean and std
2022-11-15 23:30:36,677:INFO:Creating metrics dataframe
2022-11-15 23:30:36,686:INFO:Finalizing model
2022-11-15 23:30:38,859:INFO:Uploading results into container
2022-11-15 23:30:38,860:INFO:Uploading model into container now
2022-11-15 23:30:38,861:INFO:master_model_container: 20
2022-11-15 23:30:38,861:INFO:display_container: 7
2022-11-15 23:30:38,862:INFO:BaggingClassifier(base_estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=5680,
                                                        verbose=0,
                                                        warm_start=False),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=5680, verbose=0,
                  warm_start=False)
2022-11-15 23:30:38,863:INFO:create_model() successfully completed......................................
2022-11-15 23:30:39,123:INFO:SubProcess create_model() end ==================================
2022-11-15 23:30:39,133:INFO:master_model_container: 20
2022-11-15 23:30:39,134:INFO:display_container: 7
2022-11-15 23:30:39,134:INFO:BaggingClassifier(base_estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight=None,
                                                        criterion='gini',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=5680,
                                                        verbose=0,
                                                        warm_start=False),
                  bootstrap=True, bootstrap_features=False, max_features=1.0,
                  max_samples=1.0, n_estimators=10, n_jobs=None,
                  oob_score=False, random_state=5680, verbose=0,
                  warm_start=False)
2022-11-15 23:30:39,136:INFO:ensemble_model() successfully completed......................................
2022-11-15 23:31:15,952:INFO:Initializing ensemble_model()
2022-11-15 23:31:15,952:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5680, verbose=0, warm_start=False), method=Boosting, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-11-15 23:31:15,952:INFO:Checking exceptions
2022-11-15 23:31:16,290:INFO:Importing libraries
2022-11-15 23:31:16,290:INFO:Copying training dataset
2022-11-15 23:31:16,291:INFO:Checking base model
2022-11-15 23:31:16,291:INFO:Base model : Random Forest Classifier
2022-11-15 23:31:16,299:INFO:Importing untrained ensembler
2022-11-15 23:31:16,299:INFO:Ensemble method set to Boosting
2022-11-15 23:31:16,299:INFO:SubProcess create_model() called ==================================
2022-11-15 23:31:16,300:INFO:Initializing create_model()
2022-11-15 23:31:16,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=AdaBoostClassifier(algorithm='SAMME.R',
                   base_estimator=RandomForestClassifier(bootstrap=True,
                                                         ccp_alpha=0.0,
                                                         class_weight=None,
                                                         criterion='gini',
                                                         max_depth=None,
                                                         max_features='sqrt',
                                                         max_leaf_nodes=None,
                                                         max_samples=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_jobs=-1,
                                                         oob_score=False,
                                                         random_state=5680,
                                                         verbose=0,
                                                         warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=5680), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C475D29580>, model_only=True, return_train_score=False, kwargs={})
2022-11-15 23:31:16,301:INFO:Checking exceptions
2022-11-15 23:31:16,303:INFO:Importing libraries
2022-11-15 23:31:16,303:INFO:Copying training dataset
2022-11-15 23:31:16,306:INFO:Defining folds
2022-11-15 23:31:16,306:INFO:Declaring metric variables
2022-11-15 23:31:16,310:INFO:Importing untrained model
2022-11-15 23:31:16,310:INFO:Declaring custom model
2022-11-15 23:31:16,314:INFO:Random Forest Classifier Imported successfully
2022-11-15 23:31:16,362:INFO:Starting cross validation
2022-11-15 23:31:16,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-11-15 23:31:17,434:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,437:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,441:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,449:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,467:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,475:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,509:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,516:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,527:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,544:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,547:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,551:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,552:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,557:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,557:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,561:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,561:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,565:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,610:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,612:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,614:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,652:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,654:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,656:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,681:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,683:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:17,685:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:19,217:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:19,220:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:19,222:WARNING:C:\Users\Sirisha\anaconda3\envs\gs\lib\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to 'watermelon') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2022-11-15 23:31:19,226:INFO:Calculating mean and std
2022-11-15 23:31:19,228:INFO:Creating metrics dataframe
2022-11-15 23:31:19,234:INFO:Finalizing model
2022-11-15 23:31:19,478:INFO:Uploading results into container
2022-11-15 23:31:19,479:INFO:Uploading model into container now
2022-11-15 23:31:19,479:INFO:master_model_container: 21
2022-11-15 23:31:19,480:INFO:display_container: 8
2022-11-15 23:31:19,481:INFO:AdaBoostClassifier(algorithm='SAMME.R',
                   base_estimator=RandomForestClassifier(bootstrap=True,
                                                         ccp_alpha=0.0,
                                                         class_weight=None,
                                                         criterion='gini',
                                                         max_depth=None,
                                                         max_features='sqrt',
                                                         max_leaf_nodes=None,
                                                         max_samples=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_jobs=-1,
                                                         oob_score=False,
                                                         random_state=5680,
                                                         verbose=0,
                                                         warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=5680)
2022-11-15 23:31:19,481:INFO:create_model() successfully completed......................................
2022-11-15 23:31:19,723:INFO:SubProcess create_model() end ==================================
2022-11-15 23:31:19,735:INFO:master_model_container: 21
2022-11-15 23:31:19,735:INFO:display_container: 8
2022-11-15 23:31:19,736:INFO:AdaBoostClassifier(algorithm='SAMME.R',
                   base_estimator=RandomForestClassifier(bootstrap=True,
                                                         ccp_alpha=0.0,
                                                         class_weight=None,
                                                         criterion='gini',
                                                         max_depth=None,
                                                         max_features='sqrt',
                                                         max_leaf_nodes=None,
                                                         max_samples=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_jobs=-1,
                                                         oob_score=False,
                                                         random_state=5680,
                                                         verbose=0,
                                                         warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=5680)
2022-11-15 23:31:19,736:INFO:ensemble_model() successfully completed......................................
2022-11-15 23:33:34,501:INFO:Initializing evaluate_model()
2022-11-15 23:33:34,501:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2022-11-15 23:33:34,527:INFO:Initializing plot_model()
2022-11-15 23:33:34,527:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, system=True)
2022-11-15 23:33:34,527:INFO:Checking exceptions
2022-11-15 23:33:34,531:INFO:Preloading libraries
2022-11-15 23:33:34,531:INFO:Copying training dataset
2022-11-15 23:33:34,531:INFO:Plot type: pipeline
2022-11-15 23:33:34,788:INFO:Visual Rendered Successfully
2022-11-15 23:33:35,034:INFO:plot_model() successfully completed......................................
2022-11-15 23:33:38,180:INFO:Initializing plot_model()
2022-11-15 23:33:38,181:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, system=True)
2022-11-15 23:33:38,181:INFO:Checking exceptions
2022-11-15 23:33:38,185:INFO:Preloading libraries
2022-11-15 23:33:38,185:INFO:Copying training dataset
2022-11-15 23:33:38,185:INFO:Plot type: parameter
2022-11-15 23:33:38,189:INFO:Visual Rendered Successfully
2022-11-15 23:33:38,433:INFO:plot_model() successfully completed......................................
2022-11-15 23:33:40,270:INFO:Initializing plot_model()
2022-11-15 23:33:40,270:INFO:plot_model(plot=dimension, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>, system=True)
2022-11-15 23:33:40,270:INFO:Checking exceptions
2022-11-15 23:33:40,274:INFO:Preloading libraries
2022-11-15 23:33:40,275:INFO:Copying training dataset
2022-11-15 23:33:40,275:INFO:Plot type: dimension
2022-11-15 23:33:40,352:INFO:Fitting StandardScaler()
2022-11-15 23:33:40,370:INFO:Fitting PCA()
2022-11-15 23:33:40,439:INFO:Fitting & Transforming Model
2022-11-15 23:33:40,929:INFO:Visual Rendered Successfully
2022-11-15 23:33:41,171:INFO:plot_model() successfully completed......................................
2022-11-15 23:34:12,758:INFO:Initializing interpret_model()
2022-11-15 23:34:12,759:INFO:interpret_model(estimator=GaussianNB(priors=None, var_smoothing=1e-09), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>)
2022-11-15 23:34:12,759:INFO:Checking exceptions
2022-11-15 23:34:12,760:INFO:Soft dependency imported: shap: 0.41.0
2022-11-15 23:34:43,643:INFO:Initializing interpret_model()
2022-11-15 23:34:43,643:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5680, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>)
2022-11-15 23:34:43,643:INFO:Checking exceptions
2022-11-15 23:34:43,643:INFO:Soft dependency imported: shap: 0.41.0
2022-11-15 23:34:43,658:INFO:plot type: summary
2022-11-15 23:34:43,658:INFO:Creating TreeExplainer
2022-11-15 23:34:43,671:INFO:Compiling shap values
2022-11-15 23:34:45,553:INFO:Visual Rendered Successfully
2022-11-15 23:34:45,553:INFO:interpret_model() successfully completed......................................
2022-11-15 23:36:04,855:INFO:Initializing interpret_model()
2022-11-15 23:36:04,855:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5680, verbose=0, warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=reason, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C47922F310>)
2022-11-15 23:36:04,855:INFO:Checking exceptions
2022-11-15 23:36:04,855:INFO:Soft dependency imported: shap: 0.41.0
2022-11-15 23:36:04,871:INFO:plot type: reason
2022-11-15 23:36:04,871:INFO:model type detected: type 1
2022-11-15 23:36:04,871:INFO:Creating TreeExplainer
2022-11-15 23:36:04,879:INFO:Compiling shap values
2022-11-15 23:36:04,879:WARNING:Observation set to None. Model agnostic plot will be rendered.
2022-11-15 23:36:07,048:INFO:Visual Rendered Successfully
2022-11-15 23:36:07,048:INFO:interpret_model() successfully completed......................................
